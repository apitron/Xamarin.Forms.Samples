<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Apitron.PDF.Kit</name>
  </assembly>
  <members>
    <member name="T:Apitron.Licensing.ApitronLicenseAttribute">
      <summary>
            An attribute used for licensing, every product has its own specialized implementation of this class.
            Its role is to allow a user to set a license string, alternative way is to use <see cref="M:Apitron.Licensing.License.SetLicense(System.String)" /> function.
            </summary>
    </member>
    <member name="P:Apitron.Licensing.ApitronLicenseAttribute.License">
      <summary>
            Gets the license string.
            </summary>
    </member>
    <member name="T:Apitron.Licensing.License">
      <summary>
            Represents a license object, it can be used for obtaining license state or setting a license.
            License also can be set using specialized version of the <see cref="T:Apitron.Licensing.ApitronLicenseAttribute" />.
            </summary>
    </member>
    <member name="M:Apitron.Licensing.License.SetLicense(System.String)">
      <summary>
            Sets the license.
            </summary>
      <param name="license">The license string.</param>
      <exception cref="T:System.ArgumentException">If license string is null or empty.</exception>
    </member>
    <member name="P:Apitron.Licensing.License.LicenseState">
      <summary>
            Gets the state of the license.
            </summary>
      <value>
            The state of the license.
            </value>
    </member>
    <member name="T:Apitron.Licensing.LicenseState">
      <summary>
            Contains possible diagnostic codes that might be set when you apply a license.
            </summary>
    </member>
    <member name="F:Apitron.Licensing.LicenseState.InvalidLicense">
      <summary>
            License you are trying to set is invalid, so it's not the license the component is expecting.
            </summary>
    </member>
    <member name="F:Apitron.Licensing.LicenseState.Accepted">
      <summary>
            It means that license has been accepted by the component.
            </summary>
    </member>
    <member name="F:Apitron.Licensing.LicenseState.LicenseIsExpired">
      <summary>
            Indicates that license is expired, so you have to renew your subscription in order to get this component active again.
            But you still can use it with latest version released prior to expiration.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Configuration.EngineSettings">
      <summary>
            This class represents a mechanism to configure processing of the PDF.  
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Configuration.EngineSettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Configuration.EngineSettings" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Configuration.EngineSettings.RegisterUserFont(System.IO.Stream)">
      <summary>
            Registers the font in library's font cache.       
            </summary>
      <param name="fontDataStream">The font data. Only TrueType(.ttf) and TrueType collection (.ttc) fonts are accepted.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="fontDataStream" /> is null.</exception>
      <exception cref="T:System.FormatException">If there was an error during font registration. It means that the <paramref name="fontDataStream" /> doesn't contain a valid font data.</exception>        s
        </member>
    <member name="M:Apitron.PDF.Kit.Configuration.EngineSettings.UnregisterUserFonts">
      <summary>
            Unregisters all user fonts from library's font cache.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Configuration.EngineSettings.MemoryAllocationMode">
      <summary>
            Gets or sets the memory allocation mode.
            </summary>
      <value>
            The memory allocation mode to be used by document processor.
            </value>
      <Default>
        <see cref="!:MemoryAllocationMode.Normal" />
      </Default>
    </member>
    <member name="P:Apitron.PDF.Kit.Configuration.EngineSettings.ResourceSizeLimit">
      <summary>
            Defines the resouce size limit in bytes that controls whether the resouce should be loaded to RAM or cached to disk. Valid only if the corressponding setting is set. 
            See <see cref="P:Apitron.PDF.Kit.Configuration.EngineSettings.MemoryAllocationMode" /> property.
            </summary>
      <remarks>
            Setting this property has effect only if <see cref="P:Apitron.PDF.Kit.Configuration.EngineSettings.MemoryAllocationMode" /> is set to <see cref="!:MemoryAllocationMode.ResourcesLowMemory" />.
            Minimal value is: 1048576 bytes (1 megabyte)
            Default valus is: 5242880 bytes (5 megabytes)
            </remarks>
    </member>
    <member name="P:Apitron.PDF.Kit.Configuration.EngineSettings.GlobalSettings">
      <summary>
            Gets the global settings.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Configuration.EngineSettings.SystemFontPaths">
      <summary>
            A read-only collection of system folders where the rendering engine tries to find font files by default,
            e.g. for windows it will be %WINDOWS_FOLDER%\fonts.
            If you wish to add custom font search path see <see cref="P:Apitron.PDF.Kit.Configuration.EngineSettings.UserFontPaths" /> property.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Configuration.EngineSettings.UserFontPaths">
      <summary>
            An editable collection of user-defined folders where the pdf kit engine tries to find font files in addition to system folders.
            If the application is opened in trusted mode the paths are expected to be file system based, otherwise they will be processed as isolated storage based paths.
            An <see cref="T:System.ArgumentException" /> will be thrown as a result of attemp to add <c>null</c> or <c>empty</c> value.
            </summary>
      <value>
            Empty by default.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Configuration.EngineSettings.UserFontMappings">
      <summary>
            Gets a user font mappings dictionary, which can be used to map fonts used in document to a font with a particular name when font substitution happens.
            These mappings are being evaluated in the order of addition when the engine needs to resolve the font.
            Special font names are supported: "*" maps to all fonts. 
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Configuration.MemoryAllocationMode">
      <summary>
            Defines memory allocation modes that can be used during PDF processing.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Configuration.MemoryAllocationMode.Normal">
      <summary>
            Default memory allocation mode, all resouces are being loaded to RAM.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Configuration.MemoryAllocationMode.ResourcesLowMemory">
      <summary>
            Only resources taking less than <see cref="P:Apitron.PDF.Kit.Configuration.EngineSettings.ResourceSizeLimit" /> will be kept in memory, other resources will be cached to disk.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.ErrorHandling.DocumentSaveException">
      <summary>
            Represents an exception to be thrown if a document saving task fails. 
            Please contact support with a ready-to-run sample demonstrating the problem.    
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Extraction.ImageInfo">
      <summary>
            This class represents an image descriptor to be used for the images extracted from PDF content.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Extraction.ImageInfo.SaveToBitmap(System.IO.Stream)">
      <summary>
            Saves referenced image to given stream as a bitmap image having 32bpp format.
            </summary>
      <exception cref="T:System.ArgumentNullException">If stream is null.</exception>
      <exception cref="T:System.InvalidOperationException">If stream is not writeable.</exception>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Extraction.ImageInfo.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Apitron.PDF.Kit.Extraction.ImageInfo.Finalize">
      <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Apitron.PDF.Kit.Extraction.ImageInfo" /> is reclaimed by garbage collection.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.ImageInfo.Palette">
      <summary>
            Gets the colorspace palette (if colorspace is indexed).
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.ImageInfo.CodecName">
      <summary>
            Gets the codec name (as defined in PDF specification), is being used to decompress the image.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.ImageInfo.ColorSpace">
      <summary>
            Gets the colorspace name as defined in PDF specification.
            </summary>
      <remarks>In case of evaluation mode it will always return ARGB.</remarks>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.ImageInfo.Width">
      <summary>
            Gets the width of the image, in samples.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.ImageInfo.Height">
      <summary>
            Gets the height of the image, in samples.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.ImageInfo.BitsPerComponent">
      <summary>
            Gets the number of bits used to represent each color component (decompressed data). 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.ImageInfo.RawData">
      <summary>
            Gets the raw data of the image (encoded data as it is written in the PDF file).
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.ImageInfo.DecodedData">
      <summary>
            Gets the decoded data of the image.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Extraction.Palette">
      <summary>
            This class represents a color palette.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.Palette.BaseColorSpace">
      <summary>
            Gets the name of the base colorspace as defined in PDF specification.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.Palette.Data">
      <summary>
            Gets the palette data.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Extraction.Palette.Count">
      <summary>
            Gets the count of colors in the palette.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Extraction.TextExtractionOptions">
      <summary>
            This enum represents a text extraction options.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.RawText">
      <summary>
            Text will be extracted as it appears in PDF content without any formatting.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.FormattedText">
      <summary>
            Text will be extracted as it appears in PDF content and intelligent formatting will be applied.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.TaggedText">
      <summary>
            Text will be extracted in xml format.
            <example>&lt;page&gt;&lt;textblock attribute1 ... attributeN&gt;text1&lt;/textblock&gt;...&lt;textblock&gt;text2&lt;/textblock&gt;&lt;/page&gt;</example></summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.HtmlFragment">
      <summary>
            Text will be extracted in html format. Page content will be wrapped by &lt;div&gt; and each text fragment will be represented by a preformatted, absolutely positioned, styled block.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.HtmlPage">
      <summary>
            Text will be extracted in html format. Page content will be represented by a complete html page, and each text fragment by a preformatted, absolutely positioned, styled block.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.HtmlText">
      <summary>
            Obsolete option. Please use <see cref="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.HtmlPage" /> or <see cref="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.HtmlFragment" /> instead.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.ResourceContext">
      <summary>
            This class represents a low-level PDF abstraction.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.ResourceContext.syncRoot">
      <summary>
            The sync root.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.DestinationCollection">
      <summary>
            This class represents a named destination collection.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.InternalDictionary`2">
      <summary>
            This class represents an abstract internal dictionary.
            </summary>
      <typeparam name="TKey">The type of the key.</typeparam>
      <typeparam name="TValue">The type of the value.</typeparam>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Resource">
      <summary>
            This class represents an abstract resource.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Resource.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.Resources.ResourceType)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="resourceType">Type of the resource.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Resource.GetTypedModel``1">
      <summary>
            Gets the typed model.
            </summary>
      <typeparam name="T">
      </typeparam>
      <returns>
      </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Resource.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
      <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Resource.Equals(Apitron.PDF.Kit.FixedLayout.Resources.Resource)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Resource.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Resource.op_Equality(Apitron.PDF.Kit.FixedLayout.Resources.Resource,Apitron.PDF.Kit.FixedLayout.Resources.Resource)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="left">The left.</param>
      <param name="right">The right.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Resource.op_Inequality(Apitron.PDF.Kit.FixedLayout.Resources.Resource,Apitron.PDF.Kit.FixedLayout.Resources.Resource)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="left">The left.</param>
      <param name="right">The right.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Resource.ID">
      <summary>
            Gets the unique ID of the resource.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Resource.ResourceType">
      <summary>
            Gets the resource type.
            </summary>
      <value>
            The type of the resource.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Resource.CanBeExported">
      <summary>
            Gets a value indicating whether this instance can be exported.
            </summary>
      <value>
        <c>true</c> if this instance can be exported; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalDictionary`2.#ctor(Apitron.PDF.Kit.FixedDocument,System.String,Apitron.PDF.Kit.FixedLayout.Resources.ResourceType)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="document">The document.</param>
      <param name="resourceID">The id.</param>
      <param name="resourceType">Type of the resource.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalDictionary`2.Remove(`0)">
      <summary>
            Removes a value for the specified key.
            </summary>
      <param name="key">The key.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalDictionary`2.Add(`0,`1)">
      <summary>
            Adds the specified key and value to the collection.
            </summary>
      <param name="key">The key.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalDictionary`2.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.InternalDictionary`2.Item(`0)">
      <summary>
            Gets or sets the <see cref="!:TValue" /> with the specified key.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.InternalDictionary`2.Count">
      <summary>
            Gets the count.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.EmbeddedFile">
      <summary>
            This class represents an embedded file.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.UndefinedResource">
      <summary>
            This class represents an abstract undefined resource.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.UndefinedResource.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.EmbeddedFile.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fileName">Name of the file.</param>
      <param name="mime">The MIME type.</param>
      <example>
        <code lang="cs">
            // create embedded file
            EmbeddedFile embeddedFile = new EmbeddedFile( @"../FileToEmbed.pdf", "type/pdf" );
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.EmbeddedFile.GetStream">
      <summary>
            Gets the attachment stream.
            </summary>
      <returns>Returns memory stream with data.</returns>
      <example>
        <code lang="cs">
            // get attached file ("Attach1") as stream.
            System.IO.Stream attachStream = document.Attachments["Attach1"].GetStream();
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.EmbeddedFileCollection">
      <summary>
            This class represents an embedded files collection.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.EmbeddedFileCollection.RemoveAttachment(System.String)">
      <summary>
            Removes the attachment.
            </summary>
      <param name="key">The key.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.FileSpecification">
      <summary>
            This class represents a file specification.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.FileSpecification.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.PathOperatingSystem)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.FileSpecification" /> class.
            </summary>
      <param name="path">The path.</param>
      <param name="pathOperatingSystem">The path's operating system.</param>
      <example>
        <code lang="cs">
            // create file specification
            FileSpecification specification = new FileSpecification( "..\\Documents\\PDF_reference_1-7.pdf", PathOperatingSystem.DOS);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FileSpecification.Path">
      <summary>
            Gets the String instances that contain file or directory path information.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FileSpecification.PathOperatingSystem">
      <summary>
            Gets the operating system.
            </summary>
      <example>
        <code lang="cs">
            // create file specification
            FileSpecification specification1 = new FileSpecification("..\\Documents\\PDF_reference_1-7.pdf", PathOperatingSystem.DOS);
            // OR
            FileSpecification specification = new FileSpecification("..\\Documents\\PDF_reference_1-7.pdf", PathOperatingSystem.MacOS);
            // OR
            FileSpecification specification = new FileSpecification("..\\Documents\\PDF_reference_1-7.pdf", PathOperatingSystem.UNIX);
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedDocument">
      <summary>
            This class represents a PDF document.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.#ctor(Apitron.PDF.Kit.PdfStandard)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> class.
            </summary>
      <param name="pdfStandard">PDF standard to be used.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.#ctor(Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager,Apitron.PDF.Kit.PdfStandard)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> class.
            </summary>
      <param name="pdfStandard">The <see cref="P:Apitron.PDF.Kit.FixedDocument.PdfStandard" /> to be used during edit and save.</param>
      <param name="resourceManager">The resource manager.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.#ctor(Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> class.
            </summary>
      <param name="resourceManager">The resource manager.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> class.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.#ctor(System.IO.Stream,Apitron.PDF.Kit.PdfStandard)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="standard">The <see cref="P:Apitron.PDF.Kit.FixedDocument.PdfStandard" /> to be used during edit and save.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.#ctor(System.IO.Stream,System.String,Apitron.PDF.Kit.PdfStandard)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="password">The password.</param>
      <param name="standard">The <see cref="P:Apitron.PDF.Kit.FixedDocument.PdfStandard" /> to be used during edit and save.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.#ctor(System.IO.Stream,Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager,System.String,Apitron.PDF.Kit.PdfStandard)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="resourceManager">The resource manager.</param>
      <param name="password">The password.</param>
      <param name="standard">The <see cref="P:Apitron.PDF.Kit.FixedDocument.PdfStandard" /> to be used during edit and save.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.Save(System.IO.Stream)">
      <summary>
            Saves the document into the specified stream.
            </summary>
      <param name="stream">The stream.</param>
      <exception cref="T:System.ArgumentNullException">If given <paramref name="stream" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">If a consistency problem is found with the given <paramref name="stream" />.
            Exception message will contain the description of the particular problem.</exception>
      <exception cref="T:Apitron.PDF.Kit.ErrorHandling.DocumentSaveException">If document saving fails for any other reason.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.Save">
      <summary>
            Saves the document using incremental update. Appends changes to the source pdf file.
            </summary>
      <exception cref="T:System.InvalidOperationException">If a consistency problem is found with the stream it was created from.
            Exception message will contain the description of the particular problem.</exception>
      <exception cref="T:Apitron.PDF.Kit.ErrorHandling.DocumentSaveException">If document saving fails for any other reason.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedDocument.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> class.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.PageMode">
      <summary>
            Gets or sets a value specifying how the document shall be displayed when opened.
            </summary>
      <value>
            The page mode.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.PageLayout">
      <summary>
            Gets or sets a value specifying the page layout shall be used when the document is opened.
            </summary>
      <value>
            The page layout.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.ViewerPreferences">
      <summary>
            Gets the viewer preferences.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.Producer">
      <summary>
            Gets the document producer.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.Title">
      <summary>
            Gets or sets the document title.
            </summary>
      <value>
            The title.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.Subject">
      <summary>
            Gets or sets the document subject.
            </summary>
      <value>
            The subject.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.Keywords">
      <summary>
            Gets or sets the document keywords.
            </summary>
      <value>
            The keywords.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.Author">
      <summary>
            Gets or sets the document author.
            </summary>
      <value>
            The author.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.SecuritySettings">
      <summary>
            Gets or sets the privileges.
            </summary>
      <value>
            The privileges.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.Pages">
      <summary>
            Gets the pages collection.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.Attachments">
      <summary>
            Gets the attachments collection.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.Destinations">
      <summary>
            Gets the named destinations.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.PageLabels">
      <summary>
            Gets the page labels.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.ResourceManager">
      <summary>
            Gets the resource manager.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.ArticleThreads">
      <summary>
            Gets the article threads.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.Bookmarks">
      <summary>
            Gets the bookmarks.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.AcroForm">
      <summary>
            Gets the contents and properties of a document’s interactive form
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedDocument.PdfStandard">
      <summary>
            Gets a PDF standard to be used during document generation.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent">
      <summary>
            This class represents a clipped contents.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.Shape">
      <summary>
            This class represents an abstract PDF shape.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.initialCount">
      <summary>
            Counter.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.#ctor(System.Collections.Generic.IEnumerable{Apitron.Pdf.Core.Syntax.Rendering.PageContent.Operators.Commands.ICommand})">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent" /> class.
            </summary>
      <param name="commands">The commands.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent" /> class with clipping.
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <example>
        <code lang="cs">
            ClippedContent content = new ClippedContent(0, 0, 100, 100);
            Page page = new Page(new PageBoundary(Boundaries.A4));
            page.Content.AppendContent(content);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.#ctor(Apitron.PDF.Kit.FixedLayout.Content.Path,Apitron.PDF.Kit.FixedLayout.Content.FillRule)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent" /> class.
            </summary>
      <param name="clippingPath">The clipping path.</param>
      <param name="fillRule">The fill rule.</param>
      <example>
        <code lang="cs">
            ClippedContent clippedContent = new ClippedContent(path);
            clippedContent.FillPath(path);
            page.Content.AppendContent(clippedContent);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.#ctor(Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent" /> class.
            </summary>
      <param name="boundary">The boundary.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent" /> class.
            </summary>
      <param name="clippingBoundary">The clipping boundary.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetDeviceNonStrokingColor(System.Double[])">
      <summary>
            Sets the device color as a current non stroking color.
            The number of array elements determines the colour space in which the colour shall be defined:
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK        
            </summary>
      <param name="color">The color.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetDeviceStrokingColor(System.Double[])">
      <summary>
            Sets the device color as a current stroking color.
            The number of array elements determines the colour space in which the colour shall be defined:
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK        
            </summary>
      <param name="color">The color.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetNonStrokingColorSpace(System.String)">
      <summary>
            Sets the non strking color space.
            </summary>
      <param name="colorSpaceID">The color space ID.</param>
      <example>
        <code lang="cs">
            document.ResourceManager.RegisterResource(new CmykColorSpace("CMYK"));
            page.Content.SetNonStrokingColorSpace("CMYK");
            page.Content.SetNonStrokingColor(0.99, 0.33, 0.33, 0.67);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetStrokingColorSpace(System.String)">
      <summary>
            Sets the stroking color space.
            </summary>
      <param name="colorSpaceID">The color space ID.</param>
      <example>
        <code lang="cs">
            document.ResourceManager.RegisterResource(new RgbColorSpace("RGB"));
            page.Content.SetStrokingColorSpace("RGB");
            page.Content.SetStrokingColor(0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetNonStrokingColor(System.Double[])">
      <summary>
            Sets the current color for the non stroking operations.
            </summary>
      <param name="components">The components.</param>
      <example>
        <code lang="cs">
            document.ResourceManager.RegisterResource(new RgbColorSpace("RGB"));
            page.Content.SetNonStrokingColorSpace("RGB");
            page.Content.SetNonStrokingColor(0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetStrokingColor(System.Double[])">
      <summary>
            Sets the current color for the stroking operations.
            </summary>
      <param name="components">The components.</param>
      <example>
        <code lang="cs">
            document.ResourceManager.RegisterResource(new RgbColorSpace("RGB"));
            page.Content.SetStrokingColorSpace("RGB");
            page.Content.SetStrokingColor(0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetNonStrokingColor(System.String,System.Double[])">
      <summary>
            Sets the current color for the non stroking operations.
            </summary>
      <param name="name">The name.</param>
      <param name="components">The components.</param>
      <example>
        <code lang="cs">
            page.Content.SetNonStrokingColor("color", 0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetStrokingColor(System.String,System.Double[])">
      <summary>
            Sets the current color for the stroking operations.
            </summary>
      <param name="name">The name.</param>
      <param name="components">The components.</param>
      <example>
        <code lang="cs">
            page.Content.SetStrokingColor("color", 0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.FillPath(Apitron.PDF.Kit.FixedLayout.Content.Path,Apitron.PDF.Kit.FixedLayout.Content.FillRule)">
      <summary>
            Fills the path using specified filling rule..
            </summary>
      <param name="path">The path.</param>
      <param name="fillRule">The fill rule.</param>
      <example>
        <code lang="cs">
            page.Content.FillPath(path);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.StrokePath(Apitron.PDF.Kit.FixedLayout.Content.Path)">
      <summary>
            Strokes the path.
            </summary>
      <param name="path">The path.</param>
      <example>
        <code lang="cs">
            page.Content.StrokePath(path);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.FillAndStrokePath(Apitron.PDF.Kit.FixedLayout.Content.Path,Apitron.PDF.Kit.FixedLayout.Content.FillRule)">
      <summary>
            Fills and stroke the path using specified filling rule.
            </summary>
      <param name="path">The path.</param>
      <param name="fillRule">The fill rule.</param>
      <example>
        <code lang="cs">
            page.Content.FillAndStrokePath(path);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetLineWidth(System.Double)">
      <summary>
            Sets the current line width.
            </summary>
      <param name="lineWidth">Width of the line.</param>
      <example>
        <code lang="cs">
            // thickness of the line will be 4
            page.Content.SetLineWidth(4);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetLineDashPattern(System.Single[],System.Single)">
      <summary>
            Sets the line dash pattern.
            </summary>
      <param name="onOffArray">The on off array.</param>
      <param name="phase">The phase.</param>
      <example>
        <code lang="cs">
            page.Content.SetLineDashPattern(new float[] { 2, 1, 4, 1 }, 3);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetLineDashPattern(System.Int32[],System.Int32)">
      <summary>
            Sets the line dash pattern.
            </summary>
      <param name="onOffArray">The on off array.</param>
      <param name="phase">The phase.</param>
      <example>
        <code lang="cs">
            page.Content.SetLineDashPattern(new int[] { 2, 1, 4, 1 }, 3);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetLineCapStyle(Apitron.PDF.Kit.FixedLayout.Content.LineCapStyle)">
      <summary>
            Sets the line cap style.
            </summary>
      <param name="lineCap">The line cap.</param>
      <example>
        <code lang="cs">
            // squared off at the endpoint of the path
            page.Content.SetLineCapStyle(LineCapStyle.Butt);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetLineJoinStyle(Apitron.PDF.Kit.FixedLayout.Content.LineJoinStyle)">
      <summary>
            Sets the line join style.
            </summary>
      <param name="lineJoin">The line join.</param>
      <example>
        <code lang="cs">
            // path with rounded joins
            page.Content.SetLineJoinStyle(LineJoinStyle.Round);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetMitterLimit(System.Double)">
      <summary>
            Sets the mitter limit.
            </summary>
      <param name="mitterLimit">The mitter limit.</param>
      <example>
        <code lang="cs">
            page.Content.SetMitterLimit(2);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SaveGraphicsState">
      <summary>
            Saves the current graphics state.
            </summary>
      <example>
        <code lang="cs">
            ClippedContent clippedContent = new ClippedContent(0, 0, 100, 100);
            clippedContent.SaveGraphicsState();
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.RestoreGraphicsState">
      <summary>
            Restores the state of the graphics.
            </summary>
      <example>
        <code lang="cs">
            ClippedContent clippedContent = new ClippedContent(0, 0, 100, 100);
            clippedContent.RestoreGraphicsState();
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetGraphicsState(System.String)">
      <summary>
            Sets the graphics state with special parameters.
            </summary>
      <param name="gsName">Name of the gs.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.AppendText(Apitron.PDF.Kit.FixedLayout.Content.TextObject)">
      <summary>
            Adds the text object.
            </summary>
      <param name="text">The text.</param>
      <example>
        <code lang="cs">
            // create text object
            TextObject text = new TextObject("Helvetica", 14);
            text.SetTextMatrix(1, 0, 0, 1, 10, 10);
            text.AppendText("Hello world!");
            
            // add page
            Page page = new Page(new PageBoundary(Boundaries.A4));
            
            // append our text
            page.Content.AppendText(text);
            document.Pages.Add(page);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.ModifyCurrentTransformationMatrix(System.Double[])">
      <summary>
            Modifies the current transformation matrix.
            </summary>
      <param name="matrix">The initial transformation.</param>
      <example>
        <code lang="cs">
            // apply transformations for page content
            page.Content.ModifyCurrentTransformationMatrix(1, 0, 0, 1, 20, 500);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.ModifyCurrentTransformationMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Modifies the current transformation matrix.
            </summary>
      <param name="a">The a.</param>
      <param name="b">The b.</param>
      <param name="c">The c.</param>
      <param name="d">The d.</param>
      <param name="e">The e.</param>
      <param name="f">The f.</param>
      <example>
        <code lang="cs">
             // create text object
            TextObject text = new TextObject("Helvetica", 34);
            text.SetTextMatrix(1, 0, 0, 1, 10, 10);
            text.AppendText("Hello world!");
            
            ClippedContent clippedContent = new ClippedContent(0, 0, 1000, 1000);
            clippedContent.SaveGraphicsState();
            // Translations
            clippedContent.ModifyCurrentTransformationMatrix(1, 0, 0, 1, 130, 30);
            OR
            // Scale transformation
            clippedContent.ModifyCurrentTransformationMatrix(2, 0, 0, 2, 0, 0);
            OR
            // Rotate transformation
            clippedContent.ModifyCurrentTransformationMatrix(Math.Cos(a), Math.Sin(a), -Math.Sin(a), Math.Cos(a), 130, 30);
            OR
            // Skew transformation
            clippedContent.ModifyCurrentTransformationMatrix(1, Math.Tan(a), Math.Tan(-b), 1, 300, 300);
            clippedContent.AppendText(text);
            clippedContent.RestoreGraphicsState();
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetScale(System.Double,System.Double)">
      <summary>
            Sets scale to the current transformation matrix.Equivalent of call ModifyCurrentTransformationMatrix(xScale, 0, 0, yScale, 0, 0)
            </summary>
      <param name="xScale">X Scale factor.</param>
      <param name="yScale">Y Scale factor.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetRotate(System.Double)">
      <summary>
            Sets rotate current transformation matrix using alpha. Equivalent of call ModifyCurrentTransformationMatrix(Math.Cos(alpha), Math.Sin(alpha), -Math.Sin(alpha), Math.Cos(alpha), 0, 0)
            </summary>
      <param name="alpha">Angle to rotate, measured in radians.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.SetSkrew(System.Double,System.Double)">
      <summary>
            Skrews current strnsformation matrix using xAngle and yAngle. Equivalent of call ModifyCurrentTransformationMatrix(1, Math.Tan(xAlpha), Math.Tan(yAlpha), 1, 0, 0)
            </summary>
      <param name="xAlpha">Angle to skrew x axis, measured in radians.</param>
      <param name="yAlpha">Angle to skrew y axis, measured in radians.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.Translate(System.Double,System.Double)">
      <summary>
            Translates current transformation matrix. Equivalent of call ModifyCurrentTransformationMatrix(1, 0, 0, 1, xOffset, yOffset)
            </summary>
      <param name="xOffset">The x offset.</param>
      <param name="yOffset">The y offset.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.AppendImage(System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Appends an image.
            </summary>
      <param name="resourceID">The image resource ID.</param>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <example>
        <code lang="cs">
            // register our image as a resource
            FixedLayout.Resources.XObjects.Image image = new FixedLayout.Resources.XObjects.Image("Image1", "image.png");
            document.ResourceManager.RegisterResource(image);
            
            // add page
            Page page = new Page(new PageBoundary(Boundaries.A3));
            
            // append our image
            page.Content.AppendImage("Image1", 10, 50, image.Width, image.Height);
            document.Pages.Add(page);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.AppendXObject(System.String)">
      <summary>
             Appends the XObject.
             </summary>
      <param name="resourceID">The resource ID or path to the image file.</param>
      <example>
        <code lang="cs">
             // register our image as a resource
             FixedLayout.Resources.XObjects.Image image = new FixedLayout.Resources.XObjects.Image("Image1", "image.jpg");
             document.ResourceManager.RegisterResource(image);
            
             // add page
             Page page = new Page(new PageBoundary(Boundaries.A4));
             
             // add clipped content object
             ClippedContent clippedContent = new ClippedContent(50, 50, (Boundaries.A4).Width - 50, (Boundaries.A4).Height -50);
            
             // add transformation and append our XObject
             clippedContent.ModifyCurrentTransformationMatrix((Boundaries.A4).Width - 50, 0, 0, (Boundaries.A4).Height - 50, 0, 0);
             clippedContent.AppendXObject("Image1");
             
             // append clipped content and include page into the document 
             page.Content.AppendContent(clippedContent);
             document.Pages.Add(page);
             </code>
      </example>
      <remarks>
             The correspondence between image space and user space is constant: the unit square of user space, bounded by user coordinates 
             (0, 0) and (1, 1), corresponds to the boundary of the image in image space. Following the normal convention for user space,
             the coordinate (0, 0) is at the lower-left corner of this square, corresponding to coordinates (0, h) in image space. 
             The implicit transformation from image space to user space, if specified explicitly, would be described by the matrix [1⁄w 0 0 -1⁄h 0 1].
             So, before append image into the content should be modified transformation matrix 
             </remarks>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.AppendXObject(System.String,System.Double,System.Double)">
      <summary>
             Appends the XObject using additional parameters.
             </summary>
      <example>
        <code lang="cs">
             // register our image as a resource
             FixedLayout.Resources.XObjects.Image image = new FixedLayout.Resources.XObjects.Image("Image1", "image.jpg");
             document.ResourceManager.RegisterResource(image);
            
             // create page
             Page page = new Page(new PageBoundary(Boundaries.A4));
             
             // append our XObject
             page.Content.AppendXObject("Image1", 50, 50);
             
             // append the page into the document 
             page.Content.AppendContent(clippedContent);
             document.Pages.Add(page);
             </code>
      </example>
      <param name="resourceId">The resource id.</param>
      <param name="xOffset">The x offset from the current transformation matrix.</param>
      <param name="yOffset">The y offset from the current transformation matrix.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.AppendContentElement(Apitron.PDF.Kit.FlowLayout.ContentElement,System.Double,System.Double)">
      <summary>
            Appends the content element.
            </summary>
      <param name="contentElement">The content element.</param>
      <param name="width">The required width.</param>
      <param name="height">The required height.</param>
      <example>
        <code lang="cs">
            // append content element FlowLayout.Content.Section
            page.Content.AppendContentElement( section, 100, 100 );
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.AppendContent(Apitron.PDF.Kit.FixedLayout.Content.ClippedContent)">
      <summary>
            Appends the content.
            </summary>
      <param name="content">The content.</param>
      <example>
        <code lang="cs">
            // add clipped content object
            ClippedContent content = new ClippedContent(0, 0, 100, 100);
            Page page = new Page(new PageBoundary(Boundaries.A4));
            page.Content.AppendContent(content);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent.IsModified">
      <summary>
            Gets a value indicating whether this instance is modified.
            </summary>
      <value>
        <c>true</c> if this instance is modified; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.FillRule">
      <summary>
            This enum represents allowed filling rules. 
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.FillRule.Nonzero">
      <summary>
            Nonzero Winding Number Rule.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.FillRule.EvenOdd">
      <summary>
            Even-Odd rule
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.LineCapStyle">
      <summary>
            The line cap style shall specify the shape that shall be used at the ends of open subpaths (and dashes, if any) when they are stroked.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.LineCapStyle.Butt">
      <summary>
            Butt cap. The stroke shall be squared off at the endpoint of the path. There shall be no projection beyond the end of the path.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.LineCapStyle.Round">
      <summary>
            Round cap. A semicircular arc with a diameter equal to the line width shall be drawn around the endpoint and shall be filled in.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.LineCapStyle.Square">
      <summary>
            Projecting square cap. The stroke shall continue beyond the endpoint of the path for a distance equal to half the line width and shall besquared off.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.LineJoinStyle">
      <summary>
            The line join style shall specify the shape to be used at the corners of paths that are stroked.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.LineJoinStyle.Mitter">
      <summary>
            Miter join. The outer edges of the strokes for the two segments shall beextended until they meet at an angle, as in a picture frame. 
            If the segments meet at too sharp an angle, a bevel join will be used instead.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.LineJoinStyle.Round">
      <summary>
            Round join. An arc of a circle with a diameter equal to the line width shall be drawn around the point where the two segments meet, 
            connecting the outer edges of the strokes for the two segments. This pieslice-shaped figure will be filled in, producing a rounded corner.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.LineJoinStyle.Bevel">
      <summary>
            Bevel join. The two segments shall be finished with butt caps and the resulting notch beyond the ends of the segments shall be filled with a triangle.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.Content">
      <summary>
            This class represents a page content structure.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Content.#ctor(Apitron.PDF.Kit.FixedLayout.Content.ClippedContent,Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Content" /> class.
            </summary>
      <param name="clippedContent">Content of the clipped.</param>
      <param name="boundary">The boundary.</param>
      <example>
        <code lang="cs">
            Content content = new Content(new ClippedContent(0,0,100,100), Boundaries.A4);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Content.PaintShading(System.String,Apitron.PDF.Kit.FixedLayout.Content.Path)">
      <summary>
            Paint the shape and colour shading described by a shading, subject to the current clipping path (or intersection with the path specified).
            The current colour in the graphics state is neither used nor altered. The effect is different from that of painting a path using a
            shading pattern as the current colour.
            </summary>
      <param name="shadingResourceId">The shading resource id.</param>
      <param name="path">The path.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.Path">
      <summary>
            This class represents a drawing path structure.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Path" /> class.
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <example>
        <code lang="cs">
            // create new path
            FixedLayout.Content.Path path = new FixedLayout.Content.Path(100, 100);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Path" /> class.
            </summary>
      <example>
        <code lang="cs">
            // create new rectangle path
            FixedLayout.Content.Path path = new FixedLayout.Content.Path();
            ...
            page.Content.StrokePath(path);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.CreateCircle(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Path" /> class.
            </summary>
      <param name="x">Center X coordinate of the circle.</param>
      <param name="y">Center Y coordinate of the circle.</param>
      <param name="radius">Radius of the circle.</param>
      <param name="clockwise">Direction of the figure.</param>
      <returns>The circle path.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.CreateEllipse(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Path" /> class.
            </summary>
      <param name="x">Center X coordinate of the ellipse.</param>
      <param name="y">Center Y coordinate of the ellipse.</param>
      <param name="radiusX">X Radius of the ellipes.</param>
      <param name="radiusY">Y Radius of the ellipse.</param>
      <param name="clockwise">Direction of the figure.</param>
      <returns>The elliptical figure.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.CreateRect(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Path" /> class.
            </summary>
      <param name="x">X relative coordinate.</param>
      <param name="y">Y relative coordinate.</param>
      <param name="width">Width of the rectangle.</param>
      <param name="height">Height of the rectangle.</param>
      <param name="clockwise">Direction of the figure.</param>
      <returns>The rectangle path.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.CreateRoundRect(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Path" /> class.
            </summary>
      <param name="x">X coordinate.</param>
      <param name="y">Y coordenate.</param>
      <param name="width">Width of the rect.</param>
      <param name="height">Height of the rect.</param>
      <param name="leftBottomRadius">Radius of the left-bottom corner.</param>
      <param name="leftTopRadius">Radius of the left-top corner.</param>
      <param name="rightBottomRadius">Radius of the right-bottom corner.</param>
      <param name="rightTopRadius">Radius of the right-top corner.</param>
      <param name="clockwise">Direction of the figure.</param>
      <returns>The round rectangle path.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.CreateRoundRect(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Path" /> class.
            </summary>
      <param name="x">X coordinate.</param>
      <param name="y">Y coordenate.</param>
      <param name="width">Width of the rect.</param>
      <param name="height">Height of the rect.</param>
      <param name="radius">Radius of the corners.</param>
      <param name="clockwise">Direction of the figure.</param>
      <returns>The round rectangle path.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.CreateLine(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Path" /> class.
            </summary>
      <param name="x1">Start X coordinate of the line.</param>
      <param name="y1">Start Y coordinate of the line.</param>
      <param name="x2">End X coordinate of the line.</param>
      <param name="y2">End Y coordinate of the line.</param>
      <returns>The line path.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.CreateHorizontalLine(System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.Path" /> class.
            </summary>
      <param name="x1">Start x coordinate of the line.</param>
      <param name="y1">Start y coordinate of the libe</param>
      <param name="length">Length of the line</param>
      <returns>The horizontal line path.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.CreateVerticalLine(System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the  class.
            </summary>
      <param name="x1">Start x coordinate of the line.</param>
      <param name="y1">Start y coordinate of the line.</param>
      <param name="length">Length of the line.</param>
      <returns>The vertical line path.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.AppendPath(Apitron.PDF.Kit.FixedLayout.Content.Path)">
      <summary>
            Appends a subpath to the path.
            </summary>
      <param name="subpath">A subpath to append.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.MoveTo(System.Double,System.Double)">
      <summary>
            Moves the current point to specified coordinates.
            </summary>
      <param name="x">The x-coordinate.</param>
      <param name="y">The y-coordinate.</param>
      <example>
        <code lang="cs">
            FixedLayout.Content.Path path = new FixedLayout.Content.Path();
            path.MoveTo(100,100);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.AppendLine(System.Double,System.Double)">
      <summary>
            Append a straight line segment from the current point to the point (x, y). The new current point shall be (x, y).
            </summary>
      <param name="x">The x-coordinate.</param>
      <param name="y">The y-coordinate.</param>
      <example>
        <code lang="cs">
            FixedLayout.Content.Path path = new FixedLayout.Content.Path();
            path.AppendLine(200,200);
            page.Content.FillAndStrokePath(path);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.AppendRectangle(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Append a rectangle to the current path as a complete subpath, with lower-left corner (x, y) and dimensions widthand height in user space.
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <example>
        <code lang="cs">
            // create new rectangle path
            FixedLayout.Content.Path path = new FixedLayout.Content.Path();
            path.AppendRectangle(x, y, width, height);
            page.Content.FillAndStrokePath(path);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.AppendCubicBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Append a cubic Bézier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points. 
            The new current point shall be (x3, y3).
            </summary>
      <param name="x1">The x1.</param>
      <param name="y1">The y1.</param>
      <param name="x2">The x2.</param>
      <param name="y2">The y2.</param>
      <param name="x3">The x3.</param>
      <param name="y3">The y3.</param>
      <example>
        <code lang="cs">
            // create new rectangle path
            FixedLayout.Content.Path path = new FixedLayout.Content.Path();
            path.AppendCubicBezier(100,100,20.2,200,300,30);
            page.Content.FillAndStrokePath(path);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.AppendCubicBezierUsingCurrentPoint(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Append a cubic Bézier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using the current point and (x2, y2) as the Bézier control points. 
            The new current point shall be (x3, y3).
            </summary>
      <param name="x2">The x2.</param>
      <param name="y2">The y2.</param>
      <param name="x3">The x3.</param>
      <param name="y3">The y3.</param>
      <example>
        <code lang="cs">
            FixedLayout.Content.Path path = new FixedLayout.Content.Path();
            path.AppendCubicBezierUsingCurrentPoint(20.2,200,300,30);
            page.Content.StrokePath(path);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.AppendCubicBezier(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Append a cubic Bézier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points (see 8.5.2.2, "Cubic Bézier Curves"). The new current point shall be (x3, y3).
            </summary>
      <param name="x1">The x1.</param>
      <param name="y1">The y1.</param>
      <param name="x3">The x3.</param>
      <param name="y3">The y3.</param>
      <example>
        <code lang="cs">
            FixedLayout.Content.Path path = new FixedLayout.Content.Path();
            path.AppendCubicBezier(20.2, 200, 300, 30);
            page.Content.StrokePath(path);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.Path.ClosePath">
      <summary>
            Closes the path.
            </summary>
      <example>
        <code lang="cs">
            FixedLayout.Content.Path path = new FixedLayout.Content.Path();
            path.AppendCubicBezier(20.2, 200, 300, 30);
            
            // close figure
            path.ClosePath();
            page.Content.StrokePath(path);
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.RenderingMode">
      <summary>
            This enum represents allowed text rendering modes.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.RenderingMode.FillText">
      <summary>
            Fill text.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.RenderingMode.StrokeText">
      <summary>
            Stroke text.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.RenderingMode.FillAndStrokeText">
      <summary>
            Fill, then stroke text. 
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.RenderingMode.Invisible">
      <summary>
            Neither fill nor stroke text (invisible).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.RenderingMode.FillAndSetAsClipping">
      <summary>
            Fill text and add to path for clipping.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.RenderingMode.StrokeAndSetAsClipping">
      <summary>
            Stroke text and add to path for clipping.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.RenderingMode.FillStrokeAndSetAsClipping">
      <summary>
            Fill, then stroke text and add to path for clipping.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Content.RenderingMode.SetAsClipping">
      <summary>
            Add text to path for clipping.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Content.TextObject">
      <summary>
            This class represents a text object.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.#ctor(System.String,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.TextObject" /> class.
            </summary>
      <param name="fontResourceID">The font resource ID or the font name or path to the font file. Sets the initial font.</param>
      <param name="fontSize">Size of the font. Sets the initial font size.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject("MyHelvetica", 11);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.#ctor(Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.TextObject" /> class.
            </summary>
      <param name="standardFont">The standard font.</param>
      <param name="fontSize">Size of the font.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject(StandardFonts.HelveticaBold, 11);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.TextObject" /> class.
            Font will be used from the graphics state.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetDeviceNonStrokingColor(System.Double[])">
      <summary>
            Sets the device color as a current non stroking color.
            The number of array elements determines the colour space in which the colour shall be defined:
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK        
            </summary>
      <param name="color">The color.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetDeviceStrokingColor(System.Double[])">
      <summary>
            Sets the device color as a current stroking color.
            The number of array elements determines the colour space in which the colour shall be defined:
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK        
            </summary>
      <param name="color">The color.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetNonStrokingColorSpace(System.String)">
      <summary>
            Sets the non strking color space.
            </summary>
      <param name="colorSpaceID">The color space ID.</param>
      <example>
        <code lang="cs">
            document.ResourceManager.RegisterResource(new CmykColorSpace("CMYK"));
            page.Content.SetNonStrokingColorSpace("CMYK");
            page.Content.SetNonStrokingColor(0.99, 0.33, 0.33, 0.67);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetStrokingColorSpace(System.String)">
      <summary>
            Sets the stroking color space.
            </summary>
      <param name="colorSpaceID">The color space ID.</param>
      <example>
        <code lang="cs">
            document.ResourceManager.RegisterResource(new RgbColorSpace("RGB"));
            page.Content.SetStrokingColorSpace("RGB");
            page.Content.SetStrokingColor(0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetNonStrokingColor(System.Double[])">
      <summary>
            Sets the current color for the non stroking operations.
            </summary>
      <param name="components">The components.</param>
      <example>
        <code lang="cs">
            document.ResourceManager.RegisterResource(new RgbColorSpace("RGB"));
            page.Content.SetNonStrokingColorSpace("RGB");
            page.Content.SetNonStrokingColor(0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetStrokingColor(System.Double[])">
      <summary>
            Sets the current color for the stroking operations.
            </summary>
      <param name="components">The components.</param>
      <example>
        <code lang="cs">
            document.ResourceManager.RegisterResource(new RgbColorSpace("RGB"));
            page.Content.SetStrokingColorSpace("RGB");
            page.Content.SetStrokingColor(0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetNonStrokingColor(System.String,System.Double[])">
      <summary>
            Sets the current color for the non stroking operations.
            </summary>
      <param name="name">The name.</param>
      <param name="components">The components.</param>
      <example>
        <code lang="cs">
            page.Content.SetNonStrokingColor("color", 0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetStrokingColor(System.String,System.Double[])">
      <summary>
            Sets the current color for the stroking operations.
            </summary>
      <param name="name">The name.</param>
      <param name="components">The components.</param>
      <example>
        <code lang="cs">
            page.Content.SetStrokingColor("color", 0.99, 0.33, 0.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetFont(Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts,System.Double)">
      <summary>
            Sets one of the standarcd fonts as a current font.
            </summary>
      <param name="standardType1Font">The standard type1 font.</param>
      <param name="fontSize">Size of the font.</param>
      <example>
        <code lang="cs">
            textObject.SetFont(StandardFonts.Symbol, 13);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetFont(System.String,System.Double)">
      <summary>
            Sets the current font.
            </summary>
      <param name="fontResourceID">The font resource ID or the font name or path to the font file.</param>
      <param name="fontSize">Size of the font.</param>
      <example>
        <code lang="cs">
            // create text object based on standard fonts
            TextObject text = new TextObject(StandardFonts.Helvetica, 16);
            text.SetTextMatrix(1, 0, 0, 1, 80, 700);
            text.AppendTextLine("celebrate");
            page.Content.AppendText(text);
            text.SetTextMatrix(1, 0, 0, 1, 80, 670);
            
            // set font
            text.SetFont(StandardFonts.TimesBoldItalic, 16);
            text.AppendTextLine("fanciful");
            page.Content.AppendText(text);
            text.SetTextMatrix(1, 0, 0, 1, 80, 640);
            
            // set font
            text.SetFont(StandardFonts.CourierBoldOblique, 16);
            text.AppendTextLine("groovy");
            page.Content.AppendText(text);
            document.Pages[0].Content.AppendText(text);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetCharacterSpacing(System.Double)">
      <summary>
            Sets the character spacing.
            </summary>
      <param name="characterSpace">The character space.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject(StandardFonts.HelveticaBold, 11);
            text.SetTextRenderingMode(RenderingMode.FillText);
            text.SetCharacterSpacing(1.33);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetWordSpacing(System.Double)">
      <summary>
            Sets the word spacing.
            </summary>
      <param name="wordSpacing">The word spacing.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject(StandardFonts.HelveticaBold, 11);
            text.SetTextRenderingMode(RenderingMode.FillAndStrokeText);
            text.SetWordSpacing(5.0);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetHorizontalScaling(System.Double)">
      <summary>
            Sets the horizontal scaling.
            </summary>
      <param name="scale">The scale.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject("Helvetica", 11);
            text.SetTextRenderingMode(RenderingMode.FillAndStrokeText);
            text.SetHorizontalScaling(200); //twice the length
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetTextLeading(System.Double)">
      <summary>
            Sets the text leading. It specifies the vertical distance between the baselines of adjacent lines of text.
            </summary>
      <param name="leading">The leading.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject("Helvetica", 11);
            text.SetTextLeading(16);
            text.AppendText("1st line");
            text.AppendTextLine("2nd line");
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetTextRise(System.Double)">
      <summary>
            Sets the text rise. It specifies the distance to move the baseline up or down 
            from its default location. Positive values of text rise move the baseline up.
            </summary>
      <param name="rise">The rise distance to move the baseline up or down.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject(StandardFonts.CourierBold, 11);
            text.AppendText("1st line");
            text.AppendTextLine("2nd line");
            text.SetTextRenderingMode(RenderingMode.FillAndStrokeText);
            text.SetTextMatrix(1, 0, 0, 1, 10, (Boundaries.A4).Height - 60);
            text.SetTextRise(2.333);
            text.AppendText("First");
            text.SetTextRise(-2.333);
            text.AppendText("Second");
            text.SetTextRise(3.333);
            text.AppendText("Third");
            text.SetTextRise(-3.333);
            text.AppendText("Forth");
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetTextRenderingMode(Apitron.PDF.Kit.FixedLayout.Content.RenderingMode)">
      <summary>
            Sets the text rendering mode. Determines whether showing text causes glyph outlines to be stroked, filled or both.
            </summary>
      <param name="renderingMode">The rendering mode.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject("FontResource", 11);
            text.SetTextRenderingMode(RenderingMode.FillAndStrokeText);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetTextMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Sets the text matrix.
            </summary>
      <param name="a">the a.</param>
      <param name="b">The b.</param>
      <param name="c">The c.</param>
      <param name="d">The d.</param>
      <param name="e">The e.</param>
      <param name="f">The f.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject(StandardFonts.CourierBold, 20);
            text.SetTextRenderingMode(RenderingMode.FillAndStrokeText);
            text.SetTextMatrix(1, 0, 0, 1, 10, (Boundaries.A4).Height - 50);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetScale(System.Double,System.Double)">
      <summary>
            Sets scale to the current text matrix.Equivalent of call SetTextMatrix(xScale, 0, 0, yScale, 0, 0)
            </summary>
      <param name="xScale">X Scale factor.</param>
      <param name="yScale">Y Scale factor.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetRotate(System.Double)">
      <summary>
            Sets rotate current text matrix using alpha. Equivalent of call SetTextMatrix(Math.Cos(alpha), Math.Sin(alpha), -Math.Sin(alpha), Math.Cos(alpha), 0, 0)
            </summary>
      <param name="alpha">Angle to rotate, measured in radians.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetSkrew(System.Double,System.Double)">
      <summary>
            Skrews current strnsformation matrix using xAngle and yAngle. Equivalent of call SetTextMatrix(1, Math.Tan(xAlpha), Math.Tan(yAlpha), 1, 0, 0)
            </summary>
      <param name="xAlpha">Angle to skrew x axis, measured in radians.</param>
      <param name="yAlpha">Angle to skrew y axis, measured in radians.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.Translate(System.Double,System.Double)">
      <summary>
            Translates current text matrix. Equivalent of call SetTextMatrix(1, 0, 0, 1, xOffset, yOffset)
            </summary>
      <param name="xOffset">The x offset.</param>
      <param name="yOffset">The y offset.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.AppendText(System.String)">
      <summary>
            Appends the text.
            </summary>
      <param name="text">The text.</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            TextObject text = new TextObject("Helvetica", 14);
            text.SetTextRenderingMode(RenderingMode.FillText);
            
            text.AppendText("Hello World!");
            
            Page page = new Page(new PageBoundary(Boundaries.A4));
            document.Pages.Add(page);
            document.Pages[0].Content.AppendText(text);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.AppendTextLine(System.String)">
      <summary>
            Appends the text on the next line. Next line will be calculated using current text leading (<see cref="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.SetTextLeading(System.Double)" />).
            </summary>
      <param name="text">The text.</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            TextObject text = new TextObject("Helvetica", 14);
            text.SetTextRenderingMode(RenderingMode.FillText);
            text.SetTextLeading(20);
            
            // Appends the new line text.
            text.AppendTextLine("Text on the new line.");
            document.Pages[0].Content.AppendText(text);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.AppendTextWithPositions(System.String[],System.Double[])">
      <summary>
            Appends the text with positions.
            Show one or more text strings, allowing individual glyph positioning. Each element of array shall be either a string or a number. 
            If the element is a string, this operator shall show the string. If it is a number, the operator shall adjust the text position by that amount; that is, it shall translate the text matrix. 
            The number shall be expressed in thousandths of a unit of text space. This amount shall be subtracted from the current horizontal or vertical coordinate, depending on the writing mode. 
            In the default coordinate system, a positive adjustment has the effect of moving the next glyph painted either to the left or down by the given amount.
            </summary>
      <param name="words">The characters.</param>
      <param name="tjs">The positions.</param>
            // <example><code lang="cs">
            FixedDocument document = new FixedDocument();
            TextObject text = new TextObject("Helvetica", 14);
            text.SetTextRenderingMode(RenderingMode.FillText);
            
            // Appends the new line text.
            text.AppendTextLine("Text on the new line.");
            document.Pages[0].Content.AppendText(text);
            </code></example></member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.MoveToNextLineAndSetLeading(System.Int32,System.Int32)">
      <summary>
             Moves to next line and as a side effect sets the leading .
             </summary>
      <param name="tx">The tx.</param>
      <param name="ty">The ty.</param>
      <example>
        <code lang="cs">
             TextObject text = new TextObject(StandardFonts.CourierBold, 20);
             text.SetTextRenderingMode(RenderingMode.FillAndStrokeText);
             text.SetTextMatrix(1, 0, 0, 1, 10, (Boundaries.A4).Height - 50);
            
             string[] worlds = new string[4] {"Apitron's", "world", "of", "PDF"};
             double[] tjs = new double[4] {-5000f, -3000f, -1000f, 0f};
             text.AppendTextWithPositions(worlds, tjs);
             document.Pages[0].Content.AppendText(text);
             </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.MoveToNextLine(System.Int32,System.Int32)">
      <summary>
            Move to the start of the next line, offset from the start of the current line by (tx, ty). tx and ty shall denote numbers expressed in unscaled text space units.
            </summary>
      <param name="tx">The tx.</param>
      <param name="ty">The ty.</param>
      <example>
        <code lang="cs">
            TextObject text = new TextObject(StandardFonts.CourierBold, 20);
            text.SetTextRenderingMode(RenderingMode.FillAndStrokeText);
            text.SetTextMatrix(1, 0, 0, 1, 10, (Boundaries.A4).Height - 50);
            text.AppendText("A B C");
            // to obtain the 3D effect we add text above the same text with minimal offset
            text.MoveToNextLine(-1, 1); 
            text.AppendText("A B C");
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Content.TextObject.IsRTL(System.String)">
      <summary>
            Determines whether the specified text direction is RTL.
            </summary>
      <param name="text">The text.</param>
      <returns>
        <c>true</c> if the specified text is RTL; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Boundaries">
      <summary>
            This class provides the list of predefined boundaries.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.Letter">
      <summary>
            Gets the letter boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.Legal">
      <summary>
            Gets the legal boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.Ledger">
      <summary>
            Gets the ledger or tabloid boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A0">
      <summary>
            Gets the A0 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A1">
      <summary>
            Gets the A1 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A2">
      <summary>
            Gets the A2 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A3">
      <summary>
            Gets the A3 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A4">
      <summary>
            Gets the A4 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A5">
      <summary>
            Gets the A5 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A6">
      <summary>
            Gets the A6 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A7">
      <summary>
            Gets the A7 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A8">
      <summary>
            Gets the A8 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A9">
      <summary>
            Gets the A9 boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A10">
      <summary>
            Gets the A10 boundary.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.BoundaryUnits">
      <summary>
            This enum represents available boundaries units.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.BoundaryUnits.Inches">
      <summary>
            Represents inches units.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.BoundaryUnits.Milimeter">
      <summary>
            Represents milimeters units.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.BoundaryUnits.Points">
      <summary>
            Represents point units.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PageOrientation">
      <summary>
            This enum defines possible page orientations.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageOrientation.Auto">
      <summary>
            Auto layout.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageOrientation.Landscape">
      <summary>
            Add images in landcape orientation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageOrientation.Portrait">
      <summary>
            Add images in portrait orientation.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.ImageScaleMode">
      <summary>
            This enum represents a list of available scale modes.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.ImageScaleMode.Absolute">
      <summary>
            Image will be fit into given space defined by page size, it means that each side of the image will have its own scaling factor.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.ImageScaleMode.PreserveAspectRatio">
      <summary>
            Image's aspect ratio will be preserved.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings">
      <summary>
            This class represents settings for a page to be created from an image.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings" /> class.
            </summary>
      <param name="pageSize">Size of the page.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.Size">
      <summary>
            Gets or sets the size of the page.
            </summary>
      <value>
            The size of the page.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.PageOrientation">
      <summary>
            Gets or sets the page orientation.
            <default><c>ImageLayout.Auto</c></default></summary>
      <value>
            The page orientation.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.ScaleMode">
      <summary>
            Gets or sets the scale mode.
            <default><c>ImageScaleMode.PreservAspectRatio</c></default>.
            </summary>
      <value>
            The scale mode.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.KeepImageOrientation">
      <summary>
            Gets or sets a value indicating whether an image should keep its orientation.
            <default><c>true</c></default>.
            </summary>
      <value>
        <c>true</c> if an image should keep its orientation; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.Margin">
      <summary>
            Gets or sets the margin.
            </summary>
      <value>
            The margin.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.Padding">
      <summary>
            Gets or sets the padding.
            </summary>
      <value>
            The padding.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.BorderWidth">
      <summary>
            Gets or sets the width of the border.
            </summary>
      <value>
            The width of the border.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.UseTransparency">
      <summary>
            Gets or sets a value indicating whether use transparency channel of an image.
            </summary>
      <value>
        <c>true</c> if use transparency channel of an image; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.FromImagePageSettings.BorderColor">
      <summary>
            Gets or sets the border color.
            </summary>
      <value>
            The color of the border.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.InternalCollection`1">
      <summary>
            This class represent an internal collection
            </summary>
      <typeparam name="T">Resource object.</typeparam>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.document">
      <summary>
            The FixedDocument.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.#ctor(Apitron.PDF.Kit.FixedDocument,System.String,Apitron.PDF.Kit.FixedLayout.Resources.ResourceType)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="document">The document.</param>
      <param name="resourceID">The id.</param>
      <param name="resourceType">Type of the resource.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.Add(`0)">
      <summary>
            Adds the specified item.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.Insert(System.Int32,`0)">
      <summary>
            Adds the specified item into the specified position.
            </summary>
      <param name="index">The index.</param>
      <param name="item">The item.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.Remove(`0)">
      <summary>
            Removes the specified item.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.Clear">
      <summary>
            Clears this instance.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.Contains(`0)">
      <summary>
            Determines whether the collection contains the specified item.
            </summary>
      <param name="item">The item.</param>
      <returns>
        <c>true</c> if contains; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.RemoveAt(System.Int32)">
      <summary>
            Removes an item from the specified index.
            </summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.Count">
      <summary>
            Gets the number of elements in the collection.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.InternalCollection`1.Item(System.Int32)">
      <summary>
            Gets the <see cref="!:T" /> at the specified index.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.ExponentialFunction">
      <summary>
            This class represents an exponential function.
            Type 2 functions include a set of parameters that define an exponential interpolation of one input value and n output values: F(x) = y0,....,yn-1
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.Function">
      <summary>
            This class represents an abstract PDF function.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.IFunction">
      <summary>
            This interface represents an abstract PDF function.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.IFunction.FunctionType">
      <summary>
            Gets the function type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.IFunction.Domain">
      <summary>
            Gets the domain. The domain is an array of 2 × m numbers, where m shall be the number of input values. 
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, xi, 
            shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1. Input values outside the declared domain shall be 
            clipped to the nearest boundary value.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.IFunction.Range">
      <summary>
            Gets the range. (Required for FunctionType.Sampled and FunctionType.PostScript functions, optional otherwise) 
            An array of 2 × n numbers, where n shall be the number of output values. 
            For each j from 0 to n − 1, Range2j shall be less than or equal to Range2j+1, and the jth output value, yj , 
            shall lie in the interval Range2j ≤ yj ≤ Range2j+1. Output values outside the declared range shall be clipped to the nearest boundary value. 
            If this entry is absent, no clipping shall be done.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Functions.Function.#ctor(System.String,System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="domain">An array of 2 × m numbers, where m shall be the number of input values. 
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, 
            xi, shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1. Input values outside the declared domain shall 
            be clipped to the nearest boundary value.</param>
      <param name="range">An array of 2 × n numbers, where n shall be the number of output values. For each j from 0 to n − 1, 
            Range2j shall be less than or equal to Range2j+1, and the jth output value, yj , shall lie in the interval Range2j ≤ yj ≤ Range2j+1. 
            Output values outside the declared range shall be clipped to the nearest boundary value. If this entry is absent, no clipping shall 
            be done.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.Function.FunctionType">
      <summary>
            Gets the function type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.Function.Domain">
      <summary>
            Gets the domain. The domain is an array of 2 × m numbers, where m shall be the number of input values. 
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, xi, 
            shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1. Input values outside the declared domain shall be 
            clipped to the nearest boundary value.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.Function.Range">
      <summary>
            Gets the range. (Required for FunctionType.Sampled and FunctionType.PostScript functions, optional otherwise) 
            An array of 2 × n numbers, where n shall be the number of output values. 
            For each j from 0 to n − 1, Range2j shall be less than or equal to Range2j+1, and the jth output value, yj , 
            shall lie in the interval Range2j ≤ yj ≤ Range2j+1. Output values outside the declared range shall be clipped to the nearest boundary value. 
            If this entry is absent, no clipping shall be done.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Functions.ExponentialFunction.#ctor(System.String,System.Double[],System.Double[],System.Int32,System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="c1">An array of n numbers that shall define the function result when x = 0.0. Default value: [0.0].</param>
      <param name="c0">An array of n numbers that shall define the function result when x = 1.0. Default value: [1.0].</param>
      <param name="n">The interpolation exponent. Each input value x shall return n values, given by yj = C0j + x^N × (C1j − C0j), for 0 greater or equal j less then n.</param>
      <param name="domain">An array of 2 × m numbers, where m shall be the number of input values. 
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, 
            xi, shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1. Input values outside the declared domain shall 
            be clipped to the nearest boundary value.</param>
      <param name="range">An array of 2 × n numbers, where n shall be the number of output values. For each j from 0 to n − 1, 
            Range2j shall be less than or equal to Range2j+1, and the jth output value, yj , shall lie in the interval Range2j ≤ yj ≤ Range2j+1. 
            Output values outside the declared range shall be clipped to the nearest boundary value. If this entry is absent, no clipping shall 
            be done.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Functions.ExponentialFunction.#ctor(System.String,System.Double[],System.Double[],System.Int32,System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="c1">An array of n numbers that shall define the function result when x = 0.0. Default value: [0.0].</param>
      <param name="c0">An array of n numbers that shall define the function result when x = 1.0. Default value: [1.0].</param>
      <param name="n">The interpolation exponent. Each input value x shall return n values, given by yj = C0j + x^N × (C1j − C0j), for 0 greater or equal j less then n.</param>
      <param name="domain">An array of 2 × m numbers, where m shall be the number of input values. 
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, 
            xi, shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1. Input values outside the declared domain shall 
            be clipped to the nearest boundary value.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Functions.ExponentialFunction.#ctor(System.String,System.Int32,System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="n">The interpolation exponent.</param>
      <param name="domain">An array of 2 × m numbers, where m shall be the number of input values.
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value,
            xi, shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1. Input values outside the declared domain shall
            be clipped to the nearest boundary value.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.ExponentialFunction.FunctionType">
      <summary>
            Gets the function type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.ExponentialFunction.N">
      <summary>
            Gets the interpolation exponent.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.ExponentialFunction.C0">
      <summary>
            Gets an array of n numbers that shall define the function result when x = 0.0.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.ExponentialFunction.C1">
      <summary>
            Gets an array of n numbers that shall define the function result when x = 1.0.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.PostScriptFunction">
      <summary>
            This class is a type 4 function, also called a PostScript calculator function, shall be represented as a stream containing code written in a small subset of the PostScript language
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Functions.PostScriptFunction.#ctor(System.String,System.Double[],System.Double[],System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="domain">An array of 2 × m numbers, where m shall be the number of input values. 
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, 
            xi, shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1. Input values outside the declared domain shall 
            be clipped to the nearest boundary value.</param>
      <param name="range">An array of 2 × n numbers, where n shall be the number of output values. For each j from 0 to n − 1, 
            Range2j shall be less than or equal to Range2j+1, and the jth output value, yj , shall lie in the interval Range2j ≤ yj ≤ Range2j+1. 
            Output values outside the declared range shall be clipped to the nearest boundary value. If this entry is absent, no clipping shall 
            be done.</param>
      <param name="postScriptFunctionBody">The function body.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.PostScriptFunction.FunctionType">
      <summary>
            Gets the function type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.PostScriptFunction.FunctionBody">
      <summary>
            Gets the string that represents function body.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions">
      <summary>
            Predefined spot functions.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.SimpleDot">
      <summary>
            The SimpleDot function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.InvertedSimpleDot">
      <summary>
            The InvertedSimpleDot function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.DoubleDot">
      <summary>
            The DoubleDot function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.InvertedDoubleDot">
      <summary>
            The InvertedDoubleDot function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.CosineDot">
      <summary>
            The CosineDot function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.Double">
      <summary>
            The Double function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.InvertedDouble">
      <summary>
            The InvertedDouble function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.Line">
      <summary>
            The Line function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.LineX">
      <summary>
            The LineX function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.LineY">
      <summary>
            The LineY function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.Diamond">
      <summary>
            The Diamond function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.Rhomboid">
      <summary>
            The Rhomboid function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.Cross">
      <summary>
            The Cross function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.Square">
      <summary>
            The Square function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.InvertedEllipseA">
      <summary>
            The InvertedEllipseA function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.EllipseA">
      <summary>
            The EllipseA function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.EllipseB">
      <summary>
            The EllipseB function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.EllipseC">
      <summary>
            The EllipseC function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.InvertedEllipseC">
      <summary>
            The InvertedEllipseC function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.Ellipse">
      <summary>
            The Ellipse function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SpotFunctions.Round">
      <summary>
            The Round function.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.StitchingFunction">
      <summary>
            This class is a Type 3 function define a stitching of the subdomains of several 1-input functions to produce a single new 1-input function.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Functions.StitchingFunction.#ctor(System.String,System.Double[],System.Double[],System.String[],System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.StitchingFunction" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="domain">An array of 2 × m numbers, where m shall be the number of input values. 
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, 
            xi, shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1. Input values outside the declared domain shall 
            be clipped to the nearest boundary value.</param>
      <param name="range">An array of 2 × n numbers, where n shall be the number of output values. For each j from 0 to n − 1, 
            Range2j shall be less than or equal to Range2j+1, and the jth output value, yj , shall lie in the interval Range2j ≤ yj ≤ Range2j+1. 
            Output values outside the declared range shall be clipped to the nearest boundary value. If this entry is absent, no clipping shall 
            be done.</param>
      <param name="functionIds">An array of k 1-input functions that shall make up the stitching function. The output dimensionality of all functions shall be the same, and compatible with the value of Range if Range is present.</param>
      <param name="bounds">An array of k − 1 numbers that, in combination with Domain, shall define the intervals to which each function from the Functions array shall apply. Bounds elements shall be in order of increasing value, and each value shall be within the domain defined by Domain.</param>
      <param name="encode">An array of 2 × k numbers that, taken in pairs, shall map each subset of the domain defined by Domain and the Bounds array to the domain of the corresponding function.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Functions.StitchingFunction.#ctor(System.String,System.Double[],System.String[],System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.StitchingFunction" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="domain">An array of 2 × m numbers, where m shall be the number of input values. 
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, 
            xi, shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1. Input values outside the declared domain shall 
            be clipped to the nearest boundary value.</param>
      <param name="functions">An array of k 1-input functions that shall make up the stitching function. The output dimensionality of all functions shall be the same, and compatible with the value of Range if Range is present.</param>
      <param name="bounds">An array of k − 1 numbers that, in combination with Domain, shall define the intervals to which each function from the Functions array shall apply. Bounds elements shall be in order of increasing value, and each value shall be within the domain defined by Domain.</param>
      <param name="encode">An array of 2 × k numbers that, taken in pairs, shall map each subset of the domain defined by Domain and the Bounds array to the domain of the corresponding function.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.StitchingFunction.FunctionType">
      <summary>
            Gets the function type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.StitchingFunction.FunctionIds">
      <summary>
            Gets an array of k 1-input functions that shall make up the stitching function. The output dimensionality of all functions shall be the same, 
            and compatible with the value of Range if Range is present.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.StitchingFunction.Bounds">
      <summary>
            Gets an array of k − 1 numbers that, in combination with Domain, shall define the intervals to which each function from the Functions array 
            shall apply. Bounds elements shall be in order of increasing value, and each value shall be within the domain defined by Domain.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.StitchingFunction.Encode">
      <summary>
            Gets an array of 2 × k numbers that, taken in pairs, shall map each subset of the domain defined by Domain and the Bounds array to the domain 
            of the corresponding function.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.FunctionShading">
      <summary>
            This class represents a function based shading.
            In Type 1 (function-based) shadings, the colour at every point in the domain is defined by a specified mathematical function. 
            The function need not be smooth or continuous. This type is the most general of the available shading types and is useful for 
            shadings that cannot be adequately described with any of the other types.
            NOTE: This type of shading shall not be used with an Indexed colour space.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.Shading">
      <summary>
            This class represents an abstract shading.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.Shading.#ctor(System.String,System.String,System.Double[],Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.Shading" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.Shading.ColorSpaceResourceID">
      <summary>
            Gets the colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.Shading.Boundary">
      <summary>
            Gets the boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.Shading.Background">
      <summary>
            Gets the background.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.FunctionShading.#ctor(System.String,System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[],System.String[],System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.FunctionShading" /> class. 
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
      <param name="functionIds">A 2-in, n-out function or an array of n 2-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.</param>
      <param name="domain">An array of four numbers [xmin xmax ymin ymax] specifying the rectangular domain of coordinates over which the colour function(s) are defined. Default value: [0.0 1.0 0.0 1.0].</param>
      <param name="matrix">An array of six numbers specifying a transformation matrix mapping the coordinate space specified by the Domain entry into the shading’s target coordinate space.Default value: the identity matrix [1 0 0 1 0 0].
            NOTE : To map the domain rectangle [0.0 1.0 0.0 1.0] to a 1-inch square with lower-left corner at coordinates (100, 100) in default user space, the Matrix value would be [72 0 0 72 100 100].</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.FunctionShading.FunctionIds">
      <summary>
            Gets a 2-in, n-out function or an array of n 2-in, 1-out functions (where n is the number of colour components in the shading 
            dictionary’s colour space). Each function’s domain shall be a superset of that of the shading dictionary. If the value returned 
            by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.FunctionShading.Domain">
      <summary>
            An array of four numbers [xmin xmax ymin ymax] specifying the rectangular domain of coordinates over which the colour function(s) 
            are defined. Default value: [0.0 1.0 0.0 1.0].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.FunctionShading.Matrix">
      <summary>
            An array of six numbers specifying a transformation matrix mapping the coordinate space specified by the Domain entry into the shading’s 
            target coordinate space.Default value: the identity matrix [1 0 0 1 0 0].
            NOTE : To map the domain rectangle [0.0 1.0 0.0 1.0] to a 1-inch square with lower-left corner at coordinates (100, 100) 
            in default user space, the Matrix value would be [72 0 0 72 100 100].
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Signature.ISignatureServiceProvider">
      <summary>
            This interface represents a bridge between <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store" /> implementation and custom crypto service provider.
            One may implement this interface and use it for situations when direct access to certificate's private key is not available.
            E.g.: For Smart Card containing certificates marked as not exportable and not allowing the direct access to them, 
            you may use crypto API provided by OS and implement signing using it.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.ISignatureServiceProvider.SignBytes(System.Byte[])">
      <summary>
            Signs the given byte array and returns the digest.
            </summary>
      <param name="bytesToSign">Sign these bytes</param>
      <returns>The calculated signature</returns>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.ISignatureServiceProvider.TimeStampingAuthority">
      <summary>
            Gets the time stamp autority.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Signature.ITimeStampingAuthority">
      <summary>
            Represents a time stamping authority access provider implementation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.ITimeStampingAuthority.StampData(System.Byte[])">
      <summary>
            Timestamps the given data.
            </summary>
      <param name="signedData">Signed message data.</param>
      <returns>Returns a buffer that contains an Abstract Syntax Notation One (ASN.1) encoded content information sequence. This value should be stored for future time stamp validations on the signature, or null if fails.</returns>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.ITimeStampingAuthority.Url">
      <summary>
            URL of the TSA server.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.PdfStandard">
      <summary>
            This enum represents a list of supported format specializations.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PdfStandard.Default">
      <summary>
            ISO 32000 specifies a digital form for representing documents called the Portable Document Format or usually referred to as PDF.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PdfStandard.PDFA">
      <summary>
            PDF/A (ISO 19005) is now the industry standard for the archiving of digital documents.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PdfStandard.AsIs">
      <summary>
            Does not specify a format. Keeps a document format as is. It means that standard should not be changed during re-saving the document.  
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeClass">
      <summary>
            This class represents an attribute class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeClass.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeClass" /> class.
            </summary>
      <param name="className">Name of the class.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeClass.ClassName">
      <summary>
            Gets the class name.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryArray">
      <summary>
            This class represnts an array atribute entry.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.IAttributeEntry">
      <summary>
            This interface represents an attribute entries.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryArray.#ctor(Apitron.PDF.Kit.Interchange.LogicalStructure.IAttributeEntry[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryArray" /> class.
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryArray.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryArray.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryArray.Value">
      <summary>
            Gets the attribute entry value. 
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryBoolean">
      <summary>
            This class represents a boolean attribute entry.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryBoolean.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryBoolean" /> class.
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryBoolean.Value">
      <summary>
            Gets the value of the attribute entry.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryDictionary">
      <summary>
            This class represents a dictionary attribute entry.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryDictionary.#ctor(System.Collections.Generic.KeyValuePair{System.String,Apitron.PDF.Kit.Interchange.LogicalStructure.IAttributeEntry}[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryDictionary" /> class.
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryDictionary.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryDictionary.Value">
      <summary>
            Gets the attribute entry value. 
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryName">
      <summary>
            This class represents a name attribute entry.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryName.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryName" /> class.
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryName.Value">
      <summary>
            Gets the attribute entry value.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric">
      <summary>
            This class represents a numeric attribute entry.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric" /> class.
            </summary>
      <param name="numeric">Numeric value.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric" /> class.
            </summary>
      <param name="numeric">Numeric value.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric.#ctor(System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric" /> class.
            </summary>
      <param name="numeric">Numeric value.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric.#ctor(System.Int64)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric" /> class.
            </summary>
      <param name="numeric">Numeric value.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric.DoubleValue">
      <summary>
            Gets the attribute entry double value.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric.IntValue">
      <summary>
            Gets the attribute entry int value.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric.LongValue">
      <summary>
            Gets the attribute entry long value.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryNumeric.FloatValue">
      <summary>
            Gets the attribute entry float value.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryString">
      <summary>
            This class represents a string attribute entry.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryString.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryString" /> class.
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeEntryString.Value">
      <summary>
            Gets the attribute entry value.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.AttributeSet">
      <summary>
            This class represents an attribute collection.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.ContentItemReference">
      <summary>
            This class represents a content item reference.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.IStructureTreeEntry">
      <summary>
            This interface represents a structure tree entry.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.IStructureTreeEntry.Page">
      <summary>
            Gets the owning page. 
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.ContentItemReference.#ctor(Apitron.PDF.Kit.FixedLayout.Page,Apitron.PDF.Kit.FixedLayout.Resources.Resource)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.ContentItemReference" /> class.
            </summary>
      <param name="page">The page.</param>
      <param name="contentItem">The content item.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.ContentItemReference.Page">
      <summary>
            Gets the page object of the page on which the object shall be rendered. This entry overrides any Pg entry in the structure 
            element containing the object reference; it shall be used if the structure element has no such entry.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.ContentItemReference.ContentItem">
      <summary>
            Gets the referenced object.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.Attribute">
      <summary>
            This class represents a structure attribute.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.Attribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.Attribute" /> class.
            </summary>
      <param name="productOwning">The product owning.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.Attribute.#ctor(System.String,System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.Attribute" /> class.
            </summary>
      <param name="productOwning">The product owning.</param>
      <param name="data">The data.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.Attribute.ProductOwning">
      <summary>
            Gets the name of the conforming product owning the attribute data.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.Attribute.IsStream">
      <summary>
            Gets the value that indicates whether this instace is stream.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.Attribute.Values">
      <summary>
            Gets other entries that shall represent the attributes: the keys shall be attribute names, and values shall be the corresponding attribute values.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentIdentifier">
      <summary>
            This class reprenset a marked content identifier.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentIdentifier.#ctor">
      <summary>
            Initializes new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentIdentifier" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentIdentifier.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentIdentifier" /> class.
            </summary>
      <param name="MCID">The MCID.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentIdentifier.Page">
      <summary>
            Gets the page.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentIdentifier.MCID">
      <summary>
            Gets or sets an integer marked-content identifier denoting a marked-content sequence.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference">
      <summary>
            This class represents a marked content reference.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference" /> class.
            </summary>
      <param name="mcid">The marked-content identifier of the marked-content sequence within its content stream.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference.#ctor(System.Int32,Apitron.PDF.Kit.FixedLayout.Page)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference" /> class.
            </summary>
      <param name="mcid">The marked-content identifier of the marked-content sequence within its content stream.</param>
      <param name="page">the page on which the graphics objects in the marked-content sequence shall be rendered.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference.#ctor(System.Int32,Apitron.PDF.Kit.FixedLayout.Page,Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent,Apitron.PDF.Kit.FixedLayout.Resources.Resource)">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference" /> class.
            </summary>
      <param name="mcid">The marked-content identifier of the marked-content sequence within its content stream.</param>
      <param name="page">the page on which the graphics objects in the marked-content sequence shall be rendered.</param>
      <param name="stm">The content stream containing the marked-content sequence.</param>
      <param name="stmOwn">The PDF object owning the stream identified by Stems annotation to which an appearance stream belongs.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference.Page">
      <summary>
            Gets the page object representing the page on which the graphics objects in the marked-content sequence shall be rendered. 
            This entry overrides any Page entry in the structure element containing the marked-content reference; it shall be required 
            if the structure element has no such entry.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference.Stm">
      <summary>
            Gets the content stream containing the marked-content sequence. This entry should be present only if the marked-content sequence resides in a content stream other than the content stream for the page.
            If this entry is absent, the marked-content sequence shall be contained in the content stream of the page identified by Page (either in the marked-content reference dictionary or in the parent structure element).
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference.StmOwn">
      <summary>
            Gets the PDF object owning the stream identified by Stems annotation to which an appearance stream belongs.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.MarkedContentReference.MCID">
      <summary>
            Gets the marked-content identifier of the marked-content sequence within its content stream.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement">
      <summary>
            This class represents an abstract structure element.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement" /> class.
            </summary>
      <param name="structureType">Type of the structure.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.StructureType">
      <summary>
            Gets the structure type, a name object identifying the nature of the structure element and its role within 
            the document, such as a chapter, paragraph, or footnote.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.ID">
      <summary>
            Gets the element identifier, a string designating this structure element. 
            The string shall be unique among all elements in the document’s structure hierarchy. 
            The IDTree entry in the structure tree root defines the correspondence between element identifiers and the structure elements they denote.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.Page">
      <summary>
            Gets a page object representing a page on which some or all of the content items designated by the K entry shall be rendered.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.Revision">
      <summary>
            Gets the current revision number of this structure element. The value shall be a non-negative integer. Default value: 0.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.Title">
      <summary>
            Gets the title of the structure element, a text string representing it in human-readable form. 
            The title should characterize the specific structure element, such as Chapter 1, rather than merely a generic element type, such as Chapter.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.Lang">
      <summary>
            Gets a language identifier specifying the natural language for all text in the structure element except where overridden by language specifications 
            for nested structure elements or marked content. If this entry is absent, the language (if any) specified in the document catalogue applies.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.Alt">
      <summary>
            Gets an alternate description of the structure element and its children in human-readable form, which is useful when extracting the document’s contents 
            in support of accessibility to users with disabilities or for other purposes.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.ExpandedAbbreviation">
      <summary>
            Gets the expanded form of an abbreviation.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.ActualText">
      <summary>
            Text that is an exact replacement for the structure element and its children. This replacement text (which should apply to as small a piece of content as possible) 
            is useful when extracting the document’s contents in support of accessibility to users with disabilities or for other purposes.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.Attributes">
      <summary>
            Gets a single attribute object or array of attribute objects associated with this structure element.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.AttributeClasses">
      <summary>
            Gets an attribute class name or array of class names associated with this structure element.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureElement.Children">
      <summary>
            Gets the children of the structure element.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureTreeRoot">
      <summary>
            The logical structure root.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureTreeRoot.Children">
      <summary>
            Gets the immediate child or children of the structure tree root in the structure hierarchy.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureTreeRoot.RoleMap">
      <summary>
            Gets a dictionary that shall map the names of structure types used in the document to their approximate 
            equivalents in the set of standard structure types.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureTreeRoot.ClassMap">
      <summary>
            Gets a dictionary that shall map name objects designating 
            attribute classes to the corresponding attribute objects or arrays of attribute objects.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureType">
      <summary>
            This class represents a structure type.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureType.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureType" /> class.
            </summary>
      <param name="typeName">Name of the type.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interchange.LogicalStructure.StructureType.TypeName">
      <summary>
            Gets the type name.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes">
      <summary>
            This class reprernsts a static list of Standard structure types.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements">
      <summary>
            This class reprernsts a static list of Standard structure types for grouping elements.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.Document">
      <summary>
            (Document) A complete document. This is the root element of any structure tree containing multiple parts or multiple articles.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.Part">
      <summary>
            (Part) A large-scale division of a document. This type of element is appropriate for grouping articles or sections.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.Art">
      <summary>
            (Article) A relatively self-contained body of text constituting a single narrative or exposition. Articles should be disjoint; that is, they should not contain other articles as constituent elements.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.Sect">
      <summary>
            (Section) A container for grouping related content elements.
            NOTE 1For example, a section might contain a heading, several introductory paragraphs, and two or more other sections nested within it as subsections.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.Div">
      <summary>
            (Division) A generic block-level element or group of elements.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.BlockQuote">
      <summary>
            (Block quotation) A portion of text consisting of one or more paragraphs attributed to someone other than the author of the surrounding text.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.Caption">
      <summary>
            (Caption) A brief portion of text describing a table or figure.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.TOC">
      <summary>
            (Table of contents) A list made up of table of contents item entries (structure type TOCI) and/or other nested table of contents entries (TOC).
            A TOC entry that includes only TOCI entries represents a flat hierarchy. A TOC entry that includes other nested TOC entries (and possibly TOCI entries) represents a more complex hierarchy. Ideally, the hierarchy of a top level TOC entry reflects the structure of the main body of the document.
            NOTE 2Lists of figures and tables, as well as bibliographies, can be treated as tables of contents for purposes of the standard structure types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.TOCI">
      <summary>
            (Table of contents item) An individual member of a table of contents. This entry’s children may be any of the following structure types:
            Lbl A label (see “List Elements” in 14.8.4.3, “Block-Level Structure Elements”)
            Reference A reference to the title and the page number (see “Inline-Level Structure Elements” in 14.8.4.4, “Inline-Level Structure Elements”)
            NonStruct Non-structure elements for wrapping a leader artifact (see “Grouping Elements” in 14.8.4.2, “Grouping Elements”).
            P Descriptive text (see “Paragraphlike Elements” 14.8.4.3, “Block-Level Structure Elements”)
            TOC Table of content elements for hierarchical tables of content, as described for the TOC entry
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.Index">
      <summary>
            (Index) A sequence of entries containing identifying text accompanied by reference elements (structure type Reference; see 14.8.4.4, “Inline-Level Structure Elements”) that point out occurrences of the specified text in the main body of a document.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.NonStruct">
      <summary>
            (Nonstructural element) A grouping element having no inherent structural significance; it serves solely for grouping purposes. This type of element differs from a division (structure type Div) in that it shall not be interpreted or exported to other document formats; however, its descendants shall be processed normally.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.GroupingElements.Private">
      <summary>
            (Private element) A grouping element containing private content belonging to the application producing it. The structural significance of this type of element is unspecified and shall be determined entirely by the conforming writer. Neither the Private element nor any of its descendants shall be interpreted or exported to other document formats.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel">
      <summary>
            This class reprernsts a static list of Standard structure types for the level bocks.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ParagraphlikeCategory">
      <summary>
            Standard structure types for paragraphlike elements.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ParagraphlikeCategory.P">
      <summary>
            (Paragraph) A low-level division of text.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ParagraphlikeCategory.H">
      <summary>
            (Heading) A label for a subdivision of a document’s content. It should be the first child of the division that it heads.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ParagraphlikeCategory.H1">
      <summary>
            Headings with specific levels, for use in conforming writers that cannot hierarchically nest their sections and thus cannot determine the level of a heading from its level of nesting.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ParagraphlikeCategory.H2">
      <summary>
            Headings with specific levels, for use in conforming writers that cannot hierarchically nest their sections and thus cannot determine the level of a heading from its level of nesting.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ParagraphlikeCategory.H3">
      <summary>
            Headings with specific levels, for use in conforming writers that cannot hierarchically nest their sections and thus cannot determine the level of a heading from its level of nesting.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ParagraphlikeCategory.H4">
      <summary>
            Headings with specific levels, for use in conforming writers that cannot hierarchically nest their sections and thus cannot determine the level of a heading from its level of nesting.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ParagraphlikeCategory.H5">
      <summary>
            Headings with specific levels, for use in conforming writers that cannot hierarchically nest their sections and thus cannot determine the level of a heading from its level of nesting.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ParagraphlikeCategory.H6">
      <summary>
            Headings with specific levels, for use in conforming writers that cannot hierarchically nest their sections and thus cannot determine the level of a heading from its level of nesting.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ListCategory">
      <summary>
            Standard structure types for list elements.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ListCategory.L">
      <summary>
            (List) A sequence of items of like meaning and importance. Its immediate children should be an optional caption (structure type Caption; see 14.8.4.2, “Grouping Elements”) followed by one or more list items (structure type LI).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ListCategory.LI">
      <summary>
            (List item) An individual member of a list. Its children may be one or more labels, list bodies, or both (structure types Lbl or LBody).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ListCategory.Lbl">
      <summary>
            (Label) A name or number that distinguishes a given item from others in the same list or other group of like items.
            NOTE In a dictionary list, for example, it contains the term being defined; in a bulleted or numbered list, it contains the bullet character or the number of the list item and associated punctuation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.ListCategory.LBody">
      <summary>
            (List body) The descriptive content of a list item. In a dictionary list, for example, it contains the definition of the term. It may either contain the content directly or have other BLSEs, perhaps including nested lists, as children.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.TableCategory">
      <summary>
            Standard structure types for table elements.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.TableCategory.Table">
      <summary>
            (Table) A two-dimensional layout of rectangular data cells, possibly having a complex substructure. It contains either one or more table rows (structure type TR) as children; or an optional table head (structure type THead) followed by one or more table body elements (structure type TBody) and an optional table footer (structure type TFoot). In addition, a table may have a caption as its first or last child.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.TableCategory.TR">
      <summary>
            (Table row) A row of headings or data in a table. It may contain table header cells and table data cells (structure types TH and TD).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.TableCategory.TH">
      <summary>
            (Table header cell) A table cell containing header text describing one or more rows or columns of the table.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.TableCategory.TD">
      <summary>
            (Table data cell) A table cell containing data that is part of the table’s content.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.TableCategory.THead">
      <summary>
            (Table header row group) A group of rows that constitute the header of a table. If the table is split across multiple pages, these rows may be redrawn at the top of each table fragment (although there is only one THead element).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.TableCategory.TBody">
      <summary>
            (Table body row group) A group of rows that constitute the main body portion of a table. If the table is split across multiple pages, the body area may be broken apart on a row boundary. A table may have multiple TBody elements to allow for the drawing of a border or background for a set of rows.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.BlockLevel.TableCategory.TFoot">
      <summary>
            (Table footer row group) A group of rows that constitute the footer of a table. If the table is split across multiple pages, these rows may be redrawn at the bottom of each table fragment (although there is only one TFoot element.)
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel">
      <summary>
            Standard structure types for inline-level structure elements.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.Span">
      <summary>
            (Span) A generic inline portion of text having no particular inherent characteristics. It can be used, for example, 
            to delimit a range of text with a given set of styling attributes.
            
            NOTE 1 Not all inline style changes need to be identified as a span. Text colour and font changes (including modifiers 
            such as bold, italic, and small caps) need not be so marked, since these can be derived from the PDF content. However,
            it is necessary to use a span to apply explicit layout attributes such as LineHeight, BaselineShift, or TextDecorationType.
            
            NOTE 2 Marked-content sequences having the tag Span are also used to carry certain accessibility properties (Alt, ActualText, 
            Lang, and E; see 14.9, “Accessibility Support”). Such sequences lack an MCIDproperty and are not associated with any 
            structure element. This use of the Span marked-content tag is distinct from its use as a structure type.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.Quote">
      <summary>
            (Quotation) An inline portion of text attributed to someone other than the author of the surrounding text.
            The quoted text should be contained inline within a single paragraph. This differs from the block-level element BlockQuote, 
            which consists of one or more complete paragraphs (or other elements presented as if they were complete paragraphs).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.Note">
      <summary>
            (Note) An item of explanatory text, such as a footnote or an endnote, that is referred to from within the body of the document. 
            It may have a label (structure type Lbl; see “List Elements” in 14.8.4.3, “Block-Level Structure Elements”) as a child. 
            The note may be included as a child of the structure element in the body text that refers to it, or it may be included elsewhere 
            (such as in an endnotes section) and accessed by means of a reference (structure type Reference).
            
            Tagged PDF does not prescribe the placement of footnotes in the page content order. They may be either inline or at the end of 
            the page, at the discretion of theconforming writer.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.Reference">
      <summary>
            (Reference) A citation to content elsewhere in the document.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.BibEntry">
      <summary>
            Bibliography entry) A reference identifying the external source of some cited content. It may contain a label as a child.
            
            Although a bibliography entry is likely to include component parts identifying the cited content’s author, work, publisher, 
            and so forth, no standard structure types are defined at this level of detail.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.Code">
      <summary>
            (Code) A fragment of computer program text.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.Link">
      <summary>
            (Link) An association between a portion of the ILSE’s content and a corresponding link annotation or annotations. Its children 
            should be one or more content items or child ILSEs and one or more object references identifying the associated link annotations.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.Annot">
      <summary>
            (Annotation) An association between a portion of the ILSE’s content and a corresponding PDF annotation. Annot shall be used for 
            all PDF annotations except link annotations (see the Link element) and widget annotations. 
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.Ruby">
      <summary>
            (Ruby) A side-note (annotation) written in a smaller text size and placed adjacent to the base text to which it refers. 
            A Ruby element may also contain the RB, RT, and RP elements.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interchange.LogicalStructure.StandardStructureTypes.InlineLevel.Warichu">
      <summary>
            (Warichu) A comment or annotation in a smaller text size and formatted onto two smaller lines within the height of the containing 
            text line and placed following (inline) the base text to which it refers. A Warichu element may also contain the WT and WP elements.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.PageLayout">
      <summary>
            This enum represents the list of available page layouts shall be used when the document is opened.
            </summary>
      <example>
        <code lang="cs">
            // this objects represents a PDF fixed document
            FixedDocument document = new FixedDocument(inPdf);
            
            // change viewer preferences
            document.PageLayout = PageLayout.SinglePage;
            // OR
            document.PageLayout = PageLayout.OneColumn;
            // OR
            document.PageLayout = PageLayout.TwoColumnLeft;
            // OR
            document.PageLayout = PageLayout.TwoColumnRight;
            // OR
            document.PageLayout = PageLayout.TwoPageLeft;
            // OR
            document.PageLayout = PageLayout.TwoPageRight;
            </code>
      </example>
    </member>
    <member name="F:Apitron.PDF.Kit.PageLayout.SinglePage">
      <summary>
            Display one page at a time.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageLayout.OneColumn">
      <summary>
            Display the pages in one column.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageLayout.TwoColumnLeft">
      <summary>
            Display the pages in two columns, with odd-numbered pages on the left.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageLayout.TwoColumnRight">
      <summary>
            Display the pages in two columns, with odd-numbered pages on the right.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageLayout.TwoPageLeft">
      <summary>
            Display the pages two at a time, with odd-numbered pages on the left.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageLayout.TwoPageRight">
      <summary>
            Display the pages two at a time, with odd-numbered pages on the right.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.PageMode">
      <summary>
            This enum represents a list of available page modes.
            </summary>
      <example>
        <code lang="cs">
            // these objects represent a fixed PDF document
            FixedDocument document = new FixedDocument(inPdf);
            
            // change viewer preferences
            document.PageMode = PageMode.UseNone;
            // OR
            document.PageMode = PageMode.UseOutlines;
            // OR
            document.PageMode = PageMode.UseThumbs;
            // OR
            document.PageMode = PageMode.UseOC;
            // OR
            document.PageMode = PageMode.FullScreen;
            // OR
            document.PageMode = PageMode.UseAttachments;
            </code>
      </example>
    </member>
    <member name="F:Apitron.PDF.Kit.PageMode.UseNone">
      <summary>
            Neither document outline nor thumbnail images visible
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageMode.UseOutlines">
      <summary>
            Document outline visible.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageMode.UseThumbs">
      <summary>
            Thumbnail images visible.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageMode.UseOC">
      <summary>
            Optional content group panel visible.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageMode.FullScreen">
      <summary>
            Full-screen mode, with no menu bar, window controls, or any other window visible.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.PageMode.UseAttachments">
      <summary>
            Attachments panel visible.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxRectangleStyle">
      <summary>
            This enum represents a box rectangle styles
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxRectangleStyle.Solid">
      <summary>
            Solid box rectangle.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxRectangleStyle.Dashed">
      <summary>
            Dashed box rectangle.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleColor">
      <summary>
            This struct represents a box style color.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleColor.White">
      <summary>
            White color.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleColor.#ctor(System.Byte,System.Byte,System.Byte)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleColor" /> struct.
            </summary>
      <param name="red">The red.</param>
      <param name="green">The green.</param>
      <param name="blue">The blue.</param>
      <example>
        <code lang="cs">
            BoxStyleColor color = new BoxStyleColor(50, 50, 50)
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleColor.Red">
      <summary>
            Gets the red component.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleColor.Green">
      <summary>
            Gets the green component.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleColor.Blue">
      <summary>
            Gets the blue compoentn.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleDashPattern">
      <summary>
            This struct represents a box style dash pattern.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleDashPattern.Solid">
      <summary>
            The solid dash style.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleDashPattern.#ctor(System.Int32[],System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleDashPattern" /> struct.
            </summary>
      <param name="onOffArray">The onoff array.</param>
      <param name="phase">The phase.</param>
      <example>
        <code lang="cs">
            BoxStyleDashPattern style = new BoxStyleDashPattern(new int[] { 10, 10 }, 5);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleDashPattern.OnOffArray">
      <summary>
            Gets the onoff array.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleDashPattern.Phase">
      <summary>
            Gets the phase.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle">
      <summary>
            This class represents a page's box style.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle" /> class.
            </summary>
      <example>
        <code lang="cs">
            PageBoxStyle pageBoxStyle = new PageBoxStyle();
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle.#ctor(Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleColor,System.Double,Apitron.PDF.Kit.FixedLayout.PageProperties.BoxRectangleStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle" /> class.
            </summary>
      <param name="color">The color.</param>
      <param name="lineWidth">Width of the line.</param>
      <param name="rectangleStyle">The rectangle style.</param>
      <example>
        <code lang="cs">
            PageBoxStyle pbs = new PageBoxStyle(new BoxStyleColor(50, 33, 85), 2.5, BoxRectangleStyle.Dashed);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle.#ctor(Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleColor,Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleDashPattern,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle" /> class.
            </summary>
      <param name="color">The color.</param>
      <param name="dashPattern">The dash pattern.</param>
      <param name="lineWidth">Width of the line.</param>
      <example>
        <code lang="cs">
            PageBoxStyle pageBoxStyle = new PageBoxStyle(new BoxStyleColor(50, 50, 50), new BoxStyleDashPattern(new int[] { 10, 10 }, 5));
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle.DashPattern">
      <summary>
            Gets or sets the dash pattern.
            </summary>
      <value>
            The dash pattern.
            </value>
      <example>
        <code lang="cs">
            PageBoxStyle pbs = new PageBoxStyle();
            pbs.BoxStyleDashPattern = new BoxStyleDashPattern(new int[] { 10, 10 }, 5);
            page.BoxStyle = pbs;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle.Color">
      <summary>
            Gets or sets the color.
            </summary>
      <value>
            The color.
            </value>
      <example>
        <code lang="cs">
            PageBoxStyle pbs = new PageBoxStyle();
            pbs.Color = new BoxStyleColor(30, 30, 30);
            page.BoxStyle = pbs;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle.LineWidth">
      <summary>
            Gets or sets the width of the line.
            </summary>
      <value>
            The width of the line.
            </value>
      <example>
        <code lang="cs">
            PageBoxStyle pbs = new PageBoxStyle();
            pbs.LineWidth = 4.9;
            page.BoxStyle = pbs;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoxStyle.RectangleStyle">
      <summary>
            Gets or sets the rectangle style.
            </summary>
      <value>
            The rectangle style.
            </value>
      <example>
        <code lang="cs">
            PageBoxStyle pbs = new PageBoxStyle();
            pbs.BoxRectangleStyle = BoxRectangleStyle.Solid; 
            // OR 
            pbs.BoxRectangleStyle = BoxRectangleStyle.Dashed;
            page.BoxStyle = pbs;
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary">
      <summary>
            This class represents a page boundary.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary" /> class.
            </summary>
      <param name="mediaBox">The media box defines the boundaries of the physical medium on which the page is to be printed. 
            It may include any extended area surrounding the finished page for bleed, printing marks, or other such purposes. 
            It may also include areas close to the edges of the medium that cannot be marked because of physical limitations of the output device. 
            Content falling outside this boundary may safely be discarded without affecting the meaning of the PDF file.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary" /> class.
            </summary>
      <param name="mediaBox">The media box defines the boundaries of the physical medium on which the page is to be printed. 
            It may include any extended area surrounding the finished page for bleed, printing marks, or other such purposes. 
            It may also include areas close to the edges of the medium that cannot be marked because of physical limitations of the output device. 
            Content falling outside this boundary may safely be discarded without affecting the meaning of the PDF file.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when displayed or printed. 
            Unlike the other boxes, the crop box has no defined meaning in terms of physical page geometry or intended use; 
            it merely imposes clipping on the page contents. However, in the absence of additional information (such as imposition 
            instructions specified in a JDF or PJTF job ticket), the crop box determines how the page’s contents shall be positioned on the output medium. 
            The default value is the page’s media box.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary" /> class.
            </summary>
      <param name="mediaBox">The media box defines the boundaries of the physical medium on which the page is to be printed.
            It may include any extended area surrounding the finished page for bleed, printing marks, or other such purposes.
            It may also include areas close to the edges of the medium that cannot be marked because of physical limitations of the output device.
            Content falling outside this boundary may safely be discarded without affecting the meaning of the PDF file.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when displayed or printed.
            Unlike the other boxes, the crop box has no defined meaning in terms of physical page geometry or intended use;
            it merely imposes clipping on the page contents. However, in the absence of additional information (such as imposition
            instructions specified in a JDF or PJTF job ticket), the crop box determines how the page’s contents shall be positioned on the output medium.
            The default value is the page’s media box.</param>
      <param name="bleedBox">The bleed box (PDF 1.3) defines the region to which the contents of the page shall be clipped when output in a production environment. 
            This may include any extra bleed area needed to accommodate the physical limitations of cutting, folding, and trimming equipment. 
            The actual printed page may include printing marks that fall outside the bleed box. The default value is the page’s crop box.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary" /> class.
            </summary>
      <param name="mediaBox">The media box defines the boundaries of the physical medium on which the page is to be printed.
            It may include any extended area surrounding the finished page for bleed, printing marks, or other such purposes.
            It may also include areas close to the edges of the medium that cannot be marked because of physical limitations of the output device.
            Content falling outside this boundary may safely be discarded without affecting the meaning of the PDF file.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when displayed or printed.
            Unlike the other boxes, the crop box has no defined meaning in terms of physical page geometry or intended use;
            it merely imposes clipping on the page contents. However, in the absence of additional information (such as imposition
            instructions specified in a JDF or PJTF job ticket), the crop box determines how the page’s contents shall be positioned on the output medium.
            The default value is the page’s media box.</param>
      <param name="bleedBox">The bleed box (PDF 1.3) defines the region to which the contents of the page shall be clipped when output in a production environment.
            This may include any extra bleed area needed to accommodate the physical limitations of cutting, folding, and trimming equipment.
            The actual printed page may include printing marks that fall outside the bleed box. The default value is the page’s crop box.</param>
      <param name="trimBox">The trim box (PDF 1.3) defines the intended dimensions of the finished page after trimming. 
            It may be smaller than the media box to allow for production-related content, such as printing instructions, 
            cut marks, or colour bars. The default value is the page’s crop box.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary" /> class.
            </summary>
      <param name="mediaBox">The media box defines the boundaries of the physical medium on which the page is to be printed.
            It may include any extended area surrounding the finished page for bleed, printing marks, or other such purposes.
            It may also include areas close to the edges of the medium that cannot be marked because of physical limitations of the output device.
            Content falling outside this boundary may safely be discarded without affecting the meaning of the PDF file.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when displayed or printed.
            Unlike the other boxes, the crop box has no defined meaning in terms of physical page geometry or intended use;
            it merely imposes clipping on the page contents. However, in the absence of additional information (such as imposition
            instructions specified in a JDF or PJTF job ticket), the crop box determines how the page’s contents shall be positioned on the output medium.
            The default value is the page’s media box.</param>
      <param name="bleedBox">The bleed box (PDF 1.3) defines the region to which the contents of the page shall be clipped when output in a production environment.
            This may include any extra bleed area needed to accommodate the physical limitations of cutting, folding, and trimming equipment.
            The actual printed page may include printing marks that fall outside the bleed box. The default value is the page’s crop box.</param>
      <param name="trimBox">The trim box (PDF 1.3) defines the intended dimensions of the finished page after trimming.
            It may be smaller than the media box to allow for production-related content, such as printing instructions,
            cut marks, or colour bars. The default value is the page’s crop box.</param>
      <param name="artBox">The art box (PDF 1.3) defines the extent of the page’s meaningful content (including potential white space) as intended by the page’s creator. 
            The default value is the page’s crop box.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.HasArtBox">
      <summary>
            Gets a value indicating whether this instance has art box.
            </summary>
      <value>
        <c>true</c> if this instance has art box; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            bool flag = page.Boundary.HasArtBox;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.HasTrimBox">
      <summary>
            Gets a value indicating whether this instance has trim box.
            </summary>
      <value>
        <c>true</c> if this instance has trim box; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            bool flag = page.Boundary.HasTrimBox;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.HasBleedBox">
      <summary>
            Gets a value indicating whether this instance has bleed box.
            </summary>
      <value>
        <c>true</c> if this instance has bleed box; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            bool flag = page.Boundary.HasBleedBox;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.HasCropBox">
      <summary>
            Gets a value indicating whether this instance has crop box.
            </summary>
      <value>
        <c>true</c> if this instance has crop box; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            bool flag = page.Boundary.HasCropBox;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.ArtBox">
      <summary>
            Gets the art box
            The art box (PDF 1.3) defines the extent of the page’s meaningful content (including potential white space) as intended by the page’s creator. 
            The default value is the page’s crop box.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.TrimBox">
      <summary>
            Gets the trim box
            The trim box (PDF 1.3) defines the intended dimensions of the finished page after trimming. 
            It may be smaller than the media box to allow for production-related content, such as printing instructions, cut marks, or colour bars. 
            The default value is the page’s crop box.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.BleedBox">
      <summary>
            Gets the bleed box
            The bleed box (PDF 1.3) defines the region to which the contents of the page shall be clipped when output in a production environment. 
            This may include any extra bleed area needed to accommodate the physical limitations of cutting, folding, and trimming equipment. 
            The actual printed page may include printing marks that fall outside the bleed box. The default value is the page’s crop box.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.MediaBox">
      <summary>
            Gets the media box
            The media box defines the boundaries of the physical medium on which the page is to be printed. 
            It may include any extended area surrounding the finished page for bleed, printing marks, or other such purposes. 
            It may also include areas close to the edges of the medium that cannot be marked because of physical limitations of the output device. 
            Content falling outside this boundary may safely be discarded without affecting the meaning of the PDF file.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary.CropBox">
      <summary>
            Gets the crop box
            The crop box defines the region to which the contents of the page shall be clipped (cropped) when displayed or printed. 
            Unlike the other boxes, the crop box has no defined meaning in terms of physical page geometry or intended use; 
            it merely imposes clipping on the page contents. However, in the absence of additional information (such as imposition instructions specified 
            in a JDF or PJTF job ticket), the crop box determines how the page’s contents shall be positioned on the output medium. 
            The default value is the page’s media box.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PageProperties.PageRotate">
      <summary>
            This enum represents a page rotation option.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageProperties.PageRotate.Rotate0">
      <summary>
            Rotate on 0 degrees by which the page shall be rotated clockwise when displayed or printed.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageProperties.PageRotate.Rotate90">
      <summary>
            Rotate on 90 degrees by which the page shall be rotated clockwise when displayed or printed.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageProperties.PageRotate.Rotate180">
      <summary>
            Rotate on 180 degrees by which the page shall be rotated clockwise when displayed or printed.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PageProperties.PageRotate.Rotate270">
      <summary>
            Rotate on 270 degrees by which the page shall be rotated clockwise when displayed or printed.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace">
      <summary>
            This class represents a CalGray color space.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace">
      <summary>
            This class represents an abstract color space.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
            </summary>
      <param name="resourceID">The id.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace.#ctor(System.String,System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="whitePoint">The white point is an array of three numbers [XW YW ZW] specifying the tristimulus value, 
            in the CIE 1931 XYZ space, of the diffuse white point. 
            The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.</param>
      <example>
        <code lang="cs">
            CalGrayColorSpace csCalGray = new CalGrayColorSpace("CS_CALGRAY", new double[] { 0.9505, 1.0000, 1.0890 };
            
            // Set color space
            page.Content.SetNonStrokingColorSpace("CS_CALGRAY");
            page.Content.SetStrokingColorSpace("CS_CALGRAY");
            
            // Set color
            page.Content.SetNonStrokingColor(0.67);
            page.Content.SetStrokingColor(0.4);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace.#ctor(System.String,System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace" /> class.
            </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="whitePoint">The white point is an array of three numbers [XW YW ZW] specifying the tristimulus value, 
            in the CIE 1931 XYZ space, of the diffuse white point. 
            The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.</param>
      <param name="blackPoint">The black point is an array of three numbers [XB YB ZB] specifying the tristimulus value, 
            in the CIE 1931 XYZ space, of the diffuse black point. 
            All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].</param>
      <example>
        <code lang="cs">
            CalGrayColorSpace csCalGray = new CalGrayColorSpace("CS_CALGRAY", new double[] { 0.0, 1.0, 0.0 }, new double[] { 0.0, 0.0, 0.0 });
            // Set color space
            page.Content.SetNonStrokingColorSpace("CS_CALGRAY");
            page.Content.SetStrokingColorSpace("CS_CALGRAY");
            
            // Set color
            page.Content.SetNonStrokingColor(0.67);
            page.Content.SetStrokingColor(0.4);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace.#ctor(System.String,System.Double[],System.Double[],System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace" /> class.
            </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="whitePoint">The white point is an array of three numbers [XW YW ZW] specifying the tristimulus value,
            in the CIE 1931 XYZ space, of the diffuse white point.
            The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.</param>
      <param name="blackPoint">The black point is an array of three numbers [XB YB ZB] specifying the tristimulus value,
            in the CIE 1931 XYZ space, of the diffuse black point.
            All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].</param>
      <param name="gamma">The gamma is a number defining the gamma for the gray component. Gamma shall be positive and is generally greater than or equal to 1. 
            Default value: 1.</param>
      <example>
        <code lang="cs">
            CalGrayColorSpace csCalGray = new CalGrayColorSpace("CS_CALGRAY", new double[] { 0.0, 1.0, 0.0 }, new double[] { 0.0, 0.0, 0.0 }, 1.0);
            // Set color space
            page.Content.SetNonStrokingColorSpace("CS_CALGRAY");
            page.Content.SetStrokingColorSpace("CS_CALGRAY");
            
            // Set color
            page.Content.SetNonStrokingColor(0.67);
            page.Content.SetStrokingColor(0.4);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace.Gamma">
      <summary>
            The gamma is a number defining the gamma for the gray component. Gamma shall be positive and is generally greater than or equal to 1. 
            Default value: 1.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace.BlackPoint">
      <summary>
            The black point is an array of three numbers [XB YB ZB] specifying the tristimulus value,
            in the CIE 1931 XYZ space, of the diffuse black point.
            All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace.WhitePoint">
      <summary>
            The white point is an array of three numbers [XW YW ZW] specifying the tristimulus value,
            in the CIE 1931 XYZ space, of the diffuse white point.
            The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace">
      <summary>
            This class represents a CalRGB color space
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace.#ctor(System.String,System.Double[])">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
             </summary>
      <param name="resourceID">The id.</param>
      <param name="whitePoint">The white point is an array of three numbers [XW YW ZW] specifying the tristimulus value, 
             in the CIE 1931 XYZ space, of the diffuse white point. 
             The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.</param>
      <example>
        <code lang="cs">
             // register color space as a resource
             document.ResourceManager.RegisterResource(new CalRgbColorSpace("CS_CALRGB", new double[] { 0.12, 1.0, 0.21 }));
            
             set color space
             page.Content.SetNonStrokingColorSpace("CS_CALRGB");
             page.Content.SetNonStrokingColor(0.67, 0.99, 0.13);
            
             // set color
             page.Content.SetStrokingColorSpace("CS_CALRGB");
             page.Content.SetStrokingColor(0.4, 0.54, 0.65);
             </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace.#ctor(System.String,System.Double[],System.Double[])">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace" /> class.
             </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="whitePoint">The white point is an array of three numbers [XW YW ZW] specifying the tristimulus value, 
             in the CIE 1931 XYZ space, of the diffuse white point. 
             The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.</param>
      <param name="blackPoint">The black point is an array of three numbers [XB YB ZB] specifying the tristimulus value, 
             in the CIE 1931 XYZ space, of the diffuse black point. 
             All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].</param>
      <example>
        <code lang="cs">
             // register CalRGB color space as a resource
             document.ResourceManager.RegisterResource(new CalRgbColorSpace("CS_CALRGB", new double[] { 0.12, 1.0, 0.21 }, new double[] { 0.23, 0.54, 0.78 }));
            
             //set color space
             page.Content.SetNonStrokingColorSpace("CS_CALRGB");
             page.Content.SetNonStrokingColor(0.67, 0.99, 0.13);
            
             // set color
             page.Content.SetStrokingColorSpace("CS_CALRGB");
             page.Content.SetStrokingColor(0.4, 0.54, 0.65);
             </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace.#ctor(System.String,System.Double[],System.Double[],System.Double[])">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace" /> class.
             </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="whitePoint">The white point is an array of three numbers [XW YW ZW] specifying the tristimulus value,
             in the CIE 1931 XYZ space, of the diffuse white point.
             The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.</param>
      <param name="blackPoint">The black point is an array of three numbers [XB YB ZB] specifying the tristimulus value,
             in the CIE 1931 XYZ space, of the diffuse black point.
             All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].</param>
      <param name="gamma">The gamma is an array of three numbers [GR GG GB] specifying the gamma for the red, green, and blue (A, B, and C) components of the colour space. 
             Default value: [1.0 1.0 1.0].</param>
      <example>
        <code lang="cs">
             // register color space as a resource
             document.ResourceManager.RegisterResource(new CalRgbColorSpace("CS_CALRGB", new double[] { 0.12, 1.0, 0.21 }, new double[] { 0.23, 0.54, 0.78 }, new double[] { 1.0, 1.0, 1.0 }));
            
             //set color space
             page.Content.SetNonStrokingColorSpace("CS_CALRGB");
             page.Content.SetNonStrokingColor(0.67, 0.99, 0.13);
            
             // set color
             page.Content.SetStrokingColorSpace("CS_CALRGB");
             page.Content.SetStrokingColor(0.4, 0.54, 0.65);
             </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace.#ctor(System.String,System.Double[],System.Double[],System.Double[],System.Double[])">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalGrayColorSpace" /> class.
             </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="whitePoint">The white point is an array of three numbers [XW YW ZW] specifying the tristimulus value,
             in the CIE 1931 XYZ space, of the diffuse white point.
             The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.</param>
      <param name="blackPoint">The black point is an array of three numbers [XB YB ZB] specifying the tristimulus value,
             in the CIE 1931 XYZ space, of the diffuse black point.
             All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].</param>
      <param name="gamma">The gamma is an array of three numbers [GR GG GB] specifying the gamma for the red, green, and blue (A, B, and C) components of the colour space.
             Default value: [1.0 1.0 1.0].</param>
      <param name="matrix">The matrix is an array of nine numbers [XA YA ZA XB YB ZB XC YC ZC] specifying the linear interpretation of the decoded A, B, and C components of
             the colour space with respect to the final XYZ representation.
             Default value: the identity matrix [1 0 0 0 1 0 0 0 1].</param>
      <example>
        <code lang="cs">
             // register color space as a resource
             document.ResourceManager.RegisterResource(new CalRgbColorSpace("CS_CALRGB", new double[] { 0.12, 1.0, 0.21 }, new double[] { 0.23, 0.54, 0.78 }, new double[] { 1.0, 1.0, 1.0 }, new double[] { 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0 }));
            
             // set color space
             page.Content.SetNonStrokingColorSpace("CS_CALRGB");
             page.Content.SetNonStrokingColor(0.67, 0.99, 0.13);
            
             // set color
             page.Content.SetStrokingColorSpace("CS_CALRGB");
             page.Content.SetStrokingColor(0.4, 0.54, 0.65);
             </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace.Gamma">
      <summary>
            The gamma is an array of three numbers [GR GG GB] specifying the gamma for the red, green, and blue (A, B, and C) components of the colour space.
            Default value: [1.0 1.0 1.0].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace.BlackPoint">
      <summary>
            The black point is an array of three numbers [XB YB ZB] specifying the tristimulus value,
            in the CIE 1931 XYZ space, of the diffuse black point.
            All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace.WhitePoint">
      <summary>
            The black point is an array of three numbers [XB YB ZB] specifying the tristimulus value,
            in the CIE 1931 XYZ space, of the diffuse black point.
            All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace.Matrix">
      <summary>
            The matrix is an array of nine numbers [XA YA ZA XB YB ZB XC YC ZC] specifying the linear interpretation of the decoded A, B, and C components of
            the colour space with respect to the final XYZ representation.
            Default value: the identity matrix [1 0 0 0 1 0 0 0 1].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.CalRgbColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.ICCBasedColorSpace">
      <summary>
            This class represents an ICC-Based color space.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.ICCBasedColorSpace.#ctor(System.String,System.Byte[])">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
             </summary>
      <param name="resourceID">The id.</param>
      <param name="iccProfileData">The icc profile data.</param>
      <example>
        <code lang="cs">
             byte[] iccProfileData;
             
             // read data from ICC profile
             using (FileStream iccProfile = new FileStream("YOUR_FILE.icm", FileMode.Open, FileAccess.Read))
             {
                 iccProfileData = new byte[iccProfile.Length];
                 using (BinaryReader reader = new BinaryReader(iccProfile))
                 {
                     reader.Read(iccProfileData, 0, iccProfileData.Length);
                 }
             }
            
             // register ICCBased color space as a resource
             document.ResourceManager.RegisterResource(new ICCBasedColorSpace("CS_ICCBased", iccProfileData));
            
             // set color space
             page.Content.SetNonStrokingColorSpace("CS_ICCBased");
             page.Content.SetStrokingColorSpace("CS_ICCBased");
             
             // set color
             page.Content.SetNonStrokingColor(0.0, 0.6, 0.3);
             page.Content.SetStrokingColor(0.3, 0.6, 0.0);
             </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.ICCBasedColorSpace.#ctor(System.String,System.Byte[],System.String)">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.ICCBasedColorSpace" /> class.
             </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="iccProfileData">The icc profile data.</param>
      <param name="alternateResourceID">The alternate resource ID is an alternate colour space that shall be used in case the one specified in the stream data is not supported.</param>
      <example>
        <code lang="cs">
             byte[] iccProfileData;
             
             // register alternate color space
             document.ResourceManager.RegisterResource(new CmykColorSpace("CS_CMYK"));
             
             // read data from ICC profile
             using (FileStream iccProfile = new FileStream("YOUR_PROFILE.icm", FileMode.Open, FileAccess.Read))
             {
                 iccProfileData = new byte[iccProfile.Length];
                 using (BinaryReader reader = new BinaryReader(iccProfile))
                 {
                     reader.Read(iccProfileData, 0, iccProfileData.Length);
                 }
             }
            
             // register ICCBased color space as a resource
            document.ResourceManager.RegisterResource(new ICCBasedColorSpace("CS_ICCBased", iccProfileData, "CS_CMYK"));
            
             // set color space
             page.Content.SetNonStrokingColorSpace("CS_ICCBased");
             page.Content.SetStrokingColorSpace("CS_ICCBased");
             
             // set color
             page.Content.SetNonStrokingColor(0.0, 0.6, 0.3);
             page.Content.SetStrokingColor(0.3, 0.6, 0.0);
             </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.ICCBasedColorSpace.AlternateResourceID">
      <summary>
            Gets the alternate resource ID. The alternate resource ID is an alternate colour space that shall be used in case the one specified in the stream data is not supported.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.ICCBasedColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.ICCBasedColorSpace.ICCProfileData">
      <summary>
            Gets the ICC profile data.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace">
      <summary>
            This class represents a Lab color space.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace.#ctor(System.String,System.Double[])">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
             </summary>
      <param name="resourceID">The id.</param>
      <param name="whitePoint">The white point. An array of three numbers [XW YW ZW] that shall specify the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point; 
             The numbers XW and ZW shall be positive, and YW shall be 1.0.</param>
      <example>
        <code lang="cs">
             // register LAB color space as a resource
             document.ResourceManager.RegisterResource(new LabColorSpace("CS_LAB", new double[] { 2.72, 1.0, 0.81 }));
            
             // set color space
             page.Content.SetNonStrokingColorSpace("CS_LAB");
             page.Content.SetNonStrokingColor(67, -49, 13);
            
             // set color
             page.Content.SetStrokingColorSpace("CS_LAB");
             page.Content.SetStrokingColor(-49, 44, 15);
             </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace.#ctor(System.String,System.Double[],System.Double[])">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace" /> class.
             </summary>
      <param name="resourceID">The id.</param>
      <param name="whitePoint">The white point. An array of three numbers [XW YW ZW] that shall specify the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point; 
             The numbers XW and ZW shall be positive, and YW shall be 1.0.</param>
      <param name="blackPoint">The black point. An array of three numbers [XB YB ZB] that shall specify the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point; 
             All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].</param>
      <example>
        <code lang="cs">
             // register LAB color space as a resource
             document.ResourceManager.RegisterResource(new LabColorSpace("CS_LAB", new double[] { 2.72, 1.0, 0.81 }, new double[] { 0.72, 0.09, 0.31 }));
            
             // set color space
             page.Content.SetNonStrokingColorSpace("CS_LAB");
             page.Content.SetNonStrokingColor(67, -49, 13);
            
             // set color
             page.Content.SetStrokingColorSpace("CS_LAB");
             page.Content.SetStrokingColor(-49, 44, 15);
             </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace.#ctor(System.String,System.Double[],System.Double[],System.Double[])">
      <summary>
             Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace" /> class.
             </summary>
      <param name="resourceID">The id.</param>
      <param name="whitePoint">The white point. An array of three numbers [XW YW ZW] that shall specify the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point;
             The numbers XW and ZW shall be positive, and YW shall be 1.0.</param>
      <param name="blackPoint">The black point. An array of three numbers [XB YB ZB] that shall specify the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point;
             All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].</param>
      <param name="range">The range. An array of four numbers [amin amax bmin bmax] that shall specify the range of valid values for the a* and b* (B and C) components of the colour space—that is,
             <![CDATA[amin <= a* <= amax]]> and <![CDATA[bmin <= b* <= bmax]]> Component values falling outside the specified range shall be adjusted to the nearest valid value without error indication.
             Default value: [−100 100 −100 100].</param>
      <example>
        <code lang="cs">
             // register LAB color space as a resource
             document.ResourceManager.RegisterResource(new LabColorSpace("CS_LAB", new double[] { 2.42, 1.0, 0.81 }, new double[] { 0.72, 0.09, 0.31 }, new double[]{-10,10,-10,10}));
            
             // set color space
             page.Content.SetNonStrokingColorSpace("CS_LAB");
             page.Content.SetNonStrokingColor(333, 456, 123);
             
             // set color
             page.Content.SetStrokingColorSpace("CS_LAB");
             page.Content.SetStrokingColor(45, -124, 90);
             </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace.Range">
      <summary>
            Gets the range. The range is an array of four numbers [amin amax bmin bmax] that shall specify the range of valid values for the a* and b* (B and C) components of the colour space—that is,
            <![CDATA[amin <= a* <= amax]]> and <![CDATA[bmin <= b* <= bmax]]> Component values falling outside the specified range shall be adjusted to the nearest valid value without error indication.
            Default value: [−100 100 −100 100].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace.BlackPoint">
      <summary>
            Gets the black point. The black point is an array of three numbers [XB YB ZB] that shall specify the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point;
            All three of these numbers shall be non-negative. Default value: [0.0 0.0 0.0].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace.WhitePoint">
      <summary>
            Gets the white point. The white point is an array of three numbers [XW YW ZW] that shall specify the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point;
            The numbers XW and ZW shall be positive, and YW shall be 1.0.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.CIEBased.LabColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.DeviceColorSpace">
      <summary>
            This class represents an abstract device color space.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.DeviceColorSpace.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="colorSpaceName">Name of the color space.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.DeviceColorSpace.ColorSpaceName">
      <summary>
            Gets the name of the color space.
            </summary>
      <value>
            The name of the color space.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.GrayColorSpace">
      <summary>
            This class represents a Gray color space.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.GrayColorSpace.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <example>
        <code lang="cs">
            GrayColorSpace csGray = new GrayColorSpace("CS_GRAY");
            
            // Set color space
            page.Content.SetNonStrokingColorSpace("CS_GRAY");
            page.Content.SetStrokingColorSpace("CS_GRAY");
            
            // Set color
            page.Content.SetNonStrokingColor(0.3);
            page.Content.SetStrokingColor(0.6);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.GrayColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.RgbColorSpace">
      <summary>
            This class represents a RGB color space.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.RgbColorSpace.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <example>
        <code lang="cs">
            document.ResourceManager.RegisterResource(new RgbColorSpace("CS_RGB"));
            
            // Set non stroking color
            page.Content.SetNonStrokingColorSpace("CS_RGB");
            page.Content.SetNonStrokingColor(0.3, 0.5, 0.54);
            
            // Set stroking color
            page.Content.SetStrokingColorSpace("CS_RGB");
            page.Content.SetStrokingColor(0.9, 0.19, 0.54);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.RgbColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.CmykColorSpace">
      <summary>
            This class represents a CMYK color space.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.CmykColorSpace.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <example>
        <code lang="cs">
            CmykColorSpace csCMYK = new CmykColorSpace("CS_CMYK");
            int count = csCMYK.ComponentsCount; //4
            
            // Set color space
            page.Content.SetNonStrokingColorSpace("CS_CMYK");
            page.Content.SetStrokingColorSpace("CS_CMYK");
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Device.CmykColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
      <example>
        <code lang="cs">
            CmykColorSpace csCMYK = new CmykColorSpace("CS_CMYK");
            int count = csCMYK.ComponentsCount; //4
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Special.IndexedColorSpace">
      <summary>
            This class represents an indexed color space.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Special.IndexedColorSpace.#ctor(System.String,System.Byte[],System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="lookupTable">The color table. 
            The colour table data shall be m * (hival + 1) bytes long, where m is the number of colour components in the base colour space. Each byte shall be an unsigned integer in the range 0 to 255 that shall be scaled to the range of the corresponding colour component in the base colour space; that is, 0 corresponds to the minimum value in the range for that component, and 255 corresponds to the maximum.</param>
      <param name="baseColorSpaceResourceID">The base color space resource ID.</param>
      <example>
        <code lang="cs">
            // register base color space as a resource
            document.ResourceManager.RegisterResource(new GrayColorSpace("CS_Gray"));
            
            // register indexed color space (m = 2 for the base i.e. Gray color space)
            document.ResourceManager.RegisterResource(new IndexedColorSpace("CS_IND", new byte[] { 0, (byte)(0.11 * 255), (byte)(0.25 * 255), (byte)(0.85 * 255), ... }, "CS_Gray"));
             
            // set color space
            page.Content.SetNonStrokingColorSpace("CS_IND");
            page.Content.SetStrokingColorSpace("CS_IND");
            
            // set color
            page.Content.SetNonStrokingColor(0);
            page.Content.SetStrokingColor(2);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Special.IndexedColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Special.IndexedColorSpace.BaseColorSpaceResourceID">
      <summary>
            Gets the base color space resource ID.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Special.PatternColorSpace">
      <summary>
            This class represents a pattern color space.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Special.PatternColorSpace.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.ColorSpace" /> class.
            </summary>
      <param name="resourceID">The id.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Special.PatternColorSpace.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Special.PatternColorSpace" /> class.
            </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="underlyingColorSpaceResourceId">The underlying color space resource id.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.ColorSpaces.Special.PatternColorSpace.ComponentsCount">
      <summary>
            Gets the components count.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Font">
      <summary>
            This class represents a font resource.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Font.#ctor(System.String,System.String,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="fontDefinition">Name of the file.</param>
      <param name="fontIndex">Index of the font (significant only for TTC font files).</param>
      <example>
        <code lang="cs">
            Font font = new Font("myFont", "../arial.ttc", 10);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Font.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Font" /> class.
            </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="standardFont">Name of the standard font.</param>
      <example>
        <code lang="cs">
            Font font = new Font("myFont", StandardFonts.Helvetica);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Font.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="fileName">Name of the file.</param>
      <param name="metricsFileName">Name of the metrics file.</param>
      <example>
        <code lang="cs">
            Font font = new Font("myFont", "../myFont.ttf", "../myFont.afm", );
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts">
      <summary>
            This enum represents the PostScript names of 14 Type1 fonts, known as the standard 14 fonts.
            </summary>
      <example>
        <code lang="cs">
            // create text object based on standart Type1 font
            TextObject text = new TextObject(StandardFonts.TimesBold, 12);
            </code>
      </example>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.TimesRoman">
      <summary>
            The Time-Roman.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.Helvetica">
      <summary>
            The Helvetica.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.Courier">
      <summary>
            The Courier.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.Symbol">
      <summary>
            The Symbol.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.TimesBold">
      <summary>
            The Times-Bold.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.HelveticaBold">
      <summary>
            The Helvetica-Bold.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.CourierBold">
      <summary>
            The Courier-Bold.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.ZapfDingbats">
      <summary>
            The ZapfDingbats.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.TimesItalic">
      <summary>
            The Times-Italic.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.HelveticaOblique">
      <summary>
            The Helvetica-Oblique.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.CourierOblique">
      <summary>
            The Courier-Oblique.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.TimesBoldItalic">
      <summary>
            The Times-BoldItalic.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.HelveticaBoldOblique">
      <summary>
            The Helvetica-BoldOblique.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts.CourierBoldOblique">
      <summary>
            The Courier-BoldOblique.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.FontType">
      <summary>
            This enum represents allowed font types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.FontType.Type1">
      <summary>
            Type1 font.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.FontType.TrueType">
      <summary>
            TrueType font.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.FontType.Type3">
      <summary>
            Type3 font.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.FontType.Type0">
      <summary>
            Composite font, also called Type0.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3Font">
      <summary>
            This class represents a Type3 font.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3Font.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3Font" /> class.
            </summary>
      <param name="resourceID">The resource ID.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3Font.Item(System.Char)">
      <summary>
            Gets or sets the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3FontGlyph" /> with the specified char code.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3FontGlyph">
      <summary>
            This class represents a Type3Font's glyph.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3FontGlyph.#ctor(System.Char,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Content.ClippedContent" /> class with clipping.
            </summary>
      <param name="unicode">The unicode.</param>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <example>
        <code lang="cs">
            Type3FontGlyph aGlyph = new Type3FontGlyph('a', 3, 3);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3FontGlyph.#ctor(System.Char)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3FontGlyph" /> class.
            </summary>
      <param name="unicode">The unicode.</param>
      <example>
        <code lang="cs">
            Type3FontGlyph aGlyph = new Type3FontGlyph('a');
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3FontGlyph.Unicode">
      <summary>
            Gets the unicode that this glyph represents.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3FontGlyph.Width">
      <summary>
            Gets the width.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Fonts.Type3FontGlyph.Height">
      <summary>
            Gets the height.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.FunctionType">
      <summary>
            This enum represents available function types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.FunctionType.Sampled">
      <summary>
            Sampled function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.FunctionType.Exponential">
      <summary>
            Exponential interpolation function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.FunctionType.Stitching">
      <summary>
            Stitching function.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.FunctionType.PostScript">
      <summary>
            PostScript calculator function
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction">
      <summary>
            This class represents a sampled function.
            Sampled functions use a sequence of sample values (contained in a stream) to provide an approximation for functions whose domains 
            and ranges are bounded. The samples are organized as an m-dimensional table in which each entry has n components.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.Resources.Functions.SamplerDelegate,System.Double[],System.Double[],System.Int32[],Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="sampler">The sampler.</param>
      <param name="domain">The domain. The domain is an array of 2 × m numbers, where m shall be the number of input values.
            For each i from 0 to m − 1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, xi, shall lie in the interval Domain2i ≤ xi ≤ Domain2i+1.
            Input values outside the declared domain shall be clipped to the nearest boundary value.</param>
      <param name="range">The range is an array of 2 × n numbers, where n shall be the number of output values. For each j from 0 to n − 1, Range2j shall be less than or equal
            to Range2j+1, and the jth output value, yj , shall lie in the interval Range2j ≤ yj ≤ Range2j+1. Output values outside the declared range shall be clipped to the nearest
            boundary value.</param>
      <param name="size">The size is an array of m positive integers that shall specify the number of samples in each input dimension of the sample table.</param>
      <param name="bitsPerSample">The bits per sample. The number of bits that shall represent each sample. (If the function has multiple output values, each one shall occupy BitsPerSample bits.)
            Valid values shall be 1, 2, 4, 8, 12, 16, 24, and 32.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction.IncrementDemensionValue(System.Double[]@,System.Double[],System.Int32[],System.Double[])">
      <summary>
            Increments the demension value.
            </summary>
      <param name="input">The input.</param>
      <param name="domain">The domain.</param>
      <param name="size">The size.</param>
      <param name="steps">The steps.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction.FunctionType">
      <summary>
            Gets the function type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction.Size">
      <summary>
            Gets the size. The size is an array of m positive integers that shall specify the number of samples in each input dimension of the sample table.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction.BitsPerSample">
      <summary>
            Gets the bits per sample. The bits per sample is a number of bits that shall represent each sample. 
            (If the function has multiple output values, each one shall occupy BitsPerSample bits.) Valid values shall be 1, 2, 4, 8, 12, 16, 24, and 32.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction.Order">
      <summary>
            Gets the interpolation order.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction.Encode">
      <summary>
            Gets the encode. The encode is an array of 2 × m numbers specifying the linear mapping of input values into the domain of the function’s sample table. 
            Default value: [0 (Size0 − 1) 0 (Size1 − 1) …].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SampledFunction.Decode">
      <summary>
            Gets the decode. The decode is an array of 2 × n numbers specifying the linear mapping of sample values into the range appropriate for the function’s output values.
            Default value: same as the value of Range.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.SamplerDelegate">
      <summary>
            This delegate represents a sampler function that will provide sample data.
            </summary>
      <param name="input">The input.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.InterpolationOrder">
      <summary>
            This enum represents an interpolation order. 
            The order of interpolation between samples.     
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.InterpolationOrder.Linear">
      <summary>
            Linear interpolation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.InterpolationOrder.Cubic">
      <summary>
            Cubic interpolation.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample">
      <summary>
            This enum represents allowed bits per sample values.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample.OneBit">
      <summary>
            One bit per sample.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample.TwoBits">
      <summary>
            Two bits per sample.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample.FourBits">
      <summary>
            Four bits per sample.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample.OneByte">
      <summary>
            One byte per sample.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample.OneAndHalfBytes">
      <summary>
            12 bits per sample.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample.TwoBytes">
      <summary>
            16 bits per sample.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample.ThreeBytes">
      <summary>
            24 bits per sample.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Functions.BitsPerSample.FourBytes">
      <summary>
            32 bits per sample.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode">
      <summary>
            The blend mode.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Normal">
      <summary>
            Selects the source colour, ignoring the backdrop.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Multiply">
      <summary>
            Multiplies the backdrop and source colour values.
            The result colour is always at least as dark as either of the two constituent colours.
            Multiplying any colour with black produces black; multiplying with white leaves the original colour unchanged. 
            Painting successive overlapping objects with a colour other than black or white produces progressively darker colours.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Screen">
      <summary>
            Multiplies the complements of the backdrop and source colour values, then complements the result.
            The result colour is always at least as light as either of the two constituent colours. Screening any colour with white produces white; 
            screening with black leaves the original colour unchanged. The effect is similar to projecting multiple photographic slides simultaneously onto a single screen.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Overlay">
      <summary>
            Multiplies or screens the colours, depending on the backdrop colour value. Source colours overlay the backdrop while preserving its highlights and shadows. 
            The backdrop colour is not replaced but is mixed with the source colour to reflect the lightness or darkness of the backdrop
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Darken">
      <summary>
            Selects the darker of the backdrop and source colours.
            The backdrop is replaced with the source where the source is darker; otherwise, it is left unchanged.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Lighten">
      <summary>
            Selects the lighter of the backdrop and source colours.
            The backdrop is replaced with the source where the source is lighter; otherwise, it is left unchanged.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.ColorDodge">
      <summary>
            Brightens the backdrop colour to reflect the source colour. Painting with black produces no changes.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.ColorBurn">
      <summary>
            Darkens the backdrop colour to reflect the source colour. Painting with white produces no change.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.HardLight">
      <summary>
            Multiplies or screens the colours, depending on the source colour value. The effect is similar to shining a harsh spotlight on the backdrop.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.SoftLight">
      <summary>
            Darkens or lightens the colours, depending on the source colour value. The effect is similar to shining a diffused spotlight on the backdrop.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Difference">
      <summary>
            Subtracts the darker of the two constituent colours from the lighter colour:
            Painting with white inverts the backdrop colour; painting with black produces no change
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Exclusion">
      <summary>
            Produces an effect similar to that of the Difference mode but lower in contrast. 
            Painting with white inverts the backdrop colour; painting with black produces no change.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Hue">
      <summary>
            Creates a colour with the hue of the source colour and the saturation and luminosity of the backdrop colour.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Saturation">
      <summary>
            Creates a colour with the saturation of the source colour and the hue and luminosity of the backdrop colour.
            Painting with this mode in an area of the backdrop that is a pure gray (no saturation) produces no change.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Color">
      <summary>
            Creates a colour with the hue and saturation of the source colour and the luminosity of the backdrop colour.
            This preserves the gray levels of the backdrop and is useful for colouring monochrome images or tinting colour images.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Luminocity">
      <summary>
            Creates a colour with the luminosity of the source colour and the hue and saturation of the backdrop colour.
            This produces an inverse effect to that of the Color mode.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.BlendMode.Separable">
      <summary>
      </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState">
      <summary>
            This class represents a graphics state. 
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The id.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.BlendMode">
      <summary>
            Gets or sets the blend mode.
            </summary>
      <value>
            The blend mode.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.LineWidth">
      <summary>
            Gets or sets the width of the line.
            </summary>
      <value>
            The width of the line.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.LineCapStyle">
      <summary>
            Gets or sets the line cap style.
            </summary>
      <value>
            The line cap style.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.LineJoinStyle">
      <summary>
            Gets or sets the line join style.
            </summary>
      <value>
            The line join style.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.MitterLimit">
      <summary>
            Gets or sets the mitter limit.
            </summary>
      <value>
            The mitter limit.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.DashPhase">
      <summary>
            Gets or sets the dash phase.
            </summary>
      <value>
            The dash phase.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.DashArray">
      <summary>
            Gets or sets the dash array.
            </summary>
      <value>
            The dash array.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.FontSize">
      <summary>
            Gets or sets the size of the font.
            </summary>
      <value>
            The size of the font.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.FontResourceID">
      <summary>
            Gets or sets the font resource ID.
            </summary>
      <value>
            The font resource ID.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.CurrentStrokingAlpha">
      <summary>
            Gets or sets the current stroking alpha.
            </summary>
      <value>
            The current stroking alpha.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.CurrentNonStrokingAlpha">
      <summary>
            Gets or sets the current non stroking alpha.
            </summary>
      <value>
            The current non strking alpha.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.SoftMaskResourceID">
      <summary>
            Gets or sets the soft mask resource ID.
            </summary>
      <value>
            The soft mask resource ID.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.GraphicsStates.GraphicsState.AlphaIsShape">
      <summary>
            Gets or sets the alpha source flag (“alpha is shape”), specifying whether the current soft mask and alpha constant shall beinterpreted as shape values (true) or opacity values (false).
            </summary>
      <value>
        <c>true</c> if alpha is shape; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.ShadingPattern">
      <summary>
            Shading patterns provide a smooth transition between colours across an area to be painted, independent of the resolution of any particular 
            output device and without specifying the number of steps in the colour transition.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.ShadingPattern.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="shadingResourceID">The shading resource ID.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.ShadingPattern.GraphicsStateResourceID">
      <summary>
            Gets or sets the graphics state resource ID of the graphics state containing parameters to be put into effect temporarily while the shading pattern is painted. 
            Any parameters that are so specified shall be inherited from the graphics state that was in effect at the beginning of the content stream in which the pattern 
            is defined as a resource.
            </summary>
      <value>
            The graphics state resource ID.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.ShadingPattern.Matrix">
      <summary>
            Gets or sets an array of six numbers specifying the pattern matrix. Default value: the identity matrix [1 0 0 1 0 0].
            </summary>
      <value>
            The matrix.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.ShadingPattern.ShadingResourceID">
      <summary>
            Gets the shading resource ID.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading">
      <summary>
            This class represents an axial shading.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading.#ctor(System.String,System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[],System.Double[],System.Double[],System.String[],System.Boolean[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
      <param name="coords">An array of four numbers [x0 y0 x1 y1] specifying the starting and ending coordinates of the axis, expressed in the shading’s target coordinate space.</param>
      <param name="domain">An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t. The variable is considered to vary linearly between these two values as the colour gradient varies between the starting and ending points of the axis. The variable t becomes the input argument to the colour function(s). Default value: [0.0 1.0].</param>
      <param name="functionResourceIds">A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.</param>
      <param name="extend">An array of two boolean values specifying whether to extend the shading beyond the starting and ending points of the axis, respectively. Default value: [false false].</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading.#ctor(System.String,System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[],System.Double[],System.Double[],System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
      <param name="coords">An array of four numbers [x0 y0 x1 y1] specifying the starting and ending coordinates of the axis, expressed in the shading’s target coordinate space.</param>
      <param name="domain">An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t. The variable is considered to vary linearly between these two values as the colour gradient varies between the starting and ending points of the axis. The variable t becomes the input argument to the colour function(s). Default value: [0.0 1.0].</param>
      <param name="functionResourceIds">A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading.#ctor(System.String,System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[],System.Double[],System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
      <param name="coords">An array of four numbers [x0 y0 x1 y1] specifying the starting and ending coordinates of the axis, expressed in the shading’s target coordinate space.</param>
      <param name="functionResourceIds">A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading.#ctor(System.String,System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[],System.Double[],System.String[],System.Boolean[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
      <param name="coords">An array of four numbers [x0 y0 x1 y1] specifying the starting and ending coordinates of the axis, expressed in the shading’s target coordinate space.</param>
      <param name="functionResourceIds">A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.</param>
      <param name="extend">An array of two boolean values specifying whether to extend the shading beyond the starting and ending points of the axis, respectively. Default value: [false false].</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading.Coords">
      <summary>
            Gets an array of four numbers [x0 y0 x1 y1] specifying the starting and ending coordinates of the axis, expressed in the shading’s target coordinate space.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading.FunctionResourceIds">
      <summary>
            Gets a 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading.Extend">
      <summary>
            Gets an array of two boolean values specifying whether to extend the shading beyond the starting and ending points of the axis, respectively. Default value: [false false].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading.Domain">
      <summary>
            Gets an array of two numbers [t0 t1] specifying the limiting values of a parametric variable t. The variable is considered to vary linearly between these two values as the colour gradient varies between the starting and ending points of the axis. The variable t becomes the input argument to the colour function(s). Default value: [0.0 1.0].
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading">
      <summary>
            This class represents a radial shading.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading.#ctor(System.String,System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[],System.Double[],System.Double[],System.String[],System.Boolean[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
      <param name="coords">An array of six numbers [x0 y0 r0 x1 y1 r1] specifying the centres and radii of the starting and ending circles, expressed in the shading’s target coordinate space. The radii r0 and r1 shall both be greater than or equal to 0. If one radius is 0, the corresponding circle shall be treated as a point; if both are 0, nothing shall be painted.</param>
      <param name="domain">An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t. The variable is considered to vary linearly between these two values as the colour gradient varies between the starting and ending circles. The variable t becomes the input argument to the colour function(s). Default value: [0.0 1.0].</param>
      <param name="functionResourceIds">A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the shading dictionary’s Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.</param>
      <param name="extend">An array of two boolean values specifying whether to extend the shading beyond the starting and ending circles, respectively. Default value: [false false].</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading.#ctor(System.String,System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[],System.Double[],System.Double[],System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.AxialShading" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
      <param name="coords">An array of six numbers [x0 y0 r0 x1 y1 r1] specifying the centres and radii of the starting and ending circles, expressed in the shading’s target coordinate space. The radii r0 and r1 shall both be greater than or equal to 0. If one radius is 0, the corresponding circle shall be treated as a point; if both are 0, nothing shall be painted.</param>
      <param name="domain">An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t. The variable is considered to vary linearly between these two values as the colour gradient varies between the starting and ending circles. The variable t becomes the input argument to the colour function(s). Default value: [0.0 1.0].</param>
      <param name="functionResourceIds">A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the shading dictionary’s Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading.#ctor(System.String,System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[],System.Double[],System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="coords">An array of six numbers [x0 y0 r0 x1 y1 r1] specifying the centres and radii of the starting and ending circles, expressed in the shading’s target coordinate space. The radii r0 and r1 shall both be greater than or equal to 0. If one radius is 0, the corresponding circle shall be treated as a point; if both are 0, nothing shall be painted.</param>
      <param name="functionResourceIds">A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the shading dictionary’s Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading.#ctor(System.String,System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[],System.Double[],System.String[],System.Boolean[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="colorSpaceResourceId">The color space resource ID. The colour space in which colour values shall beexpressed. This may be any device, CIE-based, or special colour space except a Pattern space.</param>
      <param name="background">An array of colour components appropriate to the colour space, specifying a single background colour value. If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.</param>
      <param name="boundary">An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shading’s bounding box. The coordinates shall be interpreted in the shading’s target coordinate space. If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.</param>
      <param name="coords">An array of six numbers [x0 y0 r0 x1 y1 r1] specifying the centres and radii of the starting and ending circles, expressed in the shading’s target coordinate space. The radii r0 and r1 shall both be greater than or equal to 0. If one radius is 0, the corresponding circle shall be treated as a point; if both are 0, nothing shall be painted.</param>
      <param name="functionResourceIds">A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the shading dictionary’s Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.</param>
      <param name="extend">An array of two boolean values specifying whether to extend the shading beyond the starting and ending circles, respectively. Default value: [false false].</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading.Coords">
      <summary>
            Gets an array of six numbers [x0 y0 r0 x1 y1 r1] specifying the centres and radii of the starting and ending circles, expressed in the shading’s target coordinate space. The radii r0 and r1 shall both be greater than or equal to 0. If one radius is 0, the corresponding circle shall be treated as a point; if both are 0, nothing shall be painted.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading.FunctionResourceIds">
      <summary>
            Gets a 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionary’s colour space). The function(s) shall be called with values of the parametric variable t in the domain defined by the shading dictionary’s Domain entry. Each function’s domain shall be a superset of that of the shading dictionary. If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading.Extend">
      <summary>
            Gets an array of two boolean values specifying whether to extend the shading beyond the starting and ending circles, respectively. Default value: [false false].
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Shadings.RadialShading.Domain">
      <summary>
            Gets an array of two numbers [t0 t1] specifying the limiting values of a parametric variable t. The variable is considered to vary linearly between these two values as the colour gradient varies between the starting and ending circles. The variable t becomes the input argument to the colour function(s). Default value: [0.0 1.0].
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMask">
      <summary>
            This class represents a soft mask.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMask.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMaskSubtype,Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="subtype">The subtype.</param>
      <param name="boundary">The boundary.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMask.Group">
      <summary>
            Gets the A transparency group XObject to be used as the source of alpha or colour values for deriving the mask. 
            If the subtype S is Luminosity, the group attributes dictionary shall contain a CS entry defining the colour space in which the compositing computation is to be performed..
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMask.Subtype">
      <summary>
            Gets or sets a subtype specifying the method to be used in deriving the mask values from the transparency group specified by the <see cref="P:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMask.Group" /> entry:
            </summary>
      <value>
            The subtype.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMask.BackgroundColor">
      <summary>
            Gets or sets the color of the backgroud.
            The number of array elements determines the colour space in which the colour shall be defined:
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK/// </summary>
      <value>
            The color of the backgroud.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMaskSubtype">
      <summary>
            This enum represents subtype specifying the method to be used in deriving the mask values from the transparency group specified by the <see cref="P:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMask.Group" /> entry
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMaskSubtype.Alpha">
      <summary>
            The group’s computed alpha shall be used, disregarding its colour.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.SoftMaskSubtype.Luminosity">
      <summary>
            The group’s computed colour shall be converted to a single-component luminosity value.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.TransparencyGroup">
      <summary>
            This class represents a transparency group XObject.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent">
      <summary>
            This class represents a XObject.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent" /> class.
            </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="boundary">The boundary.</param>
      <example>
        <code lang="cs">
            FixedContent content = new FixedContent("TextArea", new Boundary(0, 0, 300, 20));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.FixedLayout.Content.ClippedContent)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent" /> class.
            </summary>
      <param name="resourceID">The resource id.</param>
      <param name="boundary">The boundary.</param>
      <param name="content">The content.</param>
      <example>
        <code lang="cs">
            FixedContent content = new FixedContent("TextArea", new Boundary(0, 0, 300, 200), clippedContent);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent.StructParent">
      <summary>
            Gets or sets the integer key of the form XObject’s entry in the structural parent tree.
            At most one of the entries StructParent or StructParents shall bepresent. A form XObject 
            shall be either a content item in its entirety or a container for marked-content sequences that are content items, but not both.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent.StructParents">
      <summary>
            Gets or sets the integer key of the form XObject’s entry in the structural parent tree.
            At most one of the entries StructParent or StructParents shall bepresent. A form 
            XObject shall be either a content item in its entirety or a container for marked-content sequences that are content items, but not both.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent.Boundary">
      <summary>
            The contents' boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent.Content">
      <summary>
            Gets the content.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent.Matrix">
      <summary>
            Gets or sets an array of six numbers specifying the form matrix, which maps form space into user space. Default value: the identity matrix [1 0 0 1 0 0].
            </summary>
      <value>
            The matrix.
            </value>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.TransparencyGroup.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent" /> class.
            </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="boundary">The boundary.</param>
      <example>
        <code lang="cs">
            FixedContent content = new FixedContent("TextArea", new Boundary(0, 0, 300, 20));
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.TransparencyGroup.Attributes">
      <summary>
            Gets the attributes of the group.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.TransparencyGroupAttributes">
      <summary>
            This class represents a transparency group attributes.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.TransparencyGroupAttributes.IsIsolated">
      <summary>
            Gets or sets a flag specifying whether the transparency group is isolated. If this flag is true, objects within the group shall be composited against a fully transparent initial backdrop; 
            if false, they shall be composited against the group’s backdrop. Default value: false.
            </summary>
      <value>
        <c>true</c> if this instance is isolated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Transparency.TransparencyGroupAttributes.IsKnockout">
      <summary>
            Gets or sets a flag specifying whether the transparency group is a knockout group. If this flag is false, later objects within the group shall be composited with earlier ones with which they overlap; 
            if true, they shall be composited with the group’s initial backdrop and shall overwrite (“knock out”) any earlier overlapping objects. Default value: false.
            </summary>
      <value>
        <c>true</c> if this instance is knockout; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Color">
      <summary>
            The color type used for <see cref="T:Apitron.PDF.Kit.FlowLayout.ContentElement" /> as foreground color.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.IStyleParameter">
      <summary>
            Base interface for all style properties.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Color.#ctor(System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Color" /> class.
            </summary>
      <param name="components">The components, color space name will be inferred from the number of array elements.
            0: transparent, 1: GRAY, 3: RGB, 4: CMYK.</param>
      <exception cref="T:System.ArgumentException">If given number of color components is not supported.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Color.#ctor(System.String,System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Color" /> class.
            </summary>
      <param name="colorSpaceName">The name of the colorspace, predefined names can be used: RGB, CMYK, GRAY. If you wish to use other colorspaces you must add them to <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager" /> used while saving <see cref="T:Apitron.PDF.Kit.FlowDocument" />.</param>
      <param name="components">The components.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="colorSpaceName" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Color.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Color" /> class.
            </summary>
      <param name="colorSpaceName">The name of the colorspace, predefined names can be used: RGB, CMYK, GRAY. If you wish to use other colorspaces you must add them to <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager" /> used while saving <see cref="T:Apitron.PDF.Kit.FlowDocument" />.</param>
      <param name="colorName">The registered color name or resource id if pattern colorspace is used.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="colorSpaceName" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="colorName" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Color.op_Equality(Apitron.PDF.Kit.Styles.Color,Apitron.PDF.Kit.Styles.Color)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Color.op_Inequality(Apitron.PDF.Kit.Styles.Color,Apitron.PDF.Kit.Styles.Color)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Color.ColorSpaceName">
      <summary>
            Gets the name of the colorspace this color belongs to.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Color.Components">
      <summary>
            Gets the components of the color. An array or doubles in range [0..1];
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Color.ColorName">
      <summary>
            Gets the name of the color. 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Color.Transparent">
      <summary>
            The transparent color.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.PredefinedColorSpaces">
      <summary>
            This class represents a list of the predefined color space names.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.PredefinedColorSpaces.RGB">
      <summary>
            The name of the RGB color space.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.PredefinedColorSpaces.Gray">
      <summary>
            The name of the Gray color space.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.PredefinedColorSpaces.CMYK">
      <summary>
            The name of the CMYK color space.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.PredefinedColorSpaces.Pattern">
      <summary>
            The name of the Pattern color space.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.PredefinedColorSpaces.RGBPattern">
      <summary>
            The name of the RGB Pattern color space.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.PredefinedColorSpaces.GrayPattern">
      <summary>
            The name of the Gray Pattern color space.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.PredefinedColorSpaces.CMYKPattern">
      <summary>
            The name of the CMYK Pattern color space.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.RgbColors">
      <summary>
            Defines commonly used colors.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Transparent">
      <summary> 
            Color Transparent
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.AliceBlue">
      <summary> 
            Color AliceBlue  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.AntiqueWhite">
      <summary> 
            Color AntiqueWhite  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Aqua">
      <summary> 
            Color Aqua       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Aquamarine">
      <summary> 
            Color Aquamarine 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Azure">
      <summary> 
            Color Azure      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Beige">
      <summary> 
            Color Beige      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Bisque">
      <summary> 
            Color Bisque     
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Black">
      <summary> 
            Color Black      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.BlanchedAlmond">
      <summary> 
            Color BlanchedAlmond  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Blue">
      <summary> 
            Color Blue       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.BlueViolet">
      <summary> 
            Color BlueViolet 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Brown">
      <summary> 
            Color Brown      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.BurlyWood">
      <summary> 
            Color BurlyWood  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.CadetBlue">
      <summary> 
            Color CadetBlue  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Chartreuse">
      <summary> 
            Color Chartreuse 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Chocolate">
      <summary> 
            Color Chocolate  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Coral">
      <summary> 
            Color Coral      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.CornflowerBlue">
      <summary> 
            Color CornflowerBlue  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Cornsilk">
      <summary> 
            Color Cornsilk   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Crimson">
      <summary> 
            Color Crimson    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Cyan">
      <summary> 
            Color Cyan       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkBlue">
      <summary> 
            Color DarkBlue   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkCyan">
      <summary> 
            Color DarkCyan   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkGoldenrod">
      <summary> 
            Color DarkGoldenrod  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkGray">
      <summary> 
            Color DarkGray   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkGreen">
      <summary> 
            Color DarkGreen  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkKhaki">
      <summary> 
            Color DarkKhaki  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkMagenta">
      <summary> 
            Color DarkMagenta
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkOliveGreen">
      <summary> 
            Color DarkOliveGreen  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkOrange">
      <summary> 
            Color DarkOrange 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkOrchid">
      <summary> 
            Color DarkOrchid 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkRed">
      <summary> 
            Color DarkRed    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkSalmon">
      <summary> 
            Color DarkSalmon 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkSeaGreen">
      <summary> 
            Color DarkSeaGreen   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkSlateBlue">
      <summary> 
            Color DarkSlateBlue  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkSlateGray">
      <summary> 
            Color DarkSlateGray   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkTurquoise">
      <summary> 
            Color DarkTurquoise   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DarkViolet">
      <summary> 
            Color DarkViolet 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DeepPink">
      <summary> 
            Color DeepPink   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DeepSkyBlue">
      <summary> 
            Color DeepSkyBlue
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DimGray">
      <summary> 
            Color DimGray    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.DodgerBlue">
      <summary> 
            Color DodgerBlue 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Firebrick">
      <summary> 
            Color Firebrick  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.FloralWhite">
      <summary> 
            Color FloralWhite
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.ForestGreen">
      <summary> 
            Color ForestGreen
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Fuchsia">
      <summary> 
            Color Fuchsia    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Gainsboro">
      <summary> 
            Color Gainsboro  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.GhostWhite">
      <summary> 
            Color GhostWhite 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Gold">
      <summary> 
            Color Gold       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Goldenrod">
      <summary> 
            Color Goldenrod  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Gray">
      <summary> 
            Color Gray       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Green">
      <summary> 
            Color Green      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.GreenYellow">
      <summary> 
            Color GreenYellow
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Honeydew">
      <summary> 
            Color Honeydew   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.HotPink">
      <summary> 
            Color HotPink    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.IndianRed">
      <summary> 
            Color IndianRed  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Indigo">
      <summary> 
            Color Indigo     
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Ivory">
      <summary> 
            Color Ivory                            
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Khaki">
      <summary> 
            Color Khaki                            
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Lavender">
      <summary> 
            Color Lavender                         
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LavenderBlush">
      <summary> 
            Color LavenderBlush                    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LawnGreen">
      <summary> 
            Color LawnGreen                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LemonChiffon">
      <summary> 
            Color LemonChiffon                     
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightBlue">
      <summary> 
            Color LightBlue                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightCoral">
      <summary> 
            Color LightCoral                       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightCyan">
      <summary> 
            Color LightCyan                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightGoldenrodYellow">
      <summary> 
            Color LightGoldenrodYellow             
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightGreen">
      <summary> 
            Color LightGreen                       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightGray">
      <summary> 
            Color LightGray                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightPink">
      <summary> 
            Color LightPink                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightSalmon">
      <summary> 
            Color LightSalmon                      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightSeaGreen">
      <summary> 
            Color LightSeaGreen                    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightSkyBlue">
      <summary> 
            Color LightSkyBlue                     
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightSlateGray">
      <summary> 
            Color LightSlateGray                   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightSteelBlue">
      <summary> 
            Color LightSteelBlue                   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LightYellow">
      <summary> 
            Color LightYellow                      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Lime">
      <summary> 
            Color Lime                             
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.LimeGreen">
      <summary> 
            Color LimeGreen                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Linen">
      <summary> 
            Color Linen                            
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Magenta">
      <summary> 
            Color Magenta                          
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Maroon">
      <summary> 
            Color Maroon                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MediumAquamarine">
      <summary> 
            Color MediumAquamarine                 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MediumBlue">
      <summary> 
            Color MediumBlue                       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MediumOrchid">
      <summary> 
            Color MediumOrchid                     
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MediumPurple">
      <summary> 
            Color MediumPurple                     
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MediumSeaGreen">
      <summary> 
            Color MediumSeaGreen                   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MediumSlateBlue">
      <summary> 
            Color MediumSlateBlue                  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MediumSpringGreen">
      <summary> 
            Color MediumSpringGreen                
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MediumTurquoise">
      <summary> 
            Color MediumTurquoise                  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MediumVioletRed">
      <summary> 
            Color MediumVioletRed                  
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MidnightBlue">
      <summary> 
            Color MidnightBlue                     
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MintCream">
      <summary> 
            Color MintCream                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.MistyRose">
      <summary> 
            Color MistyRose                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Moccasin">
      <summary> 
            Color Moccasin                         
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.NavajoWhite">
      <summary> 
            Color NavajoWhite                      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Navy">
      <summary> 
            Color Navy                             
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.OldLace">
      <summary> 
            Color OldLace                          
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Olive">
      <summary> 
            Color Olive                            
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.OliveDrab">
      <summary> 
            Color OliveDrab                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Orange">
      <summary> 
            Color Orange                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.OrangeRed">
      <summary> 
            Color OrangeRed                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Orchid">
      <summary> 
            Color Orchid                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.PaleGoldenrod">
      <summary> 
            Color PaleGoldenrod                    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.PaleGreen">
      <summary> 
            Color PaleGreen                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.PaleTurquoise">
      <summary> 
            Color PaleTurquoise                    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.PaleVioletRed">
      <summary> 
            Color PaleVioletRed                    
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.PapayaWhip">
      <summary> 
            Color PapayaWhip                       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.PeachPuff">
      <summary> 
            Color PeachPuff                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Peru">
      <summary> 
            Color Peru                             
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Pink">
      <summary> 
            Color Pink                             
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Plum">
      <summary> 
            Color Plum                             
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.PowderBlue">
      <summary> 
            Color PowderBlue                       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Purple">
      <summary> 
            Color Purple                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Red">
      <summary> 
            Color Red                              
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.RosyBrown">
      <summary> 
            Color RosyBrown                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.RoyalBlue">
      <summary> 
            Color RoyalBlue                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.SaddleBrown">
      <summary> 
            Color SaddleBrown                      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Salmon">
      <summary> 
            Color Salmon                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.SandyBrown">
      <summary> 
            Color SandyBrown                       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.SeaGreen">
      <summary> 
            Color SeaGreen                         
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.SeaShell">
      <summary> 
            Color SeaShell                         
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Sienna">
      <summary> 
            Color Sienna                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Silver">
      <summary> 
            Color Silver                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.SkyBlue">
      <summary> 
            Color SkyBlue                          
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.SlateBlue">
      <summary> 
            Color SlateBlue                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.SlateGray">
      <summary> 
            Color SlateGray                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Snow">
      <summary> 
            Color Snow                             
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.SpringGreen">
      <summary> 
            Color SpringGreen                      
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.SteelBlue">
      <summary> 
            Color SteelBlue                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Tan">
      <summary> 
            Color Tan                              
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Teal">
      <summary> 
            Color Teal                             
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Thistle">
      <summary> 
            Color Thistle                          
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Tomato">
      <summary> 
            Color Tomato                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Turquoise">
      <summary> 
            Color Turquoise                        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Violet">
      <summary> 
            Color Violet                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Wheat">
      <summary> 
            Color Wheat                            
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.White">
      <summary> 
            Color White                            
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.WhiteSmoke">
      <summary> 
            Color WhiteSmoke                       
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.Yellow">
      <summary> 
            Color Yellow                           
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.RgbColors.YellowGreen">
      <summary> 
            Color YellowGreen                      
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Length">
      <summary>
            Represents a characteristic that can be used for description of the element's dimension.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Length.FromPercentage(System.Double)">
      <summary>
            Creates length from percentage value.
            </summary>
      <param name="value">The value.</param>
      <returns>Length instance.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="value" /> is less than zero or greater than 100.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Length.FromPoints(System.Double)">
      <summary>
            Creates length from points value.
            </summary>
      <param name="value">The value.</param>
      <returns>Length instance.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="value" /> is less than zero.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Length.FromPixels(System.Double)">
      <summary>
            Creates length from pixels value.
            </summary>
      <param name="value">The value.</param>
      <returns>Length instance.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="value" /> is less than zero.</exception>
      <remarks>
            The assumed resolution is 96 dpi.
            </remarks>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Length.FromInches(System.Double)">
      <summary>
            Creates length from inches value.
            </summary>
      <param name="value">The value.</param>
      <returns>Length instance.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="value" /> is less than zero.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Length.FromCentimeters(System.Double)">
      <summary>
            Creates length from centimeters value.
            </summary>
      <param name="value">The value.</param>
      <returns>Length instance.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="value" /> is less than zero.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Length.op_Implicit(System.Double)~Apitron.PDF.Kit.Styles.Length">
      <summary>
            Performs a conversion from <see cref="T:System.Double" /> to <see cref="T:Apitron.PDF.Kit.Styles.Length" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Length.op_Implicit(System.Single)~Apitron.PDF.Kit.Styles.Length">
      <summary>
            Performs a conversion from <see cref="T:System.Single" /> to <see cref="T:Apitron.PDF.Kit.Styles.Length" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Length.Unit">
      <summary>
            Gets the unit of measure.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Length.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Length.Auto">
      <summary>
            Gets the length auto setting.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Thickness">
      <summary>
            Defines a uniform unit used for paddings, margins etc. in rectangular areas.
            Units used for each side are of type <see cref="T:Apitron.PDF.Kit.Styles.Length" />.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Thickness.#ctor(Apitron.PDF.Kit.Styles.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Thickness" /> class.
            </summary>
      <param name="uniformLength">The uniform value for all sides.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Thickness" /> class.
            </summary>
      <param name="left">The left thickness, equivalent to <see cref="M:Apitron.PDF.Kit.Styles.Length.FromPoints(System.Double)" /> call.</param>
      <param name="top">The top thickness, equivalent to <see cref="M:Apitron.PDF.Kit.Styles.Length.FromPoints(System.Double)" /> call.</param>
      <param name="right">The right thickness, equivalent to <see cref="M:Apitron.PDF.Kit.Styles.Length.FromPoints(System.Double)" /> call.</param>
      <param name="bottom">The bottom thickness, equivalent to <see cref="M:Apitron.PDF.Kit.Styles.Length.FromPoints(System.Double)" /> call.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Thickness.#ctor(Apitron.PDF.Kit.Styles.Length,Apitron.PDF.Kit.Styles.Length,Apitron.PDF.Kit.Styles.Length,Apitron.PDF.Kit.Styles.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Thickness" /> class.
            </summary>
      <param name="left">The thickness on the left.</param>
      <param name="top">The thickness on the top.</param>
      <param name="right">The thickness on the right.</param>
      <param name="bottom">The thickness on the bottom.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Thickness.Left">
      <summary>
            Gets or sets the left thickness.
            </summary>
      <value>
            The left.
            </value>
      <exception cref="T:System.ArgumentNullException">If value is null.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Thickness.Right">
      <summary>
            Gets or sets the right thickness.
            </summary>
      <value>
            The right.
            </value>
      <exception cref="T:System.ArgumentNullException">If value is null.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Thickness.Top">
      <summary>
            Gets or sets the top thickness.
            </summary>
      <value>
            The top.
            </value>
      <exception cref="T:System.ArgumentNullException">If value is null.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Thickness.Bottom">
      <summary>
            Gets or sets the bottom thickness.
            </summary>
      <value>
            The bottom.
            </value>
      <exception cref="T:System.ArgumentNullException">If value is null.</exception>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.Align">
      <summary>
            The horizontal alignment of the element’s content, it can be Left, Right, Center aligned or Justified. Only acceptable for block elements,
            this property will be ignored if the element used is not a block. Left, Right, Center values are supported by all elements. In case of Justify is used – only text elements will be affected.
            All elements inherit value from their block containers, only block elements can override parent’s Align setting.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Align.Left">
      <summary>
            Gets the object with  set to <see cref="P:Apitron.PDF.Kit.Styles.Appearance.Align.Left" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Align.Right">
      <summary>
            Gets the object with  set to <see cref="P:Apitron.PDF.Kit.Styles.Appearance.Align.Right" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Align.Center">
      <summary>
            Gets the object with  set to <see cref="P:Apitron.PDF.Kit.Styles.Appearance.Align.Center" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Align.Justify">
      <summary>
            Gets the object with  set to <see cref="P:Apitron.PDF.Kit.Styles.Appearance.Align.Justify" />.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.TilingPattern">
      <summary>
            A tiling pattern consists of a small graphical figure called a pattern cell. Painting with the pattern replicates the 
            cell at fixed horizontal and vertical intervals to fill an area. The effect is as if the figure were painted on the 
            surface of a clear glass tile, identical copies of which were then laid down in an array covering the area and trimmed 
            to its boundaries. This process is called tiling the area.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.TilingPattern.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.Boundary,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="boundary">The boundary.</param>
      <param name="xStep">The x step.</param>
      <param name="yStep">The y step.</param>
      <param name="isColored">if set to <c>true</c> is colored.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.TilingPattern.IsColored">
      <summary>
            Gets or sets a value indicating whether this instance is colored.
            </summary>
      <value>
        <c>true</c> if this instance is colored; otherwise, uncolored.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.TilingPattern.XStep">
      <summary>
            Gets or sets the desired horizontal spacing between pattern cells, measured in the pattern coordinate system.
            </summary>
      <value>
            The X step.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.TilingPattern.YStep">
      <summary>
            Gets or sets the desired vertical spacing between pattern cells, measured in the pattern coordinate system.
            </summary>
      <value>
            The Y step.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.TilingPattern.Matrix">
      <summary>
            Gets or sets an array of six numbers specifying the pattern matrix. Default value: the identity matrix [1 0 0 1 0 0].
            </summary>
      <value>
            The matrix.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.TilingPattern.Boundary">
      <summary>
            The contents' boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.Patterns.TilingPattern.Content">
      <summary>
            Gets the content.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ResourcesCollection">
      <summary>
            This class represents a resources collection.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ResourcesCollection.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager">
      <summary>
            This class represents a resource manager.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager" /> class.
            </summary>
      <example>
        <code lang="cs">
            ResourceManager resourceManager = new ResourceManager();
            
            // for example register font resource.
            resourceManager.RegisterResource(new Font("font","Arial.ttf"));
            
            // add ResourceManager into ctor of fixed document.
            FixedDocument document = new FixedDocument(resourceManager);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager.GetResource(System.String)">
      <summary>
            Gets the resource using specified ID.
            </summary>
      <param name="id">The id.</param>
      <returns>Returns registered resource by resourceId.</returns>
      <example>
        <code lang="cs">
            ResourceManager resourceManager = new ResourceManager();
            
            // register font resource
            resourceManager.RegisterResource(new Font("myFont","Arial"));
            
            // get resource
            resourceManager.GetResource("myFont");
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager.RegisterResource(Apitron.PDF.Kit.FixedLayout.Resources.Resource)">
      <summary>
            Registers the specified resource.
            </summary>
      <param name="resource">The resource.</param>
      <example>
        <code lang="cs">
            ResourceManager resourceManager = new ResourceManager();
            
            // register font resource
            resourceManager.RegisterResource(new Font("myFont","Arial"));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager.UnregisterResource(Apitron.PDF.Kit.FixedLayout.Resources.Resource)">
      <summary>
            Unregisters the specified resource.
            </summary>
      <param name="resource">The resource.</param>
      <returns>
        <c>true</c> if the specified resource has been removed; otherwise, <c>false</c>.
            </returns>
      <example>
        <code lang="cs">
            ResourceManager resourceManager = new ResourceManager();
            
            // register font resource
            resourceManager.RegisterResource(new Font("myFont","Arial"));
            
            // get resource by ResourceId and unregister it
            resourceManager.UnregisterResource(resourceManager.GetResource((ResourceId) "myFont"));
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType">
      <summary>
            This enum represents available resource types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Unknown">
      <summary>
            Unknown resource type.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.XObject">
      <summary>
            External object.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Font">
      <summary>
            Font object.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.ColorSpace">
      <summary>
            Color space object.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Shading">
      <summary>
            Shading object.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Pattern">
      <summary>
            Pattern object.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Function">
      <summary>
            Function resource.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.File">
      <summary>
            File resource.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Attachment">
      <summary>
            Attachment resource.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Page">
      <summary>
            The page.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.PageLabels">
      <summary>
            The page labels.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Thread">
      <summary>
            The thread.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Bead">
      <summary>
            The bead.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Outline">
      <summary>
            The outline.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Destination">
      <summary>
            The destination.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Action">
      <summary>
            The action
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Privilegies">
      <summary>
            The privilegies.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Annottation">
      <summary>
            The annottation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.AnnotationBorderStyle">
      <summary>
            The annottation border style.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.AppearanceDictionary">
      <summary>
            The appearance dictionary
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.AnnotationBorderEffect">
      <summary>
            The annotation border effect.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.FixedPrint">
      <summary>
            The fixed print settings.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.IconFitDictionary">
      <summary>
            The Icon fit dictionary.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.WidgetAppearanceCharacteristics">
      <summary>
            Widget Appearance Characteristics dictionary.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.TargetDictionary">
      <summary>
            Target dictionary.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Annottations">
      <summary>
            Annotations list
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Resources">
      <summary>
            Resources collection.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.GraphicsState">
      <summary>
            Graphics state.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.SoftMask">
      <summary>
            Soft mask
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.Resources.ResourceType.Hierarchy">
      <summary>
            Structure tree entry
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.UntypedResource">
      <summary>
            This class represents an untyped resource.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.UntypedResource.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.Resources.ResourceType)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="resourceID">The id.</param>
      <param name="resourceType">Type of the resource.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image">
      <summary>
            This class represents an image.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.#ctor(System.String,System.IO.Stream,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image" /> class.
            </summary>
      <param name="resourceId">The id.</param>
      <param name="imageStream">Stream with image data.</param>
      <param name="frameIndex">Index of the frame.</param>
      <example>
        <code lang="cs">
            FixedLayout.Resources.XObjects.Image image = new FixedLayout.Resources.XObjects.Image("Image1", "image.jpg", 0);
            document.ResourceManager.RegisterResource(image);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.#ctor(System.String,System.IO.Stream,System.Boolean,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <param name="imageStream">Stream with image data.</param>
      <param name="useTransparency">if set to <c>true</c> [use transparency].</param>
      <param name="frameIndex">Index of the frame.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.#ctor(System.String,System.String,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image" /> class.
            </summary>
      <param name="resourceId">The id.</param>
      <param name="fileName">Name of the file.</param>
      <param name="frameIndex">Index of the frame.</param>
      <example>
        <code lang="cs">
            FixedLayout.Resources.XObjects.Image image = new FixedLayout.Resources.XObjects.Image("Image1", "image.jpg", 0);
            document.ResourceManager.RegisterResource(image);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.#ctor(System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image" /> class.
            </summary>
      <param name="resourceId">The resource ID.</param>
      <param name="fileName">Name of the file.</param>
      <param name="useTransparency">if set to <c>true</c> [use transparency].</param>
      <param name="frameIndex">Index of the frame.</param>
      <example>
        <code lang="cs">
            FixedLayout.Resources.XObjects.Image image = new FixedLayout.Resources.XObjects.Image("Image1", "transparent.png", true, 0);
            document.ResourceManager.RegisterResource(image);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.StructParent">
      <summary>
            The integer key of the image’s entry in the structural parent tree.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.Width">
      <summary>
            Gets the width.
            </summary>
      <example>
        <code lang="cs">
            page.Content.AppendImage("Image1", 10, 50, image.Width, image.Height);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.Height">
      <summary>
            Gets the height.
            </summary>
      <example>
        <code lang="cs">
            page.Content.AppendImage("Image1", 10, 50, image.Width, image.Height);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.SoftMaskResourceID">
      <summary>
            Gets or sets the soft mask resource ID of the image XObject defining a soft-mask image that shall 
            be used as a source of mask shape or mask opacity values in the transparent imaging model. The alpha source parameter 
            in the graphics state determines whether the mask values shall beinterpreted as shape or opacity.
            If present, this entry shall override the current soft mask in the graphics state, as well as the image’s Mask entry, 
            if any. However, the other transparency-related graphics state parameters—blend mode and alpha constant—shall remain 
            in effect. If Soft Mask is absent, the image shall have no associated soft mask (although the current soft mask in the 
            graphics state may still apply).
            </summary>
      <value>
            The soft mask resource ID.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.IsStencilMask">
      <summary>
            Gets or sets a value indicating whether this instance is stencil mask.
            The instance should be a monochrome image in which each sample is specified by a single bit. 
            However, instead of being painted in opaque black and white, the image mask is treated as a stencil mask that is partly opaque and partly transparent. 
            Sample values in the image do not represent black and white pixels; rather, they designate places on the page that should either be marked with the 
            current colour or masked out (not marked at all). Areas that are masked out retain their former contents. The effect is like applying paint in the 
            current colour through a cut-out stencil, which lets the paint reach the page in some places and masks it out in others.
            </summary>
      <value>
        <c>true</c> if this instance is stencil mask; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.UseInvertedDecode">
      <summary>
            Gets or sets an flag specifying how the source samples shall be interpreted. It is meaningfull for Stencil Masks only.
            If the flag is not set (the default for an image mask), a sample value of 0 shall mark the page with the current colour, and a 1 shall leave the previous contents unchanged.
            If the flag is set, these meanings shall be reversed.
            </summary>
      <value>
            The use inverted decode.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.MaskResourceID">
      <summary>
            Gets or sets the mask resource ID of an image XObject defining an image mask to be applied to this 
            image. It's also possible to use an array specifying a range of colours to be applied as a colour key mask, see <see cref="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.MaskColorRanges" />.
            If <see cref="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.IsStencilMask" /> is true, this entry shall not be present.
            </summary>
      <value>
            The mask resource ID.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.MaskColorRanges">
      <summary>
            Gets or sets an array specifying a range of colours to be applied to it as a colour key mask.
            </summary>
      <value>
            The mask color ranges.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image.Interpolate">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image" /> is interpolate.
            </summary>
      <value>
        <c>true</c> if interpolate; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Security.EncryptionLevel">
      <summary>
            This enum defines allowed encryption algorithms. 
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Security.EncryptionLevel.RC4_40bit">
      <summary>
            Encrypt this document with RC4 40-bit. 
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Security.EncryptionLevel.RC4_128bit">
      <summary>
            Encrypt this document with RC4 128-bit.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Security.EncryptionLevel.AES_128bit">
      <summary>
            Encrypt this document with AES v2 128-bit. (default)
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Security.EncryptionLevel.AES_256bit">
      <summary>
            Encrypt this document with AES v3 256-bit.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Security.Permissions">
      <summary>
            This enum defines allowed access permissions.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.Print">
      <summary>
             Print the document (possibly not at the highest quality level, depending on whether flag <see cref="F:Apitron.PDF.Kit.Security.Permissions.PrintHighQuality" /> is also set).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.Modify">
      <summary>
            Modify the contents of the document by operations other than those controlled by flags <see cref="F:Apitron.PDF.Kit.Security.Permissions.ModifyFields" />, <see cref="F:Apitron.PDF.Kit.Security.Permissions.FillOut" />, and <see cref="F:Apitron.PDF.Kit.Security.Permissions.Assemble" />.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.Extract">
      <summary>
            Copy or otherwise extract text and graphics from the document by operations other than that controlled by flag <see cref="F:Apitron.PDF.Kit.Security.Permissions.ExtractAccessibilityContents" />.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.ModifyFields">
      <summary>
            Add or modify text annotations, fill in interactive form fields, and, if flag <see cref="F:Apitron.PDF.Kit.Security.Permissions.Modify" /> is also set, create or modify interactive form fields (including signature fields).
            </summary>
      <remarks>Useless when <see cref="F:Apitron.PDF.Kit.Security.EncryptionLevel.RC4_40bit" /> is used.</remarks>.        
        </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.FillOut">
      <summary>
            Fill in existing interactive form fields (including signature fields), even if flag <see cref="F:Apitron.PDF.Kit.Security.Permissions.ModifyFields" /> is not set.
            </summary>
      <remarks>Useless when <see cref="F:Apitron.PDF.Kit.Security.EncryptionLevel.RC4_40bit" /> is used.</remarks>.        
        </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.ExtractAccessibilityContents">
      <summary>
            Extract text and graphics (in support of accessibility to users with disabilities or for other purposes).
            </summary>
      <remarks>Useless when <see cref="F:Apitron.PDF.Kit.Security.EncryptionLevel.RC4_40bit" /> is used.</remarks>.        
        </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.Assemble">
      <summary>
            Assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images), even if flag <see cref="F:Apitron.PDF.Kit.Security.Permissions.Modify" /> is not set.
            </summary>
      <remarks>Useless when <see cref="F:Apitron.PDF.Kit.Security.EncryptionLevel.RC4_40bit" /> is used.</remarks>.        
        </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.PrintHighQuality">
      <summary>
            Print the document to a representation from which a faithful digital copy of the PDF content could be generated. When this bit is clear (and flag <see cref="F:Apitron.PDF.Kit.Security.Permissions.Print" /> is set), printing is limited to a low-level representation of the appearance, possibly of degraded quality.
            </summary>
      <remarks>Useless when <see cref="F:Apitron.PDF.Kit.Security.EncryptionLevel.RC4_40bit" /> is used.</remarks>.        
        </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.DisallowAllPermissions">
      <summary>
            Disallow all permissions.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Security.Permissions.AllowAllPermissions">
      <summary>
            Allow all permissions.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Security.SecuritySettings">
      <summary>
            This class represents security settings for the document.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Security.SecuritySettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Security.SecuritySettings" /> class.
            </summary>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            document.SecuritySettings = new SecuritySettings();
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Security.SecuritySettings.#ctor(System.String,System.String,Apitron.PDF.Kit.Security.Permissions)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Security.SecuritySettings" /> class.
            </summary>
      <param name="userPassword">The user password.</param>
      <param name="ownerPassword">The owner password.</param>
      <param name="privileges">The privileges.</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            document.SecuritySettings = new SecuritySettings("userPwd", "ownerPwd", Permissions.AllowAllPermissions);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Security.SecuritySettings.IsAllowed(Apitron.PDF.Kit.Security.Permissions)">
      <summary>
            Determines whether the specified permission is allowed for user.
            </summary>
      <param name="flag">The permission.</param>
      <returns>
        <c>true</c> if the specified permission is allowed; otherwise, <c>false</c>.
            </returns>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            bool flag = document.SecuritySettings.IsAllowed(Permissions.Extract);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Security.SecuritySettings.Permissions">
      <summary>
            Gets or sets the permissions.
            </summary>
      <value>
            The permissions.
            </value>
      <example>
        <code lang="cs">
            Permissions permissions = Permissions.ModifyFields;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Security.SecuritySettings.UserPassword">
      <summary>
            User password. Allows viewing by anyone but 
            restricts privileges such as printing.
            </summary>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            document.SecuritySettings = new SecuritySettings();
            document.SecuritySettings.UserPassword = "topsecret";
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Security.SecuritySettings.OwnerPassword">
      <summary>
            Owner password. The owner has all privileges, including changing the user password.
            </summary>
      <remarks>
            The owner password is required. Setting this to "" (an empty string) is valid but 
            will allow anybody to change the security settings on the document.
            </remarks>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            document.SecuritySettings = new SecuritySettings();
            document.SecuritySettings.OwnerPassword = "topsecret";
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Security.SecuritySettings.EncryptionLevel">
      <summary>
            This encryption level used to encrypt this document.
            </summary>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            document.SecuritySettings = new SecuritySettings();
            document.SecuritySettings.EncryptionLevel = EncryptionLevel.AES_128bit;
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.ViewerPreferences">
      <summary>
            This class represents a viewer preferences.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.ViewerPreferences.HideWindowUI">
      <summary>
            Gets or sets a flag specifying whether to hide user interface elements in the document’s window (such as scroll bars and navigation controls), leaving only the document’s contents displayed. Default value: false.
            </summary>
      <value>
        <c>true</c> if hide window UI; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            // this objects represents a PDF fixed document
            FixedDocument document = new FixedDocument(inPdf);
            
            // change viewer preferences
            document.ViewerPreferences.HideWindowUI = true;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.ViewerPreferences.HideToolbar">
      <summary>
            Gets or sets a flag specifying whether to hide the conforming reader’s tool bars when the document is active. Default value: false.
            </summary>
      <value>
        <c>true</c> if hide toolbar; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            // this objects represents a PDF fixed document
            FixedDocument document = new FixedDocument(inPdf);
            
            // change viewer preferences
            document.ViewerPreferences.HideToolbar = true;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.ViewerPreferences.HideMenubar">
      <summary>
            Gets or sets a flag specifying whether to hide the conforming reader’s menu bar when the document is active. Default value: false.
            </summary>
      <value>
        <c>true</c> if hide menubar; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            // this objects represents a PDF fixed document
            FixedDocument document = new FixedDocument(inPdf);
            
            // change viewer preferences
            document.ViewerPreferences.HideMenubar = true;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.ViewerPreferences.FitWindow">
      <summary>
            Gets or sets a flag specifying whether to resize the document’s window to fit the size of the first displayed page. Default value: false.
            </summary>
      <value>
        <c>true</c> if [fit window]; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            // this objects represents a PDF fixed document
            FixedDocument document = new FixedDocument(inPdf);
            
            // change viewer preferences
            document.ViewerPreferences.FitWindow = true;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.ViewerPreferences.CenterWindow">
      <summary>
            Gets or sets a flag specifying whether to position the document’s window in the center of the screen. Default value: false.
            </summary>
      <value>
        <c>true</c> if center window; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            // this objects represents a PDF fixed document
            FixedDocument document = new FixedDocument(inPdf);
            
            // change viewer preferences
            document.ViewerPreferences.CenterWindow = true;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.ViewerPreferences.DisplayDocTitle">
      <summary>
            Gets or sets a flag specifying whether the window’s title bar should display the document title taken from the Title entry of the document information. If false, the title bar should instead display the name of the PDF file containing the document. Default value: false.
            </summary>
      <value>
        <c>true</c> if display doc title; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            // this objects represents a PDF fixed document
            FixedDocument document = new FixedDocument(inPdf);
            
            // change viewer preferences
            document.ViewerPreferences.DisplayDocTitle = true;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.ViewerPreferences.NonFullScreenPageMode">
      <summary>
            Gets or sets the document’s page mode, specifying how to display the document on exiting full-screen mode.
            </summary>
      <value>
        <c>true</c> if [non full screen page mode]; otherwise, <c>false</c>.
            </value>
      <example>
        <code lang="cs">
            // this objects represents a PDF fixed document
            FixedDocument document = new FixedDocument(inPdf);
            
            // change viewer preferences
            document.PageMode = PageMode.NonFullScreenPageMode;
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowDocument">
      <summary>
        <para>
            Represents a document that can be composed using flow layout rules applied to various content elements or content containers and later saved as PDF document using <see cref="M:Apitron.PDF.Kit.FlowDocument.Write(System.IO.Stream,Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager,Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary,Apitron.PDF.Kit.PdfStandard)" /> method.
            </para>
        <para>
            It can be also saved to XML using <see cref="M:Apitron.PDF.Kit.FlowDocument.SaveToXml(System.IO.Stream,Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager)" /> and loaded from it using <see cref="M:Apitron.PDF.Kit.FlowDocument.LoadFromXml(System.IO.Stream,Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager)" /> methods.
            </para>
        <para>
          <see cref="T:Apitron.PDF.Kit.FlowDocument" /> supports styling for its elements and itself using <see cref="T:Apitron.PDF.Kit.Styles.Style" /> objects which can be added to its <see cref="P:Apitron.PDF.Kit.FlowDocument.StyleManager" /> along with the matching expressions. 
            </para>
      </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.ContainerElement`1">
      <summary>
            Abstract base for all containers.
            </summary>
      <typeparam name="T">The content element.</typeparam>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.ContentElement">
      <summary>
            Represents a base class for all content elements.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContentElement.GetValue``1(Apitron.PDF.Kit.FlowLayout.PropertyDescriptor{``0})">
      <summary>
            Gets the value of the property described by </summary>
      <typeparam name="TPropertyType">
            The type of the property type.
            </typeparam>
      <param name="propertyDescriptor">
            The property descriptor.
            </param>
      <returns>
      </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContentElement.GetOverridingValue``1(Apitron.PDF.Kit.FlowLayout.PropertyDescriptor{``0})">
      <summary>
            Gets the value of the property described by  from alternative style manager.
            </summary>
      <typeparam name="TPropertyType">
            The type of the property type.
            </typeparam>
      <param name="propertyDescriptor">
            The property descriptor.
            </param>
      <returns>
      </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContentElement.FromMarkup(System.String)">
      <summary>
            Creates a collection of elements using given text as markup. The markup looks similar to XML markup, given that each element will have its <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Class" /> property assigned to the name or a set of names of the enclosing tags.
            The resulting list will contain parsed content elements(mostly textblocks) with assigned classes.
            A markup element can contain the following attributes:
            <list type="bullet"><item><c>link</c>, affects the <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Link" /> property of the created element. If link destination starts with <c>#</c> then it will be considered as a <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference" /> otherwise as a <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.LinkUri" />.
            There is an additional attribute supported, <c>href</c> that works exactly the same.
            </item><item><c>Bookmark</c>, affects the <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Bookmark" /> property of the created element.
            </item><item><c>Id</c>, affects the <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Id" /> property of the created element, so it can be linked to.
            </item><item><c>elementType</c>, sets the target content element type, currently supported values are: section, image. This attribute makes it possible to create sections containing other elements or define some of the elements as images.
            </item></list>
            A few tags have special meaning:
            <list type="bullet"><item><c>&lt;img&gt;</c>, can be used for putting images, e.g. &lt;img src='[path to file or resource id]' width='[image width][unit]' height='[image height][unit]'/&gt; creates <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Image" /> element entry.
            Unit can be omitted or can be one of the following: auto|pt|in|px|cm|%.
            </item><item><c>&lt;br/&gt;</c>, creates <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Br" /> element entry.
            </item><item><c>&lt;div/&gt;,&lt;ol/&gt;,&lt;ul/&gt;</c>, create <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Section" /> element entry.
            </item></list></summary>
      <param name="text">The text to parse.</param>
      <example>
            //This is sample markup with element that links to our website and has bold style set.
            document.StyleManager.RegisterStyle(".b",new Style(){Font = new Font("HelveticaBold",10)});
            Section section = new Section(ContentElement.FromMarkup("&lt;b link='www.apitron.com'&gt; bold &lt;/b&gt;")); 
            document.Add(section);
            </example>
      <remarks>
            Given that markup text is in XML format and its parsing will be done by XML-aware utils, entries which don't exist in XML like &amp;nbsp; should be entered differently.
            So instead of <c>&lt;tag&gt; mytext.&amp;nbsp;&lt;/tag&gt;</c> the following entities will produce the same result:
            <list type="bullet"><item>&lt;tag&gt; mytext.&amp;#160;&lt;/tag&gt;
            </item><item>&lt;tag&gt; mytext.&amp;amp;nbsp&lt;/tag&gt;</item></list></remarks>
      <returns>
            List containing markup elements, if it fails to parse the given text it will contain the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.TextBlock" /> initialized using the <paramref name="text" /> parameter.
            </returns>
      <exception cref="T:System.ArgumentNullException">If text is null.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Bookmark">
      <summary>
            Gets or sets the bookmark.
            </summary>
      <value>
            The bookmark.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Link">
      <summary>
            Gets or sets the link.
            </summary>
      <value>
            The link.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Tag">
      <summary>
            Gets or sets the tag for this element. It can be any object and can be used for any user-defined purpose.
            </summary>
      <value>
            The tag.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Empty">
      <summary>
            Gets the empty element, designed to represent an empty entry in <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.GridRow" />. Can't be inserted to other containers.
            </summary>
      <value>
            The empty element.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.TextRenderingMode">
      <summary>
            Gets or sets the text rendering mode used to draw textual elements. 
            By default all text is being drawn using <see cref="P:Apitron.PDF.Kit.Styles.Text.TextRenderingMode.Fill" /> setting.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.BackgroundImage">
      <summary>
            Gets or sets the background image for the element.
            The background of an element is the total size of the element, including padding (but not the margin and border).
            By default, a background-image is placed at the top-left corner of an element, and repeated both vertically and horizontally.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.BackgroundRepeat">
      <summary>
            Gets or sets the background repeat value for the element.
            The background repeat property sets if/how a background image will be repeated. By default, a background image is repeated both vertically and horizontally.
            </summary>
      <default>
            Not set. Equivalent to BackgroundRepeat.Repeat.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.BackgroundPosition">
      <summary>
            Gets or sets the background position value for the element.
            The background position property sets the starting position of a background image.
            </summary>
      <default>
            Not set. Equivalent to BackgroundPosition.LeftTop.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.ScriptLevel">
      <summary>
            Gets or sets the value used to create subscripting or superscripting effect. It defines the level of effect,  zero  can be used for normal scripting, positive values are for superscripting, negative for subscripting.
            Affects textual elements.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Clear">
      <summary>
            Gets or sets the clear flag for the element indicating whether it should ignore floating elements (if any) and start a new line.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Float">
      <summary>
            Gets or sets the value indicating that element can float.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Margin">
      <summary>
            Gets or sets the margin around the element.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.CellPadding">
      <summary>
            Gets or sets the cell padding, affects only <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> elements.
            </summary>
      <default>
             Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Padding">
      <summary>
            Gets or sets the padding.
            </summary>
      <default>
             Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Height">
      <summary>
            Gets or sets the height of the element.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Width">
      <summary>
            Gets or sets the width of the element.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Display">
      <summary>
            Gets or sets the display setting for the element.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.InnerBorder">
      <summary>
            Gets or sets the inner border, affects only <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> elements.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Border">
      <summary>
            Gets or sets the border around the element.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.BorderLeft">
      <summary>
            Gets or sets the left border.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.BorderRight">
      <summary>
            Gets or sets the right border.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.BorderTop">
      <summary>
            Gets or sets the top border.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.BorderBottom">
      <summary>
            Gets or sets the bottom border. 
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.BorderRadius">
      <summary>
            Gets or sets the border radius. Can be set using percentage value, in this case it's calculated using content width including padding as a base. 
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Align">
      <summary>
            Gets or sets the text align.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.VerticalAlign">
      <summary>
            Gets or sets the vertical align.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Class">
      <summary>
            Gets or sets classes list this element belongs to, so it will match selectors for this class. Use space to separate classes from each other.
             </summary>
      <example>
        <code lang="cs">
            Section section = new Section(){ Class = "article highlighted" };
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Id">
      <summary>
            Gets or sets Id.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Font">
      <summary>
            Gets or sets the font for the element.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Color">
      <summary>
            Gets or sets the foreground color for the element.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.BorderColor">
      <summary>
            Gets or sets the color of the border.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.InnerBorderColor">
      <summary>
            Gets or sets the color of the inner border affects only <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> elements.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Background">
      <summary>
            Gets or sets the background color.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.CharacterSpacing">
      <summary>
            Gets or sets the character spacing.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.LineHeight">
      <summary>
            Gets or sets the height of the line.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.TextDecoration">
      <summary>
            Gets or sets the text decoration.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.TextIndent">
      <summary>
            Gets or sets the text indent.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.WordSpacing">
      <summary>
            Gets or sets the word spacing.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.ListStyle">
      <summary>
            Gets or sets the list style.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.ListMarker">
      <summary>
            Gets or sets the list marker appearance.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.ListMarkerPadding">
      <summary>
            Gets or sets the list marker padding.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.ListCounter">
      <summary>
            Gets or sets the list counter.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.ColSpan">
      <summary>
            Gets or sets the column span that this element takes. Affects element placed inside the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> container.
            </summary>
      <default>
            Default span is 1.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContentElement.RowSpan">
      <summary>
            Gets or sets the row span that this element takes. Affects element placed inside the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> container.
            </summary>
      <default>
            Default span is 1.
            </default>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.IndexOf(`0)">
      <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.Insert(System.Int32,`0)">
      <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.GetEnumerator">
      <summary>
            Gets the enumerator.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.Add(`0)">
      <summary>
            Adds the specified element to the container.
            </summary>
      <param name="item">The element.</param>
      <exception cref="T:System.ArgumentException">If element is already present in other container or an attemp is being made to add it to the same container again.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.AddItems(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Adds the specified elements to the container.
            </summary>
      <param name="items">The container.</param>
      <exception cref="T:System.ArgumentException">If one of the elements is already present in other container or an attemp is being made to add it to the same container again.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="items" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.Clear">
      <summary>
            Removes all elements from container.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.Contains(`0)">
      <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.CopyTo(`0[],System.Int32)">
      <summary>
            Copies to.
            </summary>
      <param name="array">The array.</param>
      <param name="arrayIndex">Index of the array.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.Remove(`0)">
      <summary>
            Removes the specified item.
            </summary>
      <param name="item">The item.</param>
      <returns>True if operation succeeds, otherwise false.</returns>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Apitron.PDF.Kit.FlowLayout.ContentElement" /> at the specified index.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.ContainerElement`1.IsReadOnly">
      <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="F:Apitron.PDF.Kit.FlowDocument.defaultNamespace">
      <summary>
            Default namespace.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowDocument.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowDocument" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowDocument.Write(System.IO.Stream,Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager,Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary,Apitron.PDF.Kit.PdfStandard)">
      <summary>
            Processes document and writes PDF content to the output stream.
            </summary>
      <param name="outputStream">The output stream.</param>
      <param name="resourceManager">The resource manager that holds resources used in current markup.</param>
      <param name="boundary">The page boundary. If it's null then page size <see cref="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A4" /> will be used.</param>
      <param name="pdfStandard">The pdf standard to be used for saving. By default the ISO 32000 is being used. Other supported standards are defined in <see cref="T:Apitron.PDF.Kit.PdfStandard" /> enum.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="outputStream" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="resourceManager" /> is null.</exception>
      <exception cref="T:Apitron.PDF.Kit.ErrorHandling.DocumentSaveException">If document saving fails for any other reason.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowDocument.ToFixedDocument(Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager,Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary,Apitron.PDF.Kit.PdfStandard)">
      <summary>
            Generates the <see cref="T:Apitron.PDF.Kit.FixedDocument" /> from this instance.
            </summary>
      <param name="resourceManager">The resource manager that holds resources used in current markup.</param>
      <param name="boundary">The page boundary. If it's null then page size <see cref="P:Apitron.PDF.Kit.FixedLayout.Boundaries.A4" /> will be used.</param>
      <param name="pdfStandard">The pdf standard to be used for conversion. By default the ISO 32000 is being used. Other supported standards are defined in <see cref="T:Apitron.PDF.Kit.PdfStandard" /> enum.</param>
      <returns>
        <see cref="T:Apitron.PDF.Kit.FixedDocument" /> entity.</returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="resourceManager" /> is null.</exception>
      <exception cref="T:Apitron.PDF.Kit.ErrorHandling.DocumentSaveException">If document processing fails for any other reason.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowDocument.CreateLinkAnnotation(Apitron.PDF.Kit.FlowLayout.ContentElement,Apitron.PDF.Kit.FixedLayout.Page,System.Collections.Generic.List{System.Collections.Generic.Dictionary{Apitron.PDF.Kit.FlowLayout.ContentElement,Apitron.PDF.Kit.FlowLayout.ContentGeneration.BoxSet}},System.Collections.Generic.Dictionary{System.String,Apitron.PDF.Kit.FlowLayout.ContentElement},Apitron.PDF.Kit.FixedLayout.Boundary,System.Double[])">
      <summary>
            Creates the link annotation using fiven parameters. A helper method.
            </summary>
      <param name="keyElement">The key element.</param>
      <param name="page">The page.</param>
      <param name="contentMappings">The content mappings.</param>
      <param name="idToElementMap">The identifier to element map.</param>
      <param name="elementBoundary">The element boundary.</param>
      <param name="quadPoints">The quad points.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
      </exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowDocument.LoadFromXml(System.IO.Stream,Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager)">
      <summary>
            Loads the document from XML.
            </summary>
      <param name="inputStream">The input stream.</param>
      <param name="resourceManager">The resource manager that will contain the deserialized resources.</param>
      <returns>New instance of <see cref="T:Apitron.PDF.Kit.FlowDocument" /> containing the loaded content.</returns>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="inputStream" /> or <paramref name="resourceManager" /> is null.</exception>
      <exception cref="T:Apitron.PDF.Kit.ErrorHandling.DocumentLoadException">If an error occurs while loading.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowDocument.SaveToXml(System.IO.Stream,Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager)">
      <summary>
            Saves document structure to XML.
            </summary>
      <param name="outputStream">The output stream.</param>
      <param name="resourceManager">The resource manager containing resources for this document.</param>
      <exception cref="T:System.ArgumentNullException">outputStream</exception>
      <exception cref="T:System.ArgumentException">If <paramref name="outputStream" /> is null.</exception>
      <exception cref="T:System.ArgumentException">If <paramref name="resourceManager" /> is null.</exception>
      <remarks>
            While it's possible to save document markup to XML, not all entries will be written and read from the xml.
            E.g. when <see cref="T:Apitron.PDF.Kit.Interactive.Forms.SignatureField" /> is being written its <see cref="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.Signature" /> property is being ommitted for security reasons.
            So when the document will be read back, it will be neccessary to set new value to this property in code.
            </remarks>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowDocument.Fields">
      <summary>
            Gets the fields collection for this document.
            </summary>
      <value>
            The fields collection.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowDocument.ViewerPreferences">
      <summary>
            Gets the viewer preferences. Can be used to define viewer's startup settings.
            </summary>
      <value>
            The viewer preferences.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowDocument.PageLayout">
      <summary>
            Gets or sets the page layout that shall be used when the document is opened:
            </summary>
      <value>
            The page layout.
            </value>
      <default>
        <see cref="F:Apitron.PDF.Kit.PageLayout.SinglePage" />
      </default>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowDocument.PageMode">
      <summary>
            Gets or sets the page mode specifying how the document shall be displayed when opened.
            </summary>
      <value>
            The page mode.
            </value>
      <default>
        <see cref="F:Apitron.PDF.Kit.PageMode.UseNone" />
      </default>
    </member>
    <member name="E:Apitron.PDF.Kit.FlowDocument.NewPage">
      <summary>
            Event handler for the NewPage event.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowDocument.StyleManager">
      <summary>
            Gets the style manager for this document. It contains all styles that define the appearance of containing elements.
            </summary>
      <value>
            The style manager.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowDocument.PageHeader">
      <summary>
            Gets or the page header for the document. It will be placed at the top of each page.
            </summary>
      <value>
            The section that acts as a page header. Can be styled.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowDocument.PageFooter">
      <summary>
            Gets or sets the page footer for the document. It will be placed at the bottom of each page.
            </summary>
      <value>
            The section that acts as a page footer. Can be styled.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.ContentGenerationDelegate`2">
      <summary>
            Represents a content generation delegate which can be used for <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.TextBlock" /> creation.
            </summary>
      <typeparam name="T">Input value type.</typeparam>
      <typeparam name="V">Output value type.</typeparam>
      <param name="parameter">The input parameter.</param>
      <returns>The content generation result.</returns>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.Choice">
      <summary>
            A choice control element is an element linked to <see cref="T:Apitron.PDF.Kit.Interactive.Forms.ChoiceField" /> that contains several text items, one or more of which shall be selected as the field value. The items may be presented to the user in one of the following two forms:
            <list type="bullet"><item>
             A scrollable list box 
            </item><item>
            A combo box consisting of a drop-down list. The combo box may be accompanied by an editable text box in which the user can type a value other than the predefined choices if it's allowed by the field author.
            </item></list></summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.ControlElement">
      <summary>
            Represents a base class for all control elements.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.Controls.ControlElement.FieldName">
      <summary>
            Gets the document field name that this element is linked to. All available fields can be found in <see cref="P:Apitron.PDF.Kit.FlowDocument.Fields" /> dictionary.
            </summary>
      <value>
            The field name.
            </value>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Controls.Choice.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.Choice" /> class.
            </summary>
      <param name="fieldName">The name of the <see cref="T:Apitron.PDF.Kit.Interactive.Forms.ChoiceField" /> to create this choice control for.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="fieldName" /> is null or empty.</exception>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.CheckBox">
      <summary>
            Represents a checkbox control linked to a <see cref="T:Apitron.PDF.Kit.Interactive.Forms.CheckBoxField" />.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Controls.CheckBox.#ctor(System.String,Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.CheckBox" /> class.
            </summary>
      <param name="fieldName">The name of the <see cref="T:Apitron.PDF.Kit.Interactive.Forms.CheckBoxField" /> to create this button for.</param>
      <param name="checkboxMark">The checkbox mark.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="fieldName" /> is null or empty.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.Controls.CheckBox.CheckBoxMark">
      <summary>
            Gets the check box mark.
            </summary>
      <value>
            The check box mark.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.SignatureControl">
      <summary>
            Defines the visual representation for the <see cref="T:Apitron.PDF.Kit.Interactive.Forms.SignatureField" />.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Controls.SignatureControl.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.SignatureControl" /> class.
            </summary>
      <param name="fieldName">The <see cref="T:Apitron.PDF.Kit.Interactive.Forms.SignatureField" /> name to create this element for.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="fieldName" /> is null or empty.</exception>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.TextBox">
      <summary>
            Represents a textbox control linked to a <see cref="T:Apitron.PDF.Kit.Interactive.Forms.TextField" />.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Controls.TextBox.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.TextBox" /> class.
            </summary>
      <param name="fieldName">The <see cref="T:Apitron.PDF.Kit.Interactive.Forms.TextField" /> name to create this text box for.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="fieldName" /> is null or empty.</exception>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.RadioButton">
      <summary>
            Represents a radio button control linked to a <see cref="T:Apitron.PDF.Kit.Interactive.Forms.RadioButtonField" />. 
            You can use single field to group radio buttons together.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Controls.RadioButton.#ctor(System.String,System.String,System.String,Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.RadioButton" /> class.
            </summary>
      <param name="fieldName">The name of the <see cref="T:Apitron.PDF.Kit.Interactive.Forms.RadioButtonField" /> to create this radio button for, in case of radio buttons it functions like a grouping object.</param>
      <param name="caption">The caption.</param>
      <param name="idInGroup">The identifier for this button in group.</param>
      <param name="checkboxMark">The checkbox mark.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="fieldName" /> is null or empty.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.Controls.RadioButton.Caption">
      <summary>
            Gets the button caption.
            </summary>
      <value>
            The caption.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.Controls.RadioButton.IdInGroup">
      <summary>
            Gets the identifier in radio button group.
            </summary>
      <value>
            The identifier in group.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.Controls.RadioButton.CheckBoxMark">
      <summary>
            Gets the check box mark.
            </summary>
      <value>
            The check box mark.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.PushButton">
      <summary>
            Represents a pushbutton control linked to a <see cref="T:Apitron.PDF.Kit.Interactive.Forms.PushbuttonField" />.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Controls.PushButton.#ctor(System.String,Apitron.PDF.Kit.Interactive.Actions.Action)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Controls.PushButton" /> class.
            </summary>
      <param name="fieldName">The name of the <see cref="T:Apitron.PDF.Kit.Interactive.Forms.PushbuttonField" /> to create this button for.</param>
      <param name="action">Еhe action that will be executed when this button is clicked.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="fieldName" /> is null or empty.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.Controls.PushButton.Action">
      <summary>
            Gets the action that will be executed when this button is clicked.
            </summary>
      <value>
            The button action.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.FieldCollection">
      <summary>
            Represents a collection of  <see cref="T:Apitron.PDF.Kit.FlowDocument" /> fields.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.Add(Apitron.PDF.Kit.Interactive.Forms.Field)">
      <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.Clear">
      <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.Contains(Apitron.PDF.Kit.Interactive.Forms.Field)">
      <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
      <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.CopyTo(Apitron.PDF.Kit.Interactive.Forms.Field[],System.Int32)">
      <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.Remove(Apitron.PDF.Kit.Interactive.Forms.Field)">
      <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.IndexOf(Apitron.PDF.Kit.Interactive.Forms.Field)">
      <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
      <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.Insert(System.Int32,Apitron.PDF.Kit.Interactive.Forms.Field)">
      <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.FieldCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.FieldCollection.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.FieldCollection.IsReadOnly">
      <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
      <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.FieldCollection.Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index.
            </summary>
      <returns>
            The element at the specified index.
            </returns>
      <param name="index">The zero-based index of the element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.FieldCollection.Item(System.String)">
      <summary>
            Gets or sets the <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Field" /> with the specified field name.
            </summary>
      <value>
            The <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Field" />.
            </value>
      <param name="fieldName">Name of the field.</param>
      <returns>Field if it's present in the list, otherwise null.</returns>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Navigation.Link">
      <summary>
            Represents an abstract link entry that marks an element as a link to particular destination.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Navigation.Link.BorderStyle">
      <summary>
            Gets or sets the border style.
            </summary>
      <value>
            The border style.
            </value>
      <example>
        <code lang="cs">
            TextBlock textBlock = new TextBlock("some text");
            ...
            document.Add(new TextBlock("simple link to element with dashed border") 
            { 
               Link = new CrossReference(textBlock) 
               { 
                  BorderColor = RgbColors.Pink, 
                  BorderStyle = new AnnotationBorderStyle(2, AnnotationBorderType.Dashed, new BoxStyleDashPattern(new int[] { 5, 5 })) 
               }
            });
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Navigation.Link.Content">
      <summary>
            Gets or sets the content, an alternative description.
            </summary>
      <value>
            The content.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Navigation.Link.BorderColor">
      <summary>
            Gets or sets the color of the border.
            </summary>
      <value>
            The color.
            </value>
      <example>
        <code lang="cs">
            TextBlock textBlock = new TextBlock("some text");
            ...
            document.Add(new TextBlock("simple link to element with dashed border") 
            { 
               Link = new CrossReference(textBlock) 
               { 
                  BorderColor = RgbColors.Pink, 
                  BorderStyle = new AnnotationBorderStyle(2, AnnotationBorderType.Dashed, new BoxStyleDashPattern(new int[] { 5, 5 })) 
               }
            });
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference">
      <summary>
            Represents a link to particular element in document.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference" /> class. A link to the content area generated by processing the target element will be generated, 
            so user will be able to navigate there if his PDF reader app supports links.
            </summary>
      <param name="elementId">The element id.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="elementId" /> is null or empty.</exception>
      <example>
        <code lang="cs">
            CrossReference reference = new CrossReference("ReportID")
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference.#ctor(Apitron.PDF.Kit.FlowLayout.ContentElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference" /> class. A link to the content area generated by processing the target element will be generated, 
            so user will be able to navigate there if his PDF reader app supports links.
            <para>
            References created using <see cref="T:Apitron.PDF.Kit.FlowLayout.ContentElement" /> rather than its <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Id" /> won't be written to XML in case of using <see cref="M:Apitron.PDF.Kit.FlowDocument.SaveToXml(System.IO.Stream,Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager)" />.
            </para></summary>
      <param name="element">The destination element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" />
      </exception>
      <example>
        <code lang="cs">
            TextBlock textBlock = new TextBlock("linked element on a second page");
            ...
            CrossReference reference = new CrossReference(textBlock);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference.ElementId">
      <summary>
            Gets the destination element id, if present.
            Mutually exclusive with <see cref="P:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference.Destination" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference.Destination">
      <summary>
            Gets the destination element, if present.
            Mutually exclusive with <see cref="P:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference.ElementId" />.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Navigation.LinkUri">
      <summary>
            An outbound link to a resource by its uri.
            </summary>
      <example>
        <code lang="cs">
            Link weblink = new LinkUri("http://www.apitron.com");
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Navigation.LinkUri.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.LinkUri" /> class.
            </summary>
      <param name="uri">The URI to navigate to.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="uri" /> is null.</exception>
      <example>
        <code lang="cs">
            document.Add(new TextBlock("link to website") { Link = new LinkUri("http://www.apitron.com") });
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Navigation.LinkUri.#ctor(System.Uri)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.LinkUri" /> class.
            </summary>
      <param name="uri">The URI to navigate to.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="uri" /> is null.</exception>
      <example>
        <code lang="cs">
            document.Add(new TextBlock("link to website") { Link = new LinkUri(new Uri("www.apitron.com")) });
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Navigation.LinkUri.Uri">
      <summary>
            Gets or sets the URI.
            </summary>
      <value>
            The URI.
            </value>
      <exception cref="T:System.ArgumentNullException">value</exception>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Navigation.BookmarkEntry">
      <summary>
            A bookmark object that you may attach to <see cref="T:Apitron.PDF.Kit.FlowLayout.ContentElement" /> and get bookmark generated for it.
            </summary>
      <example>
        <code lang="cs">
            Bookmark bookmark = new BookmarkEntry((context) =&gt; string.Format("Bookmark on page{0}", context.CurrentPage + 1))
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Navigation.BookmarkEntry.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.BookmarkEntry" /> class.
            </summary>
      <param name="bookmarkLabel">The bookmark label.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="bookmarkLabel" /> is null.</exception>
      <example>
        <code lang="cs">
            Bookmark label = new BookmarkEntry("Label"); 
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Navigation.BookmarkEntry.#ctor(Apitron.PDF.Kit.FlowLayout.Content.ContentGenerationDelegate{Apitron.PDF.Kit.FlowLayout.PageGenerationContext,System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.BookmarkEntry" /> class.
            </summary>
      <param name="bookmarkLabelFunc">The bookmark label func.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="bookmarkLabelFunc" /> is null.</exception>
      <example>
        <code lang="cs">
            Bookmark timeStamp = new BookmarkEntry((context =&gt; string.Format("date &amp; time({0})", DateTime.Now.ToString("hh:mm"))))
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.PageGenerationContext">
      <summary>
            Provides a set of values which describe current page generation context.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.PageGenerationContext.CurrentPage">
      <summary>
            Gets the current page, zero-based value.
            </summary>
      <value>
            The current page.
            </value>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Apitron.PDF.Kit.FlowLayout.ContentGeneration.TextBlockContentGenerator.GetTextBlockWidth" -->
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Br">
      <summary>
            Represents a line break, default height of the element is 0 pt, but it can be changed using <see cref="P:Apitron.PDF.Kit.Styles.Style.Height" /> property.
            Always appears as block element.    
            </summary>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            document.Add(new Br(){Height = 10});
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.ContentReference">
      <summary>
            Represents a reference to a content element or a content container that contains other elements.
            A special content element that can be used to put repeating content. 
            Referenced objects can be of type: <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.FlowContent" />, <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent" />, <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image" />.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.ContentReference.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.ContentReference" /> class.
            </summary>
      <param name="resourceId">A registered name of the content piece created using <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.FlowContent" /> resource element.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.ContentReference.ResourceId">
      <summary>
            Gets the resource id.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Grid">
      <summary>
        <para>
            The grid element, can be used to group other elements in rows and columns. It's a container for <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.GridRow" /> elements which can be used to define grid rows.    
            </para>
        <para>
            Grid control has special properties which can be set via matching <see cref="T:Apitron.PDF.Kit.Styles.Style" /> or directly: <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.InnerBorder" /> for inner border definition (in addition to <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Border" />) and also <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.InnerBorderColor" />.    
            Appears as block element by default. 
            </para>
        <para>
            Every document has default style set for <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> element that uses single line <see cref="P:Apitron.PDF.Kit.Styles.Style.InnerBorder" /> and <see cref="P:Apitron.PDF.Kit.Styles.RgbColors.Black" /> as default value for <see cref="P:Apitron.PDF.Kit.Styles.Style.InnerBorderColor" />.
            </para>
      </summary>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            Grid grid = new Grid(Length.FromPercentage(8), Length.FromPercentage(40), Length.Auto);
            ...
            document.Add(table);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Grid.#ctor(Apitron.PDF.Kit.Styles.Length[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> class.
            </summary>
      <param name="columnWidths">The column widths.</param>
      <exception cref="T:System.ArgumentNullException"> if <paramref name="columnWidths" /> is null. </exception>
      <exception cref="T:System.ArgumentNullException">If any of the values in <paramref name="columnWidths" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Grid.#ctor(System.Collections.Generic.IEnumerable{Apitron.PDF.Kit.Styles.Length})">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> class.
            </summary>
      <param name="columnWidths">The column widths.</param>
      <exception cref="T:System.ArgumentNullException"> if <paramref name="columnWidths" /> is null. </exception>
      <exception cref="T:System.ArgumentNullException">If any of the values in <paramref name="columnWidths" /> is null.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.Grid.ColumnWidths">
      <summary>
            Gets the column widths.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.GridRow">
      <summary>
        <para>Represents a grid row, a subcontainer element that is being used in <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> element to group cells together.
            It can only be added into <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> element and its styling is limited (only properties which can be inherited from plus background color value affect the appearance of the grid cells).
            </para>
        <para>
            Links created using <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.CrossReference" /> or <see cref="T:Apitron.PDF.Kit.FlowLayout.Navigation.LinkUri" /> and pointing to/from GridRow elements are also not supported. This behavior can be easily workarounded by adding a link to inner elements.
            </para>
        <para>
            Each element added to grid row is being treated as a separate cell, so if you need multiple elements to be placed inside the singe cell you may use a <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Section" /> to group them together. 
            If you need the cell to be spanned vertically or horizontally you may use <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.RowSpan" /> or <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.ColSpan" /> properties respectively.
            </para>
      </summary>
      <example>
        <code lang="cs">
            // add 2 cells into the row
            FlowDocument document = new FlowDocument();
            Grid table = new Grid(Length.FromPercentage(8), Length.Auto);
            table.Add(new GridRow(new TextBlock("Date"), new TextBlock("Description")));
            document.Add(table);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.GridRow.#ctor">
      <summary>
            Creates an empty <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.GridRow" /> using auto row height.
            </summary>
      <example>
        <code lang="cs">
            GridRow row = new GridRow();
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.GridRow.#ctor(Apitron.PDF.Kit.Styles.Length)">
      <summary>
            Creates an empty <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.GridRow" /> using given row height.
            </summary>
      <param name="height">Height of the row.</param>
      <example>
        <code lang="cs">
            GridRow row = new GridRow(Length.FromInches(0.25));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.GridRow.#ctor(Apitron.PDF.Kit.FlowLayout.ContentElement[])">
      <summary>
            Creates a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.GridRow" /> using auto row height and a collection of elements for its columns.
            </summary>
      <param name="columnsContent">Content of the columns.</param>
      <example>
        <code lang="cs">
            GridRow row = new GridRow(new TextBlock("text"));
              </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.GridRow.#ctor(Apitron.PDF.Kit.Styles.Length,Apitron.PDF.Kit.FlowLayout.ContentElement[])">
      <summary>
            Creates a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.GridRow" /> using given row height and a collection of elements for its columns.
            </summary>
      <param name="height">The height.</param>
      <param name="columnsContent">Content of the columns.</param>
      <example>
        <code lang="cs">
            GridRow row = new GridRow(Length.FromCentimeters(2), new TextBlock("text"));
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.GridRow.Height">
      <summary>
            Gets or sets the height of the grid row element.
            </summary>
      <default>
            Not set.
              </default>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Hr">
      <summary>
            Horizontal line, useful for visual formatting. Always appears as block element.
            Default thickness is 1pt. but  it can be changed by using <see cref="P:Apitron.PDF.Kit.Styles.Style.Height" /> property.
            </summary>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            // something
            document.Add(new Hr());
            // something else
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.PageCount">
      <summary>
            Represents a page count element that shows number of pages generated by the <see cref="T:Apitron.PDF.Kit.FlowDocument" /> while saving.    
            </summary>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            document.PageFooter.Add(new PageCount(2) { Margin = new Thickness(5, 0, 0, 0) });
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.PageCount.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.PageCount" /> class, the <see cref="P:Apitron.PDF.Kit.FlowLayout.Content.PageCount.NumberOfDigits" /> will be set to 1.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.PageCount.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.PageCount" /> class.
            </summary>
      <param name="numberOfDigits">The number of digits, used to determine the size of the final content, minimum value is 1.</param>
      <exception cref="T:System.ArgumentException">If number of digits is less than 1.</exception>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            document.PageFooter.Add(new PageCount(2) { Margin = new Thickness(4), Padding = new Thickness(4), Border = new Border(1), BorderColor = RgbColors.Red, Font = new Font(StandardFonts.TimesBold, 16) });
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.PageCount.NumberOfDigits">
      <summary>
            Gets the number of digits reserved for page count.It will be used to calculate element width when automatic width calculation is used.
            </summary>
      <default>
            Default value is 1.
            </default>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.FlowContent">
      <summary>
            Represents a partial content resource object used for repeating pre-generated content placement.
            Such objects can be put on page using <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.ContentReference" /> element.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.FlowContent.#ctor(System.String,Apitron.PDF.Kit.FlowLayout.ContentElement,Apitron.PDF.Kit.Styles.Length,Apitron.PDF.Kit.Styles.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.FlowContent" /> class.
            </summary>
      <param name="resourceId">The resource ID to reference the created content object,  can't be null or empty.</param>
      <param name="element">The source element, should not belong to any container.</param>
      <param name="width">The width, fixed value.</param>
      <param name="height">The height, fixed value.</param>
      <exception cref="T:System.ArgumentNullException"> If any of the parameters is null.</exception>
      <exception cref="T:System.ArgumentException">If any of the parameters is out of the allowed range.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.FlowContent.Width">
      <summary>
            Gets the width in points.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.FlowContent.Height">
      <summary>
            Gets the height in points.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Image">
      <summary>
            Represents image object.
            Appears as inline element by default, but takes into account its <see cref="!:Image.Width" /> and <see cref="!:Image.Height" /> 
            properties despite the fact that such behaviour is being normally accepted by block or inline-block elements only.
            If image width or height is set to <see cref="P:Apitron.PDF.Kit.Styles.Length.Auto" /> or null it will be assumed to be equal to original value in pixels.
            </summary>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            ResourceManager resourceManager = new ResourceManager();
            resourceManager.RegisterResource(new FixedLayout.Resources.XObjects.Image("logo", "logo.jpg"));
            document.Add(new Image("logo"){ Width = 76, Height = 76 });
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Image.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Image" /> class.
            </summary>
      <param name="resourceId">The resource id.</param>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            ResourceManager resourceManager = new ResourceManager();
            resourceManager.RegisterResource(new FixedLayout.Resources.XObjects.Image("logo", "logo.jpg"));
            document.Add(new Image("logo"){ Width = 76, Height = 76 });
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.Image.ResourceId">
      <summary>
            Gets the resource Id of the referenced image object.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.PageBreak">
      <summary>
            A page break element, controls pagination behaviour.
            Works on a page-level, has no effect being added to container other than <see cref="T:Apitron.PDF.Kit.FlowDocument" />.
            If the page has available space then current page will be finished and generation will continue on next page, otherwise blank page will be added right after and generation will continue staring from new page created thereafter.
            </summary>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            document.Add(new PageBreak());
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.Section">
      <summary>
            Represents a container for grouping other elements together. Can be styled and put in other containers and also can be used to create ordered and unordered lists by setting its <see cref="!:Section.ListStyle" /> property via matching style or directly.
            Appears as block element by default.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Section.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Section" /> class.
            </summary>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            Section section = new Section();
            // section properties
            section.Background = RgbColors.Green;
            // add section elements
            section.Add(new TextBlock("23 february 2014") { Class = "party" });
            document.Add(section);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Section.#ctor(Apitron.PDF.Kit.FlowLayout.ContentElement[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Section" /> class.
            </summary>
      <param name="contentElements">The content elements to be added into the section.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.Section.#ctor(System.Collections.Generic.IEnumerable{Apitron.PDF.Kit.FlowLayout.ContentElement})">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Section" /> class.
            </summary>
      <param name="contentElements">The content elements to be added into the section.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.Content.TextBlock">
      <summary>
            Represents a simple text block that holds textual content.
            Appears as inline element by default. 
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.TextBlock.#ctor(Apitron.PDF.Kit.FlowLayout.Content.ContentGenerationDelegate{Apitron.PDF.Kit.FlowLayout.PageGenerationContext,System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.TextBlock" /> class.        
            </summary>
      <param name="contentGenerationFunction">Text generation function, it accepts the <see cref="T:Apitron.PDF.Kit.FlowLayout.PageGenerationContext" /> that can be used to provide dynamic value for text block e.g. current page number. Executed at the time of generation. </param>
      <remarks>
            Ignored, user sets the <see cref="P:Apitron.PDF.Kit.FlowLayout.Content.TextBlock.Text" /> property.
            </remarks>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.TextBlock.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.TextBlock" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FlowLayout.Content.TextBlock.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.TextBlock" /> class.
            </summary>
      <param name="text">The text.</param>
      <example>
        <code lang="cs">
            FlowDocument document = new FlowDocument();
            document.Add(new TextBlock("Hello world!"));
              </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.Content.TextBlock.Text">
      <summary>
            Gets or sets the text of the element.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Page">
      <summary>
            This class represents a PDF page.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.#ctor(Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Page" /> class.
            </summary>
      <param name="boundary">The page's boundary.</param>
      <example>
        <code lang="cs">
            Page page = new Page(new PageBoundary(Boundaries.A4));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Page" /> class.
            </summary>
      <param name="mediaBox">The media box.</param>
      <example>
        <code lang="cs">
            // create page and set boundaries of MediaBox
            Page page = new Page(new Boundary(0,0,200,200));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Page" /> class.
            </summary>
      <example>
        <code lang="cs">
            // create A4-size page by default.
            Page page = new Page();
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.CreateFromImage(System.String,Apitron.PDF.Kit.FixedLayout.Resources.ResourceManager,Apitron.PDF.Kit.FixedLayout.FromImagePageSettings,System.Int32)">
      <summary>
            Creates a page from the specified image. 
            </summary>
      <param name="fileName">Name of the file.</param>
      <param name="resourceManager">The resource manager where the image will be stored</param>
      <param name="fromImagePageSettings">The settings.</param>
      <param name="frameIndex">Index of the frame. This parameter has significance only for TIFF images.</param>
      <returns>The page.</returns>
      <example>
        <code lang="cs">
            // create a multipage document
            FixedDocument document = new FixedDocument();
            
            // create page from an image, image will be occupy the entire space of the page (f.e. scanned documents)
            Page page = Page.CreateFromImage(fileName, document.ResourceManager, settings);
            
            document.Pages.Add(page);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.Export(Apitron.PDF.Kit.FixedDocument,Apitron.PDF.Kit.FixedLayout.Page)">
      <summary>
            Exports the specified page(if it needed) to the new instance that is acceptable for the destination document.
            </summary>
      <param name="destinationDocument">The destination document.</param>
      <param name="resource">The source page for exporting.</param>
      <returns>The exported page that is acceptable for the destination document.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.Resize(Apitron.PDF.Kit.FixedLayout.PageProperties.PageBoundary)">
      <summary>
            Changes size of the page.
            </summary>
      <param name="pageBoundary">The page boundary.</param>
      <example>
        <code lang="cs">
            // create a multipage document with different page sizes (page orientation).
            FixedDocument document = new FixedDocument();
            
            // resize 5th page
            document.Pages[4].Resize(new PageBoundary(Boundaries.Ledger));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.ExtractText(Apitron.PDF.Kit.Extraction.TextExtractionOptions,System.Boolean)">
      <summary>
            Extracts text from the page.
            </summary>
      <param name="options">Text extraction options.</param>
      <param name="processBiDiText">Text extraction algorithm will try to detect and reorder bi-directional strings. Meaningfull only for: <see cref="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.FormattedText" />,<see cref="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.HtmlFragment" />, <see cref="F:Apitron.PDF.Kit.Extraction.TextExtractionOptions.HtmlPage" /></param>
      <remarks>If page is not saved yet, empty string will be returned see <see cref="M:Apitron.PDF.Kit.FixedDocument.Save" />.
            In evaluation mode only the first 50% of the text will be returned.</remarks>
      <returns>
            Text of the page.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.ExtractImages">
      <summary>
            Extracts images from the page.
            </summary>
      <remarks>If page is not saved yet then empty result will be returned.</remarks>
      <remarks>In evaluation mode all images will be extracted as ARGB bitmaps.</remarks>
      <returns>Images which are defined in the page's resources.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.Transform(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds an initial content transfomation.
            </summary>
      <param name="a">A.</param>
      <param name="b">The b.</param>
      <param name="c">The c.</param>
      <param name="d">The d.</param>
      <param name="e">The e.</param>
      <param name="f">The f.</param>
      <example>
        <code lang="cs">
            // Transform 3rd page
            Page page3 = document.Pages[2];
            page3.Transform(0.5, 0, 0, 0.5, 0, 0);
            page3.Transform(1, 0, 0, 1, 100, 100);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Page.Clear">
      <summary>
            Clears content of the page.
            </summary>
      <example>
        <code lang="cs">
            // load some multipage document in order to modify it.
            FixedDocument document = new FixedDocument(loadedDocument);
            ...
            document.Pages[3].Clear();
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Page.StructParents">
      <summary>
            The integer key of the page’s entry in the structural parent tree.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Page.Boundary">
      <summary>
            The page's boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Page.BoxStyle">
      <summary>
            Gets or sets the box style.
            </summary>
      <value>
            The box style.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Page.Rotate">
      <summary>
            Gets or sets the number of degrees by which the page shall be rotated clockwise when displayed or printed.
            </summary>
      <value>
            The rotate value.
            </value>
      <example>
        <code lang="cs">
            // rotated A4 page
            Page page = new Page(new PageBoundary(Boundaries.A4));
            page.Rotate = PageRotate.Rotate90;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Page.Content">
      <summary>
            Gets the page content.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Page.Contents">
      <summary>
            Gets the page content parts.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Page.Annotations">
      <summary>
            Gets the annotations.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Page.Resources">
      <summary>
            Gets the resources.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.Boundary">
      <summary>
            This class represents a size(Page boundaries)
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Boundary.#ctor(System.Double,System.Double,Apitron.PDF.Kit.FixedLayout.BoundaryUnits)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Boundary" /> class.
            </summary>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <param name="units">The units.</param>
      <example>
        <code lang="cs">
            Boundary boundaries = new Boundary(8.5, 11, BoundaryUnits.Inches);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Boundary.#ctor(System.Double,System.Double,System.Double,System.Double,Apitron.PDF.Kit.FixedLayout.BoundaryUnits)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.FixedLayout.Boundary" /> class.
            </summary>
      <param name="left">The left.</param>
      <param name="bottom">The bottom.</param>
      <param name="right">The right.</param>
      <param name="top">The top.</param>
      <param name="units">The units.</param>
      <example>
        <code lang="cs">
            Boundary boundary = new Boundary(0, 0, 400, 300, BoundaryUnits.Milimeter);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.Boundary.GetBoundaryInPixels(System.Int32)">
      <summary>
            Gets the boundary in pixels in the following format: [left bottom right top].
            </summary>
      <param name="dpi">Requred dpi.</param>
      <returns>Rectangular boundaries in pixels.</returns>
      <example>
        <code lang="cs">
            // get media box boundaries in pixels.
            Boundary mediaBox = Boundaries.A4;
            double[] bounds = mediaBox.GetBoundaryInPixels();
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundary.Left">
      <summary>
            Gets the left coordinate of the boundary in the <see cref="T:Apitron.PDF.Kit.FixedLayout.BoundaryUnits" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundary.Right">
      <summary>
            Gets the right coordinate of the boundary in the <see cref="T:Apitron.PDF.Kit.FixedLayout.BoundaryUnits" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundary.Top">
      <summary>
            Gets the top coordinate of the boundary in the <see cref="T:Apitron.PDF.Kit.FixedLayout.BoundaryUnits" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundary.Bottom">
      <summary>
            Gets the bottom coordinate of the boundary in the <see cref="T:Apitron.PDF.Kit.FixedLayout.BoundaryUnits" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundary.Width">
      <summary>
            Gets the width in the <see cref="T:Apitron.PDF.Kit.FixedLayout.BoundaryUnits" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FixedLayout.Boundary.Height">
      <summary>
            Gets the height in the <see cref="T:Apitron.PDF.Kit.FixedLayout.BoundaryUnits" />.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.ErrorHandling.DocumentLoadException">
      <summary>
            Indicates an error with document loading.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.Action">
      <summary>
            This class represents an abstract action.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.IAction">
      <summary>
            This interface represents an action.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.IAction.ActionType">
      <summary>
            Gets the type of the action.
            </summary>
      <value>
            The type of the action.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.IAction.Next">
      <summary>
            The next action or sequence of actions that shall be performed after the action represented by this dictionary. 
            The value is either a single action dictionary or an array of action dictionaries that shall be performed in order; 
            see the Note for further discussion.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.Action.#ctor(Apitron.PDF.Kit.Interactive.Actions.ActionType)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.Action" /> class.
            </summary>
      <param name="actionType">Type of the action.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.Action.ActionType">
      <summary>
            Gets the type of the action.
            </summary>
      <value>
            The type of the action.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.Action.Next">
      <summary>
            The next action or sequence of actions that shall be performed after the action represented by this dictionary. 
            The value is either a single action dictionary or an array of action dictionaries that shall be performed in order; 
            see the Note for further discussion.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.ActionType">
      <summary>
            This enum represenrts the list of allowed action types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.GoTo">
      <summary>
            Go to a destination in the current document.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.RemoteGoTo">
      <summary>
            Go to a destination in another document.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.EmbededGoTo">
      <summary>
            Go to a destination in an embedded file.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.Launch">
      <summary>
            Launch an application, usually to open a file.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.Thread">
      <summary>
            Begin reading an article thread.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.URI">
      <summary>
            Resolve a uniform resource identifier.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.Sound">
      <summary>
            Play a sound.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.Movie">
      <summary>
            Play a movie.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.Hide">
      <summary>
            Set an annotation’s Hidden flag.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.Named">
      <summary>
            Execute an action predefined by the conforming reader.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.SetOCGState">
      <summary>
            Set the states of optional content groups.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.Rendition">
      <summary>
            Controls the playing of multimedia content.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.Transition">
      <summary>
            Updates the display of a document, using a transition dictionary.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.GoTo3DView">
      <summary>
            Set the current view of a 3D annotation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.ActionType.JavaScript">
      <summary>
            Execute a JavaScript script.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToAction">
      <summary>
            This class represents an embeded go-to action.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToAction.#ctor(Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination,Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToAction" /> class.
            </summary>
      <param name="destination">The destination in the target to jump to.</param>
      <param name="target">(Optional)The target dictionary specifying path information to the target document. If target is null destination is parent document.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToAction.#ctor(Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination,Apitron.PDF.Kit.FixedLayout.FileSpecification,Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToAction" /> class.
            </summary>
      <param name="destination">The destination in the target to jump to.</param>
      <param name="rootDocument">The root document of the target relative to the root document of the source.</param>
      <param name="target">(Optional)The target dictionary specifying path information to the target document.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToAction.Target">
      <summary>
            Gets A target dictionary specifying path information to the target document. 
            Each target dictionary specifies one element in the full path to the target and may have nested target dictionaries specifying additional elements.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToAction.Destination">
      <summary>
            Gets The destination in the target to jump to.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToAction.NewWindow">
      <summary>
            Gets or sets a value indicating whether to open destination in a new window.
            If true, the destination document should be opened in a new window;
            if false, the destination document should replace the current document in the same window.
            If this entry is absent, the conforming reader should act according to its preference.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToAction.RootDocument">
      <summary>
            Gets The root document of the target relative to the root document of the source. If this entry is absent, the source and target share the same root document.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget">
      <summary>
            This class represents a target of the embeded go-to action
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="embededFileName">Name of the embeded file.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget.#ctor(Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget" /> class.
            </summary>
      <param name="sibling">The sibling.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget.#ctor(System.String,Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="embededFileName">Name of the embeded file.</param>
      <param name="additionalPathInformation">The additional path information.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget.TargetIsParent">
      <summary>
            Gets or sets a value indicating whether target is parent of the current document.
            </summary>
      <value>
        <c>true</c> if target is parent; otherwise, <c>false</c> - target is a child of the current document.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget.EmbededFileName">
      <summary>
            Gets or sets the name of the embeded file.
            </summary>
      <value>
            The name of the embeded file.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.EmbededGoToActionTarget.AdditionalPathInformation">
      <summary>
            Gets or sets a target dictionary specifying additional path information to the target document. 
            If this entry is absent, the current document is the target file containing the destination.
            </summary>
      <value>
            The additional path information.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.GoToAction">
      <summary>
            This class represents a go to action.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.GoToAction.#ctor(Apitron.PDF.Kit.FixedLayout.Page)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.GoToAction" /> class.
            </summary>
      <param name="page">The page.</param>
      <example>
        <code lang="cs">
            GoToAction action = new GoToAction(document.Pages[3]));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.GoToAction.#ctor(Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.GoToAction" /> class.
            </summary>
      <param name="destination">The destination.</param>
      <example>
        <code lang="cs">
            Destination namedDestination = new Destination("Page 1");
            GoToAction action = new GoToAction(namedDestination);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.GoToAction.Destination">
      <summary>
            Gets the destination.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.HideAction">
      <summary>
            This class represents a hide action (PDF 1.2) hides or shows one or more annotations on the screen by setting or clearing their Hidden flags.
            This type of action can be used in combination with appearance streams and trigger events to display pop-up help information on the screen.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.HideAction.#ctor(System.Boolean,System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.Action" /> class.
            </summary>
      <param name="hide">if set to <c>true</c> annotations will be hidden else annotations will be shown.</param>
      <param name="fieldNames">The field names.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.HideAction.#ctor(System.Boolean,Apitron.PDF.Kit.Interactive.Annotations.Annotation[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.HideAction" /> class.
            </summary>
      <param name="hide">if set to <c>true</c> annotations will be hidden else annotations will be shown.</param>
      <param name="annotations">The annotations.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.HideAction.Annotations">
      <summary>
            Gets the annotation or annotations to be hidden or shown.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.HideAction.Hide">
      <summary>
            Gets or sets a flag indicating whether to hide the annotation(s) (true) or show it (false).
            Default value: true.
            </summary>
      <value>
        <c>true</c> if hide; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.HideAction.FieldNames">
      <summary>
            Gets the field names to be hidden or shown.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.JavaScriptAction">
      <summary>
            A JavaScript action causes a script to be compiled and executed by the JavaScript interpreter. 
            Depending on the nature of the script, various interactive form fields in the document may update 
            their values or change their visual appearances.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.JavaScriptAction.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.Action" /> class.
            </summary>
      <param name="script">The script.</param>
      <example>
        <code lang="cs">
            JavaScriptAction namedAction = new JavaScriptAction("app.alert('The page #1 has been clicked !');");
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.JavaScriptAction.Script">
      <summary>
            Gets a text string containing the JavaScript script to be executed.
            </summary>
      <value>
            The script.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.LaunchAction">
      <summary>
            This class represents a launch action launches an application or opens or prints a document.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.LaunchAction" /> class.
            </summary>
      <param name="fileName">The file name of the application that shall be launched or the document that shall be opened or printed, in standard Windows pathname format.</param>
      <example>
        <code lang="cs">
            LinkAnnotation link = new LinkAnnotation(new Boundary(50, 600, 150, 640));
            LaunchAction launchAction = new LaunchAction("Acrobat.exe");
            launchAction.DefaultDirectory = Environment.CurrentDirectory;
            launchAction.ApplicationParameters = "./Documents/Simple.pdf";
            launchAction.NewWindow = true;
            launchAction.PrintDocument = false;
            link.Action = launchAction;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.FileName">
      <summary>
            Gets the file name of the application that shall be launched or the document that shall be opened or printed, in standard Windows pathname format.
            </summary>
      <value>
            The file name.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.NewWindow">
      <summary>
            Gets or sets a value indicating whether to open destination in a new window.
            If true, the destination document should be opened in a new window;
            if false, the destination document should replace the current document in the same window.
            If this entry is absent, the conforming reader should act according to its preference.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.PrintDocument">
      <summary>
            Gets or sets a value indicating whether the operation to perform should be print document.
            If <see cref="P:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.FileName" /> is path to an application this option will be ignored.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.ApplicationParameters">
      <summary>
            Gets or sets a parameter string that shall be passed to the application designated by the <see cref="P:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.FileName" /> entry. 
            This entry shall be omitted if <see cref="P:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.FileName" /> designates a document.
            </summary>
      <value>
            The application parameters.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.DefaultDirectory">
      <summary>
            Gets or sets the default directory to launch <see cref="P:Apitron.PDF.Kit.Interactive.Actions.LaunchAction.FileName" />.
            </summary>
      <value>
            The default directory.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.NamedAction">
      <summary>
            This class represents a PDF named action.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.NamedAction.#ctor(Apitron.PDF.Kit.Interactive.Actions.NamedActions)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.Action" /> class.
            </summary>
      <param name="actionName">Name of the action.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.NamedAction.ActionName">
      <summary>
            Gets or sets the name of the action that shall be performed
            </summary>
      <value>
            The name of the action.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.NamedActions">
      <summary>
            This enum lists several named actions that conforming readers shall support; further names may be added in the future.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.NamedActions.NextPage">
      <summary>
            Go to the next page of the document.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.NamedActions.PrevPage">
      <summary>
            Go to the previous page of the document.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.NamedActions.FirstPage">
      <summary>
            Go to the first page of the document.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Actions.NamedActions.LastPage">
      <summary>
            Go to the last page of the document.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.RemoteGoToAction">
      <summary>
            This class represents a remote go to action.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.RemoteGoToAction.#ctor(Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination,Apitron.PDF.Kit.FixedLayout.FileSpecification)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.Action" /> class.
            </summary>
      <param name="destination">Name of the destination.</param>
      <param name="fileSpecification">The file specification.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.RemoteGoToAction.#ctor(System.String,Apitron.PDF.Kit.FixedLayout.FileSpecification)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.RemoteGoToAction" /> class.
            </summary>
      <param name="destinationName">Name of the destination.</param>
      <param name="fileSpecification">The file specification.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.RemoteGoToAction.#ctor(System.Int32,Apitron.PDF.Kit.FixedLayout.FileSpecification)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.RemoteGoToAction" /> class.
            </summary>
      <param name="pageNumber">The page number.</param>
      <param name="fileSpecification">The file specification.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.RemoteGoToAction.Destination">
      <summary>
            Gets the destination.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.RemoteGoToAction.FileSpecification">
      <summary>
            Gets the file specification.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.RemoteGoToAction.NewWindow">
      <summary>
            Gets or sets a flag specifying whether to open the destination document in a new window. 
            If this flag is false, the destination document replaces the current document in the same window. 
            If this entry is absent, the conforming reader should behave in accordance with its preference.
            </summary>
      <value>
            The new window.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.ThreadAction">
      <summary>
            This class represents a PDF thread action. A thread action jumps to a specified bead on an article thread, 
            in either the current document or a different one.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.ThreadAction.#ctor(Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.Action" /> class.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.ThreadAction.#ctor(Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread,Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.ThreadAction" /> class.
            </summary>
      <param name="thread">The thread.</param>
      <param name="bead">The bead.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.ThreadAction.#ctor(Apitron.PDF.Kit.FixedLayout.FileSpecification,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.ThreadAction" /> class.
            </summary>
      <param name="targetFile">The target file.</param>
      <param name="threadIndex">Index of the thread.</param>
      <param name="beadIndex">Index of the bead.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.ThreadAction.#ctor(Apitron.PDF.Kit.FixedLayout.FileSpecification,System.String,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.ThreadAction" /> class.
            </summary>
      <param name="targetFile">The target file.</param>
      <param name="threadName">Name of the thread.</param>
      <param name="beadIndex">Index of the bead.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.ThreadAction.Target">
      <summary>
            Gets the target.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget">
      <summary>
            This class represents a thrad action target.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget.#ctor(Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread,Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget" /> class.
            </summary>
      <param name="thread">The thread.</param>
      <param name="bead">The bead.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget.#ctor(Apitron.PDF.Kit.FixedLayout.FileSpecification,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget" /> class.
            </summary>
      <param name="targetFile">The target file.</param>
      <param name="threadIndex">Index of the thread.</param>
      <param name="beadIndex">Index of the bead.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget.#ctor(Apitron.PDF.Kit.FixedLayout.FileSpecification,System.String,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget" /> class.
            </summary>
      <param name="targetFile">The target file.</param>
      <param name="threadName">Name of the thread.</param>
      <param name="beadIndex">Index of the bead.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget.TargetFile">
      <summary>
            Gets the file containing the thread. If this entry is absent, the thread is in the current file.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget.ThreadName">
      <summary>
            Gets the title of the thread as specified in its thread information.
            </summary>
      <value>
            The name of the thread.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget.ThreadIndex">
      <summary>
            Gets the index of the thread within the Threads array of its document.
            </summary>
      <value>
            The index of the thread.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget.BeadIndex">
      <summary>
            Gets the index of the bead within its thread. The first bead in a thread has index 0.
            </summary>
      <value>
            The index of the bead.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget.Thread">
      <summary>
            Gets the thread.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.ThreadActionTarget.Bead">
      <summary>
            Gets the bead.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Actions.URIAction">
      <summary>
            This class represents a uniform resource identifier (URI) is a string that identifies (resolves to) a resource on the Internet—typically a 
            file that is the destination of a hypertext link, although it may also resolve to a query or other entity. (URIs are described in Internet RFC 2396, 
            Uniform Resource Identifiers (URI): Generic Syntax; see the Bibliography.)
            A URI action causes a URI to be resolved.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Actions.URIAction.#ctor(System.Uri,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Actions.URIAction" /> class.
            </summary>
      <param name="uri">The URI.</param>
      <param name="isMap">Gets or sets a flag specifying whether to track the mouse position when the URI is resolved (see the discussion following this Table). Default value: false.
            This entry applies only to actions triggered by the user’s clicking an annotation; it shall be ignored for actions associated with outline items or with a document’s OpenAction entry.</param>
      <example>
        <code>
            URIAction uriAction = new URIAction(new Uri(string.Format("file://{0}/FileToEmbed.pdf", Environment.CurrentDirectory.Replace("\\", "/"))));
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.URIAction.Uri">
      <summary>
            Gets or sets the uniform resource identifier to resolve.
            </summary>
      <value>
            The URI.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Actions.URIAction.IsMap">
      <summary>
            Gets or sets a flag specifying whether to track the mouse position when the URI is resolved (see the discussion following this Table). Default value: false.
            This entry applies only to actions triggered by the user’s clicking an annotation; it shall be ignored for actions associated with outline items or with a document’s OpenAction entry.
            </summary>
      <value>
        <c>true</c> if this instance is map; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions">
      <summary>
            An entry that specifies an additional-actions set that extends the set of events that can trigger the execution of an action.   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.HasActions">
      <summary>
            Gets a value indicating whether this instance has actions.
            </summary>
      <value>
        <c>true</c> if this instance has actions; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnCursorEnter">
      <summary>
            Gets or sets an action that shall be performed when the cursor enters the annotation’s active area.
            </summary>
      <value>
            The cursor enter.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnCursorExits">
      <summary>
            Gets or sets an action that shall be performed when the cursor exits the annotation’s active area.
            </summary>
      <value>
            The cursor exits.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnMousedButtonPressed">
      <summary>
            Gets or sets n action that shall be performed when the mouse button is pressed inside the annotation’s active area.
            </summary>
      <value>
            The on moused button pressed.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnMouseButtonReleased">
      <summary>
            Gets or sets an action that shall be performed when the mouse button is released inside the annotation’s active area.
            </summary>
      <value>
            The on mouse button released.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnFocus">
      <summary>
            Gets or sets An action that shall be performed when the annotation receives the input focus.
            </summary>
      <value>
            The on focus.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnLostFocus">
      <summary>
            Gets or sets an action that shall be performed when the annotation loses the input focus.
            </summary>
      <value>
            The on focus.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnPageOpened">
      <summary>
            Gets or sets an action that shall be performed when the page containing the annotation is opened.
            </summary>
      <value>
            The on page shown.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnPageVisible">
      <summary>
            Gets or sets an action that shall be performed when the page containing the annotation becomes visible.
            </summary>
      <value>
            The on page visible.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnPageClosed">
      <summary>
            Gets or sets an action that shall be performed when the page containing the annotation is closed.
            </summary>
      <value>
            The on page closed.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAdditionalActions.OnPageInvisible">
      <summary>
            Gets or sets an action that shall be performed when the page containing the annotation is no longer visible in the conforming reader’s user interface.
            </summary>
      <value>
            The on page invisible.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.Annotation">
      <summary>
            This class represents an abstract annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.Annotation.fontSize">
      <summary>
            The font size.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.Annotation.fontName">
      <summary>
            The font name.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.Annotation.textColor">
      <summary>
            The text color.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.Annotation.viewFont">
      <summary>
            The font.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.Annotation.originalFontResourceID">
      <summary>
            The ResourceID of original font.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.StructParent">
      <summary>
            Gets or sets the parent's structure.
            </summary>
      <value>
            The struct parent.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.Identity">
      <summary>
            Gets or sets the identity.
            </summary>
      <value>
            The identity.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.Appearance">
      <summary>
            Gets the annotation's appearance.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.Type">
      <summary>
            Gets the type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.Boundary">
      <summary>
            Gets the boundary.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.Flags">
      <summary>
            Gets the flags.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.BorderStyle">
      <summary>
            Gets the border style.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.BorderEffect">
      <summary>
            Gets or sets a border effect that is used in conjunction with the border style specified by the <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.BorderStyle" /> entry.
            </summary>
      <value>
            The border effect.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.Color">
      <summary>
            Gets or sets the color.
            An array of numbers in the range 0.0 to 1.0, representing a colour used for the following purposes:
            The background of the annotation’s icon when closed
            The title bar of the annotation’s pop-up window
            The border of a link annotation
            The number of array elements determines the colour space in which the colour shall be defined:
            0 No colour; transparent
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK
            </summary>
      <value>
            The color.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.Contents">
      <summary>
            Gets or sets the contents.
            Text that shall be displayed for the annotation or, if this type of annotation does not display text, 
            an alternate description of the annotation’s contents in human-readable form. In either case, this 
            text is useful when extracting the document’s contents in support of accessibility to users with 
            disabilities or for other purposes.
            </summary>
      <value>
            The contents.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.InteriorColor">
      <summary>
            Gets or sets the interior color.
            An array of numbers in the range 0.0 to 1.0 specifying the interior color that shall be used to fill the annotation’s line endings. 
            The number of array elements shall determine the colour space in which the colour is defined:
            0 No colour; transparent
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK
            </summary>
      <value>
            The interior color.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.RectDifferences">
      <summary>
            Gets or sets a set of four numbers describing the numerical differences between two rectangles: 
            the <see cref="T:Apitron.PDF.Kit.FixedLayout.Boundary" /> entry of the annotation and a rectangle contained within that rectangle. 
            The inner rectangle is where the annotation’s text should be displayed. Any border styles and/or 
            border effects specified by  and <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.BorderEffect" /> entries, 
            respectively, shall be applied to the border of the inner rectangle.
            The four numbers correspond to the differences in default user space between the left, top, right, 
            and bottom coordinates of <see cref="T:Apitron.PDF.Kit.FixedLayout.Boundary" /> and those of the inner rectangle, respectively. Each value shall be greater 
            than or equal to 0. The sum of the top and bottom differences shall be less than the height of <see cref="T:Apitron.PDF.Kit.FixedLayout.Boundary" />, and the sum of the left and right differences shall be less than the width of <see cref="T:Apitron.PDF.Kit.FixedLayout.Boundary" />.
            </summary>
      <value>
            The <see cref="T:Apitron.PDF.Kit.FixedLayout.Boundary" /> differences.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.ModificationDate">
      <summary>
            Gets the date and time when the annotation was most recently modified.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.FontSize">
      <summary>
            Gets or sets the size of the font.
            </summary>
      <value>
            The size of the font.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.FontResourceID">
      <summary>
            Gets or sets the font resource ID.
            </summary>
      <value>
            The font resource ID.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance">
      <summary>
            Annotation appearance.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.#ctor(Apitron.PDF.Kit.Interactive.Annotations.Annotation)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance" /> class.
            </summary>
      <param name="annotation">The annotation.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.Normal">
      <summary>
            The annotation’s normal appearance.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.Rollover">
      <summary>
            The annotation’s rollover appearance. 
            Default value: the value of the <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.Normal" /> entry.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.Down">
      <summary>
            The annotation’s down appearance.
            Default value: the value of the <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.Normal" /> entry.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.NormalStates">
      <summary>
            The annotation’s normal state appearances.
            <remarks>An annotation representing an interactive check box may have two appearance states named On and Off.</remarks></summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.RolloverStates">
      <summary>
            The annotation’s rollover state appearances. 
            Default value: the value of the <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.NormalStates" /> entry.
            <remarks>An annotation representing an interactive check box may have two appearance states named On and Off.</remarks></summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.DownStates">
      <summary>
            The annotation’s down state appearances.
            Default value: the value of the <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationAppearance.NormalStates" /> entry.
            <remarks>An annotation representing an interactive check box may have two appearance states named On and Off.</remarks></summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffect">
      <summary>
            This class represents an annotation border effect.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffect.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffect" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffect.#ctor(Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffectStyle,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffect" /> class.
            </summary>
      <param name="style">The style.</param>
      <param name="intensity">The intensity.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffect.Style">
      <summary>
            Gets or sets the style.
            </summary>
      <value>
            The style.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffect.Intensity">
      <summary>
            Gets or sets a number describing the intensity of the effect, in the range 0 to 2. Default value: 0.
            </summary>
      <value>
            The intensity.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffectStyle">
      <summary>
            This enum represents an annotation border effect style.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffectStyle.NoEffect">
      <summary>
            No effect: the border shall be as described by the annotation <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle" /> entry.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderEffectStyle.Cloudy">
      <summary>
            The border should appear “cloudy”. The width and dash array specified by <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle" /> shall be honored.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType">
      <summary>
            This enum represents a border type.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType.Solid">
      <summary>
            A solid rectangle surrounding the annotation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType.Dashed">
      <summary>
            A dashed rectangle surrounding the annotation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType.Beveled">
      <summary>
            A simulated embossed rectangle that appears to be raised above the surface of the page.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType.Inset">
      <summary>
            A simulated engraved rectangle that appears to be recessed below the surface of the page.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType.Underline">
      <summary>
            A single line along the bottom of the annotation rectangle.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationCaptionPosition">
      <summary>
            This enum represents the list of the allowed caption positions.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationCaptionPosition.Default">
      <summary>
            Not specified
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationCaptionPosition.Inline">
      <summary>
            Inline.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationCaptionPosition.Top">
      <summary>
            Top.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationCollection">
      <summary>
            This class represents an annotation collection.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags">
      <summary>
            This enum represents an annotation flags 
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.Default">
      <summary>
            Not specified.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.Invisible">
      <summary>
            If set, do not display the annotation if it does not belong to one of the standard annotation types and no annotation handler is available. If clear, display such an unknown annotation using an appearance stream specified by its appearance dictionary, if any (see 12.5.5, “Appearance Streams”).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.Hidden">
      <summary>
            (PDF 1.2) If set, do not display or print the annotation or allow it to interact with the user, regardless of its annotation type or whether an annotation handler is available.
            In cases where screen space is limited, the ability to hide and show annotations selectively can be used in combination with appearance streams (see 12.5.5, “Appearance Streams”) to display auxiliary pop-up information similar in function to online help systems.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.Print">
      <summary>
            (PDF 1.2) If set, print the annotation when the page is printed. If clear, never print the annotation, regardless of whether it is displayed on the screen.
            This can be useful for annotations representing interactive pushbuttons, which would serve no meaningful purpose on the printed page.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.NoZoom">
      <summary>
            (PDF 1.3) If set, do not scale the annotation’s appearance to match the magnification of the page. The location of the annotation on the page (defined by the upper-left corner of its annotation rectangle) shall remain fixed, regardless of the page magnification. See further discussion following this Table.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.NoRotate">
      <summary>
            (PDF 1.3) If set, do not rotate the annotation’s appearance to match the rotation of the page. The upper-left corner of the annotation rectangle shall remain in a fixed location on the page, regardless of the page rotation. See further discussion following this Table.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.NoView">
      <summary>
            (PDF 1.3) If set, do not display the annotation on the screen or allow it to interact with the user. The annotation may be printed (depending on the setting of the Print flag) but should be considered hidden for purposes of on-screen display and user interaction.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.ReadOnly">
      <summary>
            (PDF 1.3) If set, do not allow the annotation to interact with the user. The annotation may be displayed or printed (depending on the settings of the NoView and Print flags) but should not respond to mouse clicks or change its appearance in response to mouse motions.
            This flag shall be ignored for widget annotations; its function is subsumed by the ReadOnly flag of the associated form field (see Table 221).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.Locked">
      <summary>
            (PDF 1.4) If set, do not allow the annotation to be deleted or its properties (including position and size) to be modified by the user. However, this flag does not restrict changes to the annotation’s contents, such as the value of a form field.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.ToggleNoView">
      <summary>
            (PDF 1.5) If set, invert the interpretation of the NoView flag for certain events.
            A typical use is to have an annotation that appears only when a mouse cursor is held over it.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags.LockedContents">
      <summary>
            (PDF 1.7) If set, do not allow the contents of the annotation to be modified by the user. This flag does not restrict deletion of the annotation or changes to other annotation properties, such as position and size.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames">
      <summary>
            This enum represents a default icon names.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Default">
      <summary>
            Not specified.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Comment">
      <summary>
            The comment icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Key">
      <summary>
            The key icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Note">
      <summary>
            The note icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Help">
      <summary>
            The help icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.NewParagraph">
      <summary>
            The NewParagraph icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Paragraph">
      <summary>
            The paragraph icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Insert">
      <summary>
            The insert icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Approved">
      <summary>
            The approved icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Experimental">
      <summary>
            The experimental icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.NotApproved">
      <summary>
            The NotApproved icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.AsIs">
      <summary>
            The AsIs icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Expired">
      <summary>
            The expired icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.NotForPublicRelease">
      <summary>
            The NotForPublicRelease icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Confidential">
      <summary>
            The confidential icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Sold">
      <summary>
            The sold icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Departmental">
      <summary>
            The departmental icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.ForComment">
      <summary>
            The ForComment icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.TopSecret">
      <summary>
            The TopSecret icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.Draft">
      <summary>
            The draft icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.ForPublicRelease">
      <summary>
            The ForPublicRelease icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.GraphPushPin">
      <summary>
            The GraphPushPin icon.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationIconNames.PaperclipTag">
      <summary>
            The PaperclipTag icon.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle">
      <summary>
            This enum represents the list of allowed line ending styles.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.None">
      <summary>
            No line ending.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.Square">
      <summary>
            A square filled with the annotation’s interior color, if any.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.Circle">
      <summary>
            A circle filled with the annotation’s interior color, if any.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.Diamond">
      <summary>
            A diamond shape filled with the annotation’s interior color, if any.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.OpenArrow">
      <summary>
            Two short lines meeting in an acute angle to form an open arrowhead.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.ClosedArrow">
      <summary>
            Two short lines meeting in an acute angle as in the OpenArrow style 
            and connected by a third line to form a triangular closed arrowhead 
            filled with the annotation’s interior color, if any.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.Butt">
      <summary>
            A short line at the endpoint perpendicular to the line itself.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.ROpenArrow">
      <summary>
            Two short lines in the reverse direction from OpenArrow.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.RClosedArrow">
      <summary>
            A triangular closed arrowhead in the reverse direction from ClosedArrow.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.Slash">
      <summary>
            A short line at the endpoint approximately 30 degrees clockwise from perpendicular to the line itself.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationReplyType">
      <summary>
            In PDF 1.6, a set of annotations may be grouped so that they function as a single unit when a user interacts with them. 
            The group consists of a primary annotation, which shall not have an <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.ReplyTo" /> entry, and one or more subordinate annotations, 
            which shall have an <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.ReplyTo" /> entry that refers to the primary annotation and an <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.ReplyTo" /> entry whose value is Group.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationReplyType.Single">
      <summary>
            The annotation shall be considered a reply to the annotation specified by <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.ReplyTo" />. 
            Conforming readers shall not display replies to an annotation individually but together in the form of threaded comments.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationReplyType.Group">
      <summary>
            The annotation shall be grouped with the annotation specified by <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.ReplyTo" />.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationState">
      <summary>
            This enum represents the list of allowed annotation states.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationState.Default">
      <summary>
            Not specified state.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationState.Marked">
      <summary>
            The annotation has been marked by the user.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationState.Unmarked">
      <summary>
            The annotation has not been marked by the user (the default).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationState.Accepted">
      <summary>
            The user agrees with the change.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationState.Rejected">
      <summary>
            The user disagrees with the change.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationState.Cancelled">
      <summary>
            The change has been cancelled.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationState.Completed">
      <summary>
            The change has been completed.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationState.None">
      <summary>
            The user has indicated nothing about the change (the default).
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType">
      <summary>
            This enum represents an annotation types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Text">
      <summary>
            Text annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Link">
      <summary>
            Link annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.FreeText">
      <summary>
            (PDF 1.3) Free text annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Line">
      <summary>
            (PDF 1.3) Line annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Square">
      <summary>
            (PDF 1.3) Square annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Circle">
      <summary>
            (PDF 1.3) Circle annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Polygon">
      <summary>
            (PDF 1.5) Polygon annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.PolyLine">
      <summary>
            (PDF 1.5) Polyline annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Highlight">
      <summary>
            (PDF 1.3) Highlight annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Underline">
      <summary>
            (PDF 1.3) Underline annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Squiggly">
      <summary>
            (PDF 1.4) Squiggly-underline annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.StrikeOut">
      <summary>
            (PDF 1.3) Strikeout annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Stamp">
      <summary>
            (PDF 1.3) Rubber stamp annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Caret">
      <summary>
            (PDF 1.5) Caret annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Ink">
      <summary>
            (PDF 1.3) Ink annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Popup">
      <summary>
            (PDF 1.3) Pop-up annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.FileAttachment">
      <summary>
            (PDF 1.3) File attachment annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Sound">
      <summary>
            (PDF 1.2) Sound annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Movie">
      <summary>
            (PDF 1.2) Movie annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Widget">
      <summary>
            (PDF 1.2) Widget annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Screen">
      <summary>
            (PDF 1.5) Screen annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.PrinterMark">
      <summary>
            (PDF 1.4) Printer’s mark annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.TrapNet">
      <summary>
            (PDF 1.3) Trap network annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Watermark">
      <summary>
            (PDF 1.6) Watermark annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType._3D">
      <summary>
            (PDF 1.6) 3D annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationType.Redact">
      <summary>
            (PDF 1.7) Redact annotation
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle">
      <summary>
            This class represents an annotation border style
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle.#ctor(System.Double,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType,Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleDashPattern)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle" /> class.
            </summary>
      <param name="width">The border width in points. If this value is 0, no border shall drawn. Default value: 1.</param>
      <param name="type">The type.</param>
      <param name="dash">A dash array defining a pattern of dashes and gaps that shall beused in drawing a dashed border (border type is <see cref="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType.Dashed" />). The dash array shall be specified in the same format as in the line dash pattern parameter of the graphics state. 
            The dash phase is not specified and shall be assumed to be 0. 
            EXAMPLE A dash entry of [3 2] specifies a border drawn with 3-point dashes alternating with 2-point gaps. </param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle.#ctor(System.Double,Apitron.PDF.Kit.FixedLayout.PageProperties.BoxStyleDashPattern)">
      <summary>
            Initializes a new instance of the dashed <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle" /> class. 
            </summary>
      <param name="width">The border width in points. If this value is 0, no border shall drawn. Default value: 1.</param>
      <param name="dash">A dash array defining a pattern of dashes and gaps that shall beused in drawing a dashed border (border type is <see cref="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType.Dashed" />). The dash array shall be specified in the same format as in the line dash pattern parameter of the graphics state. 
            The dash phase is not specified and shall be assumed to be 0. 
            EXAMPLE A dash entry of [3 2] specifies a border drawn with 3-point dashes alternating with 2-point gaps. </param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle.#ctor(System.Double,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderType)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle" /> class.
            </summary>
      <param name="width">The border width in points. If this value is 0, no border shall drawn. Default value: 1.</param>
      <param name="type">The type.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle.Width">
      <summary>
            Gets the width.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle.Type">
      <summary>
            Gets the type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle.Dash">
      <summary>
            Gets the dash.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotattionStateModel">
      <summary>
            This enum represents the list of allowed state models for a annotation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotattionStateModel.Default">
      <summary>
            Not specified.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotattionStateModel.Marked">
      <summary>
            Marked state model.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotattionStateModel.Review">
      <summary>
            Review state model.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.ChoiceFieldView">
      <summary>
            Choice field view.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1">
      <summary>
            This class represents a field annotation.
            </summary>
      <typeparam name="T">The terminal field.</typeparam>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.WidgetAnnotation">
      <summary>
            This class represents a widget annotation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.WidgetAnnotation.fontID">
      <summary>
            The fontID.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.WidgetAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.WidgetAnnotation.SetNonStrokingColor(Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent,System.Double[])">
      <summary>
            Sets the color of the non stroking.
            </summary>
      <param name="fixedContent">Content of the fixed.</param>
      <param name="color">The color.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.WidgetAnnotation.SetStrokingColor(Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent,System.Double[])">
      <summary>
            Sets the color of the stroking.
            </summary>
      <param name="fixedContent">Content of the fixed.</param>
      <param name="color">The color.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.WidgetAnnotation.HighlightingMode">
      <summary>
            Gets or sets the annotation’s highlighting mode, the visual effect that shall be used when the mouse button is 
            pressed or held down inside its active area.
            </summary>
      <value>
            The highlighting mode.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.WidgetAnnotation.Action">
      <summary>
            Gets or sets an action that shall be performed when the annotation is activated.
            </summary>
      <value>
            The action.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.WidgetAnnotation.AdditionalActions">
      <summary>
            Gets an additional-actions defining the annotation’s behaviour in response to various trigger events.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.#ctor(`0,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="model">The model.</param>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.CalculatePadding">
      <summary>
            Calculates the padding.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.FontSize">
      <summary>
            Gets or sets the size of the font.
            </summary>
      <value>
            The size of the font.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.FontResourceID">
      <summary>
            Gets or sets the font resource ID.
            </summary>
      <value>
            The font resource ID.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.BorderStyle">
      <summary>
            Gets the border style.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.TextColor">
      <summary>
            Gets or sets the color of the text.
            The color is an array of numbers that shall be in the range 0.0 to 1.0 specifying the colour of 
            the widget annotation’s border. The number of array elements determines the colour space in which 
            the colour shall bedefined:
            0 No colour; transparent
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK
            </summary>
      <value>
            The color of the text.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.ViewColor">
      <summary>
            Gets or sets the color of the view.
            The color is an array of numbers that shall be in the range 0.0 to 1.0 specifying the colour of 
            the widget annotation’s border. The number of array elements determines the colour space in which 
            the colour shall bedefined:
            0 No colour; transparent
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK
            </summary>
      <value>
            The color of the view.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.BorderColor">
      <summary>
            Gets or sets the color of the border.
            The color is an array of numbers that shall be in the range 0.0 to 1.0 specifying the colour of 
            the widget annotation’s border. The number of array elements determines the colour space in which 
            the colour shall bedefined:
            0 No colour; transparent
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK
            </summary>
      <value>
            The color of the border.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.DefaultHPadding">
      <summary>
            Gets the default H padding.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.DefaultVPadding">
      <summary>
            Gets the default V padding.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FieldView`1.DefaultPadding">
      <summary>
            Gets the default padding.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.ChoiceFieldView.#ctor(Apitron.PDF.Kit.Interactive.Forms.ChoiceField,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="model">The model.</param>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.PushbuttonFieldView">
      <summary>
            This class represenents button annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.PushbuttonFieldView.#ctor(Apitron.PDF.Kit.Interactive.Forms.PushbuttonField,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="model">The model.</param>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.CaretAnnotation">
      <summary>
            A caret annotation is a visual symbol that indicates the presence of text edits.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation">
      <summary>
            This class represents an abtract markup annotation.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.Title">
      <summary>
            The text label that shall be displayed in the title bar of the annotation’s pop-up window when open and active. This entry shall identify the user who added the annotation.
            </summary>
      <value>
            The title.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.Subject">
      <summary>
            Gets or sets the text representing a short description of the subject being addressed by the annotation.
            </summary>
      <value>
            The subject.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.User">
      <summary>
            Gets or sets the user.
            </summary>
      <value>
            The user.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.Intent">
      <summary>
            Gets or sets the intent.
            A name describing the intent of the markup annotation. Intents allow conforming readers to distinguish between different uses 
            and behaviors of a single markup annotation type. If this entry is not present or its value is the same as the annotation type, 
            the annotation shall have no explicit intent and should behave in a generic manner in a conforming reader.
            </summary>
      <value>
            The intent.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.Popup">
      <summary>
            Gets or sets a pop-up annotation for entering or editing the text associated with this annotation
            </summary>
      <value>
            The popup.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.ReplyTo">
      <summary>
            Gets or sets the annotation that this annotation is “in reply to.” Both annotations shall be on the same page of the document. 
            The relationship between the two annotations shall be specified by the RT entry.
            </summary>
      <value>
            The reply to.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.ReplyType">
      <summary>
            Gets or sets the type of the reply to.
            </summary>
      <value>
            The type of the reply to.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.Opacity">
      <summary>
            Gets or sets the constant opacity value that shall be used in painting the annotation.
            Default value: 1.0.
            </summary>
      <value>
            The opacity.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.MarkupAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.CaretAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The boundary.</param>
      <example>
        <code>
            CaretAnnotation caretAnnotation = new CaretAnnotation(new Boundary(8, 8, 28, 22));
            caretAnnotation.Contents = "Hello World!!!";
            caretAnnotation.Color = new double[] {1, 0, 1};
            caretAnnotation.IsNewParagraph = true;
            page.Annotations.Add(caretAnnotation);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.CaretAnnotation.IsNewParagraph">
      <summary>
            Gets or sets a value indicating whether this instance is new paragraph.
            </summary>
      <value>
        <c>true</c> if this instance is new paragraph; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.CheckBoxFieldView">
      <summary>
            This class represents a check box annotation.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.ToggleFieldView`1">
      <summary>
            This class represents a toggle annotation.
            </summary>
      <typeparam name="T">The field.</typeparam>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.ToggleFieldView`1.caption">
      <summary>
            The caption.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.ToggleFieldView`1.alternateCaption">
      <summary>
            The alternate caption.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.ToggleFieldView`1.mark">
      <summary>
            The checkbox mark.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.ToggleFieldView`1.#ctor(`0,Apitron.PDF.Kit.FixedLayout.Boundary,System.String,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle,Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.ToggleFieldView`1" /> class.
            </summary>
      <param name="model">The field.</param>
      <param name="boundary">The annotation boundary.</param>
      <param name="caption">The caption.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <param name="mark">The mark.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.ToggleFieldView`1.#ctor(`0,Apitron.PDF.Kit.FixedLayout.Boundary,System.String,System.String,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle,Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.ToggleFieldView`1" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="field">The field.</param>
      <param name="caption">The caption.</param>
      <param name="uncheckedCaption">The unchecked caption.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <param name="mark">The mark.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.ToggleFieldView`1.DefaultPadding">
      <summary>
            Gets the default padding percent.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.CheckBoxFieldView.#ctor(Apitron.PDF.Kit.Interactive.Forms.CheckBoxField,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="checkBox">The check box.</param>
      <param name="boundary">The annotation boundary.</param>
      <param name="mark">The mark.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark">
      <summary>
            Defines supported check box marks.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark.Check">
      <summary>
            The simple check mark.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark.Circle">
      <summary>
            The check mark in form of circle.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark.Cross">
      <summary>
            The check mark in form of cross.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark.Diamond">
      <summary>
            The check mark in form of diamond.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark.Star">
      <summary>
            The check mark in form of star.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark.Square">
      <summary>
            The check mark in form of square.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.CircleAnnotation">
      <summary>
            This class represents a circle annotation.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.FigureAnnotation">
      <summary>
            This class represents an abstract figure annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.FigureAnnotation.#ctor(Apitron.PDF.Kit.Interactive.Annotations.AnnotationType,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="type">The annotation type.</param>
      <param name="boundary">The annotation boundary that will be used for drawing.</param>
      <param name="flags">The annotation flag.</param>
      <param name="borderStyle">The annotation border style.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.CircleAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.CircleAnnotation" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            CircleAnnotation circleAnnotation = new CircleAnnotation(new Boundary(10, 10, 100, 100), AnnotationFlags.Locked, new AnnotationBorderStyle(4, AnnotationBorderType.Solid));
            page.Annotations.Add(circleAnnotation);
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.FileAttachmentAnnotation">
      <summary>
            A file attachment annotation contains a reference to a file, which typically is embedded in the PDF file.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.FileAttachmentAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FileAttachmentAnnotation.FileSpecification">
      <summary>
            Gets or sets the file specification.
            </summary>
      <value>
            The file specification.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.FixedPrint">
      <summary>
            This class represents a fixed print settings.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.FixedPrint.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FixedPrint.Matrix">
      <summary>
            Gets or sets The matrix used to transform the annotation’s rectangle before rendering.
            Default value: the identity matrix [1 0 0 1 0 0].
            When positioning content near the edge of a page, this entry should be used to provide a 
            reasonable offset to allow for nonburnable margins.
            </summary>
      <value>
            The matrix.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FixedPrint.HTranslate">
      <summary>
            Gets or sets the amount to translate the associated content horizontally, as a percentage of the width 
            of the target media (or if unknown, the width of the page’s MediaBox). 1.0 represents 100% and 0.0 represents 0%. 
            Negative values should not be used, since they may cause content to be drawn off the page.
            Default value: 0.
            </summary>
      <value>
            The H translate.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FixedPrint.VTranslate">
      <summary>
            Gets or sets the amount to translate the associated content vertically, as a percentage of the height of the target 
            media (or if unknown, the height of the page’s MediaBox). 1.0 represents 100% and 0.0 represents 0%. 
            Negative values should not be used, since they may cause content to be drawn off the page.
            Default value: 0.
            </summary>
      <value>
            The V translate.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation">
      <summary>
            This class represents a free text annotation.
            A free text annotation displays text directly on the page. Unlike an ordinary text annotation, 
            a free text annotation has no open or closed state; instead of being displayed in a pop-up window, the text shall be always visible.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            FreeTextAnnotation textAnnotation = new FreeTextAnnotation(new Boundary(10, 10, 200, 200), AnnotationFlags.ReadOnly, new AnnotationBorderStyle(2, AnnotationBorderType.Dashed, new BoxStyleDashPattern(new int[] { 10, 10 }, 5)));
            textAnnotation.Contents = "Hello World !!!\n WOW!";
            
            textAnnotation.BorderEffect = new AnnotationBorderEffect(AnnotationBorderEffectStyle.Cloudy, 2);
            textAnnotation.Callout = new double[] {400, 400, 400, 300, 200, 200};
            textAnnotation.LineEndingStyle = AnnotationLineEndingStyle.ClosedArrow;
            textAnnotation.Intent = IntentStyle.FreeTextCallout;
            page.Annotations.Add(textAnnotation);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation.GetDefaultAppearance">
      <summary>
            Gets the default appearance.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation.FontSize">
      <summary>
            Gets or sets the size of the font.
            </summary>
      <value>
            The size of the font.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation.FontName">
      <summary>
            Gets or sets the font resource ID.
            </summary>
      <value>
            The font resource ID.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation.TextColor">
      <summary>
            Gets or sets the color of the text.
            The color is an array of numbers that shall be in the range 0.0 to 1.0 specifying the colour of 
            the widget annotation’s border. The number of array elements determines the colour space in which 
            the colour shall bedefined:
            0 No colour; transparent
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK
            </summary>
      <value>
            The color of the text.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation.QuaddingJustification">
      <summary>
            Gets or sets the code specifying the form of quadding (justification) that shall be used in displaying the annotation’s text
            </summary>
      <value>
            The quadding justification.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation.Callout">
      <summary>
            Gets or sets an array of four or six numbers specifying a callout line attached to the free text annotation. 
            Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending coordinates of the line in 
            default user space. Four numbers [ x1 y1 x2 y2 ] represent the starting and ending coordinates of the line.
            </summary>
      <value>
            The callout.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation.LineEndingStyle">
      <summary>
            Gets or sets a <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle" /> that shall be used in drawing the callout line specified in <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.FreeTextAnnotation.Callout" />. 
            The value shall specify the line ending style for the endpoint defined by the pairs of coordinates (x1, y1).
            Default value: <see cref="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationLineEndingStyle.None" />.
            </summary>
      <value>
            The line ending style.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.IconFitSettings">
      <summary>
            This class represents a icon fit settings.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.IconFitSettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.IconFitSettings.ScaleMode">
      <summary>
            Gets or sets the circumstances under which the icon shall be scaled inside the annotation rectangle
            </summary>
      <value>
            The scale mode.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.IconFitSettings.ScaleType">
      <summary>
            Gets or sets the type of scaling that shall be used.
            </summary>
      <value>
            The type of the scale.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.IconFitSettings.FitBounds">
      <summary>
            Gets or sets a value indicating whether to fit bounds. If true, indicates that the button appearance shall be scaled to 
            fit fully within the bounds of the annotation without taking into consideration the line width of the border. 
            Default value: false.
            </summary>
      <value>
        <c>true</c> if [fit bounds]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.IconFitSettings.LeftoverSpaceFraction">
      <summary>
            Gets or sets an array of two numbers that shall be between 0.0 and 1.0 indicating the fraction of leftover space 
            to allocate at the left and bottom of the icon. A value of [0.0 0.0] shall position the icon at the bottom-left 
            corner of the annotation rectangle. A value of [0.5 0.5] shall center it within the rectangle. This entry shall 
            be used only if the icon is scaled proportionally. Default value: [0.5 0.5].
            </summary>
      <value>
            The leftover space fraction.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.IconScaleMode">
      <summary>
            This enum represents the list of icon scale modes.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IconScaleMode.AlwaysScale">
      <summary>
            Always scale.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IconScaleMode.IconBigger">
      <summary>
            Scale only when the icon is bigger than the annotation rectangle.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IconScaleMode.IconSmaller">
      <summary>
            Scale only when the icon is smaller than the annotation rectangle.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IconScaleMode.NeverScale">
      <summary>
            Never scale.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.IconScaleType">
      <summary>
            This enum represents the allowed list of the icon scale types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IconScaleType.Anamorphic">
      <summary>
            Scale the icon to fill the annotation rectangle exactly, without regard to its original aspect ratio (ratio of width to height).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IconScaleType.Proportional">
      <summary>
            Scale the icon to fit the width or height of the annotation rectangle while maintaining the icon’s original 
            aspect ratio. If the required horizontal and vertical scaling factors are different, use the smaller of the two, 
            centering the icon within the annotation rectangle in the other dimension.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.InkAnnotation">
      <summary>
            This class rerpresents an ink annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.InkAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code>
            InkAnnotation inkAnnotation = new InkAnnotation(new Boundary(10, 10, 200, 200), AnnotationFlags.ReadOnly, new AnnotationBorderStyle(2, AnnotationBorderType.Inset));
            inkAnnotation.Color = new double[] { 1, 0, 0 };
            IList &lt;double[]&gt; inkList = new List &lt;double[]&gt;();
            inkList.Add(new double[] { 10, 10, 12, 18, 22, 36, 100, 10, 20, 40 });
            inkList.Add(new double[] { 200, 200, 180, 190, 190, 160 });
            inkAnnotation.InkList = inkList;
            page.Annotations.Add(inkAnnotation);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.InkAnnotation.InkList">
      <summary>
            Gets or sets the ink list.
            </summary>
      <example>
        <code>
            IList &lt;double[]&gt; inkList = new List &lt;double[]&gt;();
            inkList.Add(new double[] { 10, 10, 12, 18, 22, 36, 100, 10, 20, 40 });
            inkList.Add(new double[] { 200, 200, 180, 190, 190, 160 });
            inkAnnotation.InkList = inkList;
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle">
      <summary>
            This enum represents the list of allowed free text intents.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle.Default">
      <summary>
            Not specified.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle.FreeText">
      <summary>
            The annotation is intended to function as a plain free-text annotation. A plain free-text annotation is also known as a text box comment.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle.FreeTextCallout">
      <summary>
            The annotation is intended to function as a callout. The callout is associated with an area on the page through the callout line.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle.FreeTextTypeWriter">
      <summary>
            The annotation is intended to function as a click-to-type or typewriter object and no callout line is drawn.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle.LineArrow">
      <summary>
            Line is arrow.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle.LineDimension">
      <summary>
            Line is dimension.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle.PolygonCloud">
      <summary>
            The annotation is intended to function as a cloud object.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle.PolyLineDimension">
      <summary>
            The polyline annotation is intended to function as a dimension.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.IntentStyle.PolygonDimension">
      <summary>
            The polygon annotation is intended to function as a dimension.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation">
      <summary>
            This class represents a line annotation.
            The purpose of a line annotation is to display a single straight line on the page. When opened, it shall display a pop-up window containing the text of the associated note.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.#ctor(System.Double,System.Double,System.Double,System.Double,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="xStart">The x start.</param>
      <param name="yStart">The y start.</param>
      <param name="xEnd">The x end.</param>
      <param name="yEnd">The y end.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code>
            LineAnnotation lineAnnotation = new LineAnnotation(100, 300, 500, 100, AnnotationFlags.Default, new AnnotationBorderStyle(2, AnnotationBorderType.Dashed, new BoxStyleDashPattern(new int[] { 5, 5 })));
            lineAnnotation.UseCaption = true;
            lineAnnotation.Contents = "This is the line annotation";
            lineAnnotation.CaptionPosition = AnnotationCaptionPosition.Inline;
            
            lineAnnotation.LeaderLineOffset = 10;
            lineAnnotation.LeaderLineLength = 30;
            lineAnnotation.LeaderLineExtensions = 20;
            
            lineAnnotation.InteriorColor = new double[] { 1, 0, 1 };
            lineAnnotation.CaptionOffset[0] = 20;
            lineAnnotation.CaptionOffset[1] = 40;
            
            lineAnnotation.LineEndingStyles[0] = AnnotationLineEndingStyle.OpenArrow;
            lineAnnotation.LineEndingStyles[1] = AnnotationLineEndingStyle.ClosedArrow;
            
            lineAnnotation.Intent = IntentStyle.LineArrow;
            lineAnnotation.Color = new double[] { 0, 1, 0 };
            page.Annotations.Add( lineAnnotation );
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.SetCaptionOffset(System.Double,System.Double)">
      <summary>
            Sets the caption offset.
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.SetCoordinates(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Sets the coordinates.
            </summary>
      <param name="xStart">The x start.</param>
      <param name="yStart">The y start.</param>
      <param name="xEnd">The x end.</param>
      <param name="yEnd">The y end.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.Coordinates">
      <summary>
            Gets or sets the coordinates.
            An array of four numbers, [x1 y1 x2 y2], specifying the starting and ending coordinates of the line in default user space.
            If the <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.LeaderLineLength" /> entry is present, this value shall represent the endpoints of the leader lines rather than the endpoints of the line itself
            </summary>
      <value>
            The coordinates.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.LeaderLineLength">
      <summary>
            Gets or sets the length of the leader line.
            The length of leader lines in default user space that extend from each endpoint of the line perpendicular to the line itself. 
            A positive value shall mean that the leader lines appear in the direction that is clockwise when traversing the line from its 
            starting point to its ending point (as specified by <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.Coordinates" />); a negative value shall indicate the opposite direction.
            Default value: 0 (no leader lines).
            </summary>
      <value>
            The length of the leader line.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.LeaderLineExtensions">
      <summary>
            Gets or sets the leader line extensions.
            A non-negative number that shall represents the length of leader line extensions that extend from the line proper 180 degrees from the leader lines.
            Default value: 0 (no leader line extensions).
            </summary>
      <value>
            The leader line extensions.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.LeaderLineOffset">
      <summary>
            Gets or sets the leader line offset.
            A non-negative number that shall represent the length of the leader line offset, which is the amount of empty space between the endpoints of the 
            annotation and the beginning of the leader lines.
            </summary>
      <value>
            The leader line offset.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.UseCaption">
      <summary>
            Gets or sets a value indicating whether to use <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.Contents" /> or  as caption in the appearance of the line.
            If true, the text specified by the <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.Annotation.Contents" /> or  entries shall be replicated as a caption in the appearance of the line. 
            The text shall be rendered in a manner appropriate to the content, taking into account factors such as writing direction.
            Default value: false.
            </summary>
      <value>
        <c>true</c> if cap; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.StartLineEndingStyle">
      <summary>
            Gets or sets the start line ending style.
            </summary>
      <value>
            The start line ending style.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.EndLineEndingStyle">
      <summary>
            Gets or sets the end line ending style.
            </summary>
      <value>
            The end line ending style.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.CaptionPosition">
      <summary>
            Gets or sets the caption position.
            A name describing the annotation’s caption positioning. Valid values are Inline, meaning the caption shall be centered inside the line, and Top, 
            meaning the caption shall be on top of the line.
            Default value: Inline
            </summary>
      <value>
            The caption position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LineAnnotation.CaptionOffset">
      <summary>
            Gets the caption offset.
            An array of two numbers that shall specify the offset of the caption text from its normal position. 
            The first value shall be the horizontal offset along the annotation line from its midpoint, with a positive value indicating offset to the 
            right and a negative value indicating offset to the left. The second value shall be the vertical offset perpendicular to the annotation line, 
            with a positive value indicating a shift up and a negative value indicating a shift down.
            Default value: [0, 0] (no offset from normal positioning)
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.LinkAnnotation">
      <summary>
            This class represents a link annotation represents either a hypertext link to a destination elsewhere in the document 
            or an action to be performed.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.LinkAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            LinkAnnotation link = new LinkAnnotation(
                       new Boundary(10, 170, 100, 190),
                       AnnotationFlags.Locked,
                       new AnnotationBorderStyle(5, AnnotationBorderType.Underline));
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LinkAnnotation.Action">
      <summary>
            Gets or sets an action that shall be performed when the link annotation is activated
            </summary>
      <value>
            The action.
            </value>
      <example>
        <code lang="cs">
            LinkAnnotation link = new LinkAnnotation( new Boundary(10, 170, 100, 190), AnnotationFlags.Locked, new AnnotationBorderStyle(5, AnnotationBorderType.Beveled));
            link.Action = new JavaScriptAction("app.alert('This is JS alert!');");
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LinkAnnotation.Destination">
      <summary>
            Gets or sets a destination that shall be displayed when the annotation is activated.
            </summary>
      <value>
            The destination.
            </value>
      <example>
        <code lang="cs">
            LinkAnnotation link = new LinkAnnotation( new Boundary(10, 170, 100, 190), AnnotationFlags.Locked, new AnnotationBorderStyle(5, AnnotationBorderType.Beveled));
            link.Destination = new Destination(3); // to the 3rd page
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LinkAnnotation.HighlightingMode">
      <summary>
            Gets or sets the annotation’s highlighting mode, the visual effect that shall be used when the mouse button is pressed or held down inside its active area
            </summary>
      <value>
            The highlighting mode.
            </value>
      <example>
        <code lang="cs">
            LinkAnnotation link = new LinkAnnotation( new Boundary(10, 170, 100, 190), AnnotationFlags.Locked, new AnnotationBorderStyle(5, AnnotationBorderType.Beveled));
            link.HighlightingMode = AnnotationHighlightingMode.Invert;
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.LinkAnnotation.QuadPoints">
      <summary>
            Gets or sets an array of 8 × n numbers specifying the coordinates of n quadrilaterals in default user space that comprise the region in which the link should be activated.
            </summary>
      <value>
            The quad points.
            </value>
      <example>
        <code lang="cs">
            LinkAnnotation link = new LinkAnnotation( new Boundary(10, 170, 100, 190), AnnotationFlags.Locked, new AnnotationBorderStyle(5, AnnotationBorderType.Beveled));
            Boundary boundary = link.Boundary;
            link.QuadPoints = new double[]
                       {
                           boundary.Left - 10, boundary.Bottom - 10, boundary.Right + 10,
                           boundary.Bottom - 10, boundary.Right + 10, boundary.Top + 10,
                           boundary.Left - 10, boundary.Top + 10,
                       };
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.AnnotationHighlightingMode">
      <summary>
            Highlighting mode.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationHighlightingMode.None">
      <summary>
            No highlighting.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationHighlightingMode.Invert">
      <summary>
            Invert the contents of the annotation rectangle.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationHighlightingMode.Outline">
      <summary>
            Invert the annotation’s border.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationHighlightingMode.Push">
      <summary>
            Display the annotation as if it were being pushed below the surface of the page.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.AnnotationHighlightingMode.Toggle">
      <summary>
            (Toggle) Same as P (which is preferred).
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.PolygonAnnotation">
      <summary>
            This class represents a polygon annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.PolygonAnnotation.#ctor(Apitron.PDF.Kit.Interactive.Annotations.AnnotationType,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.PolygonAnnotation" /> class.
            </summary>
      <param name="type">
      </param>
      <param name="boundary">
      </param>
      <param name="flags">
      </param>
      <param name="borderStyle">
      </param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.PolygonAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.PolygonAnnotation" /> class.
            </summary>
      <param name="annotationBoundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            PolygonAnnotation polygon = new PolygonAnnotation(new Boundary(10, 10, 200, 200), AnnotationFlags.ReadOnly, new AnnotationBorderStyle(2, AnnotationBorderType.Beveled));
            polygon.Vertices = new double[] { 12, 12, 22, 44, 66, 88, 12, 99, 200, 200 };
            polygon.LineEndingStyles[0] = AnnotationLineEndingStyle.Slash;
            polygon.LineEndingStyles[1] = AnnotationLineEndingStyle.Butt;
            page.Annotations.Add(polygon);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.PolygonAnnotation.Vertices">
      <summary>
            Gets or sets the vertices.
            An array of numbers that shall represent the alternating horizontal and vertical coordinates, respectively, of each vertex, in default user space.
            </summary>
      <value>
            The vertices.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.PolygonAnnotation.StartLineEndingStyle">
      <summary>
            Gets or sets the start line ending style.
            </summary>
      <value>
            The start line ending style.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.PolygonAnnotation.EndLineEndingStyle">
      <summary>
            Gets or sets the end line ending style.
            </summary>
      <value>
            The end line ending style.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.PolylineAnnotation">
      <summary>
            This class represents a polyline annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.PolylineAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.PolygonAnnotation" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            PolylineAnnotation polyline = new PolylineAnnotation(new Boundary(110, 110, 300, 300), AnnotationFlags.ReadOnly, new AnnotationBorderStyle(2, AnnotationBorderType.Beveled));
            polyline.Vertices = new double[] { 112, 112, 122, 144, 166, 188, 112, 199, 300, 300 };
            polyline.LineEndingStyles[0] = AnnotationLineEndingStyle.Slash;
            polyline.LineEndingStyles[1] = AnnotationLineEndingStyle.Butt;
            
            page.Annotations.Add(polyline);
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.PopupAnnotation">
      <summary>
            A pop-up annotation displays text in a pop-up window for entry and editing.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.PopupAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.PopupAnnotation.Parent">
      <summary>
            The parent annotation with which this pop-up annotation shall be associated.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.PopupAnnotation.IsOpen">
      <summary>
            Gets or sets a flag specifying whether the pop-up annotation shallinitially be displayed open. Default value: false (closed).
            </summary>
      <value>
        <c>true</c> if this instance is open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.QuaddingJustification">
      <summary>
            The enum specifying the form of quadding (justification) that shall be used in displaying the annotation’s text
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.QuaddingJustification.Left">
      <summary>
            Left-justified
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.QuaddingJustification.Centered">
      <summary>
            Centered
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.QuaddingJustification.Right">
      <summary>
            Right-justified
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.RadioButtonFieldView">
      <summary>
            This class represents a radio button annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.RadioButtonFieldView.#ctor(System.String,System.String,Apitron.PDF.Kit.Interactive.Forms.RadioButtonField,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.CheckBoxMark)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.RadioButtonFieldView" /> class.
            </summary>
      <param name="caption">The caption.</param>
      <param name="selectionName">Name of the selection.</param>
      <param name="radioButton">The radio button.</param>
      <param name="boundary">The annotation boundary.</param>
      <param name="mark">The mark.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.RadioButtonFieldView.SelectionName">
      <summary>
            Gets the name of the selection.
            </summary>
      <value>
            The name of the selection.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation">
      <summary>
            This class represents a redaction annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            RedactionAnnotation redactionAnnotation = new RedactionAnnotation(new Boundary(100, 20, 400, 40));
            redactionAnnotation.OverlayText = "This is redaction";
            
            redactionAnnotation.QuaddingJustification = QuaddingJustification.Centered;
            redactionAnnotation.Repeat = true;
            
            page.Annotations.Add(redactionAnnotation);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.GetQuadPoints">
      <summary>
            Gets an array of 8 × n numbers specifying the coordinates of nquadrilaterals in default user space. 
            Each quadrilateral shall encompasses a word or group of contiguous words in the text underlying the annotation. 
            The coordinates for each quadrilateral shall be given in the order:  x1 y1 x2 y2 x3 y3 x4 y4
            specifying the quadrilateral’s four vertices in counterclockwise order. The text shall be oriented with respect to the edge connecting points (x1, y1) and (x2, y2).
            </summary>
      <returns>The array of edges of connecting points (x1, y1) and (x2, y2).</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.SetQuadPoints(System.Double[])">
      <summary>
            Sets an array of 8 × n numbers specifying the coordinates of nquadrilaterals in default user space. 
            Each quadrilateral shall encompasses a word or group of contiguous words in the text underlying the annotation. 
            The coordinates for each quadrilateral shall be given in the order:  x1 y1 x2 y2 x3 y3 x4 y4
            specifying the quadrilateral’s four vertices in counterclockwise order. The text shall be oriented with respect to the edge connecting points (x1, y1) and (x2, y2).
            </summary>
      <param name="value">The quad points.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.SetQuadPoints(Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Sets an array of 8 × n numbers specifying the coordinates of nquadrilaterals in default user space.
            Each quadrilateral shall encompasses a word or group of contiguous words in the text underlying the annotation.
            The coordinates for each quadrilateral shall be given in the order:  x1 y1 x2 y2 x3 y3 x4 y4
            specifying the quadrilateral’s four vertices in counterclockwise order. The text shall be oriented with respect to the edge connecting points (x1, y1) and (x2, y2).
            </summary>
      <param name="boundary">The boundary.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.Overlay">
      <summary>
            Gets or sets a form XObject specifying the overlay appearance for this redaction annotation. 
            After this redaction is applied and the affected content has been removed, the overlay appearance 
            should be drawn such that its origin lines up with the lower-left corner of the annotation rectangle. 
            This form XObject is not necessarily related to other annotation appearances, and may or may not be 
            present in the APdictionary. 
            This entry takes precedence over the IC, OverlayText, DA, and Q entries.
            </summary>
      <value>
            The overlay.
            </value>
      <example>
        <code lang="cs">
            RedactionAnnotation redactionAnnotation = new RedactionAnnotation(new Boundary(100, 20, 400, 40));
            redactionAnnotation.OverlayText = "This is redaction";
            
            redactionAnnotation.QuaddingJustification = QuaddingJustification.Centered;
            redactionAnnotation.Repeat = true;
            
            FixedContent overlay = new FixedContent("Overlay", new Boundary( 0, 0, 300, 20));
            TextObject overlayText = new TextObject(StandardFonts.Helvetica, 16);
            overlayText.AppendText("This is overlay XObject");
            overlay.Content.AppendText(overlayText);
            
            redactionAnnotation.Overlay = overlay;
            
            FixedContent content = new FixedContent("NormalText", new Boundary(0, 0, 300, 20));
            TextObject textObject = new TextObject(StandardFonts.Helvetica, 16);
            textObject.AppendText("This is the text for a redaction");
            content.Content.AppendText(textObject);
            
            fixedDocument.ResourceManager.RegisterResource(content);
            
            page.Content.ModifyCurrentTransformationMatrix(1, 0, 0, 1, 100, 20);
            page.Content.AppendXObject("NormalText");
            page.Annotations.Add(redactionAnnotation);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.OverlayText">
      <summary>
            Gets or sets a text string specifying the overlay text that should be drawn over the redacted region 
            after the affected content has been removed. This entry is ignored if the RO entry is present.
            </summary>
      <value>
            The overlay text.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.Repeat">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation" /> is repeat.
            If true, then the text specified by OverlayText should be repeated to fill the redacted region after
            the affected content has been removed. 
            This entry is ignored if the <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.Overlay" /> entry is present. Default value: false.
            </summary>
      <value>
        <c>true</c> if repeat; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.QuaddingJustification">
      <summary>
            Gets or sets a code specifying the form of quadding (justification) to be used in laying out the overlay text.
            </summary>
      <value>
            The quadding.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.OC">
      <summary>
            Gets or sets the OC. An optional content group or optional content membership dictionary 
            specifying the optional content properties for the annotation.
            </summary>
      <value>
            The OC.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.RedactionAnnotation.AFC">
      <summary>
            Gets or sets the AFC.
            </summary>
      <value>
            The AFC.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.RubberStampAnnotation">
      <summary>
            A rubber stamp annotation displays text or graphics intended to look as if they were stamped on the page with a rubber stamp.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.RubberStampAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            RubberStampAnnotation rubberStampAnnotation = new RubberStampAnnotation(new Boundary(8, 8, 200, 150));
            rubberStampAnnotation.Contents = "Hello World !!!";
            rubberStampAnnotation.Color = new double[] { 1, 0, 1 };
            rubberStampAnnotation.Icon = AnnotationIconNames.TopSecret;
            page.Annotations.Add(rubberStampAnnotation);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.RubberStampAnnotation.Icon">
      <summary>
            Gets or sets the icon.
            </summary>
      <value>
            The icon.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.RubberStampAnnotation.Rotate">
      <summary>
            Gets or sets the number of degrees by which the widget annotation shall be rotated relative to the page.
            </summary>
      <value>
            The rotate.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.SignatureFieldView">
      <summary>
            This class represents a signature field view.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.SignatureFieldView.#ctor(Apitron.PDF.Kit.Interactive.Forms.SignatureField,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="model">The model.</param>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.SignatureFieldView.ViewSettings">
      <summary>
            Gets the view settings.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.SquareAnnotation">
      <summary>
            This class represents a square annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.SquareAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.SquareAnnotation" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            SquareAnnotation squareAnnotation = new SquareAnnotation(new Boundary(10, 200, 100, 300), AnnotationFlags.Locked, new AnnotationBorderStyle(6, AnnotationBorderType.Underline));
            page.Annotations.Add(squareAnnotation);
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.StateAnnotation">
      <summary>
            This class represents a state change annotation.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.TextAnnotation">
      <summary>
            This class represents a text annotation. A text annotation represents a “sticky note” attached to a point in the PDF document.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.TextAnnotation.#ctor(System.Double,System.Double,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.TextAnnotation" /> class.
            </summary>
      <param name="x">The x coordinate.</param>
      <param name="y">The y coordinate.</param>
      <param name="flags">The flags.</param>
      <example>
        <code lang="cs">
            TextAnnotation textAnnotation = new TextAnnotation(10, 10);
            textAnnotation.Contents = "Hello World !!!";
            textAnnotation.IsOpen = true;
            page.Annotations.Add(textAnnotation);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.TextAnnotation.State">
      <summary>
            Gets or sets the state. Default: “Unmarked” if StateModel is “Marked”; “None” if StateModel is “Review”.
            </summary>
      <value>
            The state.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.TextAnnotation.StateModel">
      <summary>
            Gets or sets the The state model corresponding to <see cref="P:Apitron.PDF.Kit.Interactive.Annotations.TextAnnotation.State" />.
            </summary>
      <value>
            The state model.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.TextAnnotation.IsOpen">
      <summary>
            Gets or sets a flag specifying whether the annotation shall initially be displayed open. Default value: false (closed).
            </summary>
      <value>
        <c>true</c> if this instance is open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.TextAnnotation.Icon">
      <summary>
            Gets or sets the icon.
            </summary>
      <value>
            The icon.
            </value>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.StateAnnotation.#ctor(Apitron.PDF.Kit.Interactive.Annotations.Annotation,Apitron.PDF.Kit.Interactive.Annotations.AnnotationReplyType,Apitron.PDF.Kit.Interactive.Annotations.AnnotationState)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Annotations.TextAnnotation" /> class.
            </summary>
      <param name="replyTo">The reply on annotation.</param>
      <param name="replyType">Type of the reply.</param>
      <param name="state">The state.</param>
      <example>
        <code lang="cs">
            // you already have replyAnnotation.
            StateAnnotation setMarkedToReply = new StateAnnotation(replyAnnotation, AnnotationReplyType.Single, AnnotationState.Marked);
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.FieldAdditionalActions">
      <summary>
            This class represent an field's additional-actions.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.FieldAdditionalActions.HasActions">
      <summary>
            Gets a value indicating whether this instance has actions.
            </summary>
      <value>
        <c>true</c> if this instance has actions; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.FieldAdditionalActions.OnTextFieldModified">
      <summary>
            Gets or sets a JavaScript action that shall be performed when the user modifies a character in a text field or combo box or modifies the selection in a scrollable list box. This action may check the added text for validity and reject or modify it.
            </summary>
      <value>
            The on text field modified.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.FieldAdditionalActions.OnBeforeFormatted">
      <summary>
            Gets or sets a JavaScript action that shall be performed before the field is formatted to display its value. This action may modify the field’s value before formatting.
            </summary>
      <value>
            The on before formatted.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.FieldAdditionalActions.OnValueChanged">
      <summary>
            Gets or sets a JavaScript action that shall be performed when the field’s value is changed. This action may check the new value for validity.
            </summary>
      <value>
            The on value changed.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.FieldAdditionalActions.OnRecalculate">
      <summary>
            Gets or sets a JavaScript action that shall be performed to recalculate the value of this field when that of another field changes. 
            The order in which the document’s fields are recalculated shall be defined by the CO entry in the interactive form dictionary (see 12.7.2, “Interactive Form Dictionary”).
            </summary>
      <value>
            The on dependency field changes.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.SignatureFlags">
      <summary>
            This enum represents a allowed signature flags.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureFlags.Default">
      <summary>
            No one flag is set.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureFlags.SignaturesExist">
      <summary>
            If set, the document contains at least one signature field. 
            This flag allows a conforming reader to enable user interface items (such as menu items or pushbuttons) related to signature processing without 
            having to scan the entire document for the presence of signature fields.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureFlags.AppendOnly">
      <summary>
            If set, the document contains signatures that may be invalidated if the file is saved (written) in a way that alters its previous contents, as opposed to an incremental update. 
            Merely updating the file by appending new information to the end of the previous version is safe. Conforming readers may use this flag to inform a user requesting a full 
            save that signatures will be invalidated and require explicit confirmation before continuing with the operation.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description">
      <summary>
            Description of signature settings.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description.None">
      <summary>
            No one flag is set.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description.AllSet">
      <summary>
            All flags are set by default.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description.Name">
      <summary>
            If this flag is set then signer's common name will be shown.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description.Date">
      <summary>
            If this flag is set then signing date will be shown.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description.Location">
      <summary>
            If this flag is set then signer's signing location will be shown.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description.Reason">
      <summary>
            If this flag is set then signer's signing reason will be shown.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description.DistinguishedName">
      <summary>
            If this flag is set then distinguished name will be shown.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description.Labels">
      <summary>
            If this flag is set then labels will be shown.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Description.Logo">
      <summary>
            If this flag is set then the Apitron logo will be shown.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.TextFieldView">
      <summary>
            This class represents a text field annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.TextFieldView.#ctor(Apitron.PDF.Kit.Interactive.Forms.TextField,Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="model">The model.</param>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.TextFieldView.DefaultPadding">
      <summary>
            Gets the default padding percent.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupAnnotation">
      <summary>
            Text markup annotations appear as highlights, underlines, strikeouts, or jagged (“squiggly”) underlines in the text 
            of a document. When opened, they display a pop-up window containing the text of the associated note.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.TextMarkupType,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The boundary.</param>
      <param name="markupType">Type of the markup.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            TextMarkupAnnotation textAnnotation = new TextMarkupAnnotation(new Boundary(8, 8, 370, 22), TextMarkupType.Highlight);
            textAnnotation.Contents = "Hello World !!!";
            textAnnotation.Color = new double[] { 1, 0, 1 };
            textAnnotation.SetQuadPoints(new double[] {8, 22, 370, 22, 8, 8, 370, 8});
            page.Annotations.Add(textAnnotation);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupAnnotation.GetQuadPoints">
      <summary>
            Gets an array of 8 × n numbers specifying the coordinates of nquadrilaterals in default user space. 
            Each quadrilateral shall encompasses a word or group of contiguous words in the text underlying the annotation. 
            The coordinates for each quadrilateral shall be given in the order:  x1 y1 x2 y2 x3 y3 x4 y4
            specifying the quadrilateral’s four vertices in counterclockwise order. The text shall be oriented with respect to the edge connecting points (x1, y1) and (x2, y2).
            </summary>
      <returns>The array of edges of connecting points (x1, y1) and (x2, y2).</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupAnnotation.SetQuadPoints(System.Double[])">
      <summary>
            Sets an array of 8 × n numbers specifying the coordinates of nquadrilaterals in default user space. 
            Each quadrilateral shall encompasses a word or group of contiguous words in the text underlying the annotation. 
            The coordinates for each quadrilateral shall be given in the order:  x1 y1 x2 y2 x3 y3 x4 y4
            specifying the quadrilateral’s four vertices in counterclockwise order. The text shall be oriented with respect to the edge connecting points (x1, y1) and (x2, y2).
            </summary>
      <param name="value">The quad points.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupAnnotation.SetQuadPoints(Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Sets an array of 8 × n numbers specifying the coordinates of nquadrilaterals in default user space.
            Each quadrilateral shall encompasses a word or group of contiguous words in the text underlying the annotation.
            The coordinates for each quadrilateral shall be given in the order:  x1 y1 x2 y2 x3 y3 x4 y4
            specifying the quadrilateral’s four vertices in counterclockwise order. The text shall be oriented with respect to the edge connecting points (x1, y1) and (x2, y2).
            </summary>
      <param name="boundary">The boundary.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupAnnotation.MarkupType">
      <summary>
            Gets or sets the type of the markup.
            </summary>
      <value>
            The type of the markup.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupType">
      <summary>
            This enum represents allowed types of markup annotation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupType.Highlight">
      <summary>
            (PDF 1.3) Highlight annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupType.Underline">
      <summary>
            (PDF 1.3) Underline annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupType.Squiggly">
      <summary>
            (PDF 1.4) Squiggly-underline annotation
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.TextMarkupType.StrikeOut">
      <summary>
            (PDF 1.3) Strikeout annotation
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.WatermarkAnnotation">
      <summary>
            This class represents an watermark annotation.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Annotations.WatermarkAnnotation.#ctor(Apitron.PDF.Kit.FixedLayout.Boundary,Apitron.PDF.Kit.Interactive.Annotations.AnnotationFlags,Apitron.PDF.Kit.Interactive.Annotations.AnnotationBorderStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="boundary">The annotation boundary.</param>
      <param name="flags">The flags.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code lang="cs">
            WatermarkAnnotation watermarkAnnotation = new WatermarkAnnotation(new Boundary(200, 10, 400, 30));
            
            FixedContent normalAppearance = new FixedContent("N", new Boundary(0, 0, 200, 20));
            TextObject textObject = new TextObject(StandardFonts.Helvetica, 15);
            textObject.AppendText("Apitron watermark annotation.");
            normalAppearance.Content.AppendText(textObject);
            
            watermarkAnnotation.Appearance.Normal = normalAppearance;
            
            page.Annotations.Add(watermarkAnnotation);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.WatermarkAnnotation.FixedPrint">
      <summary>
            Gets or sets a fixed print that specifies how this annotation shall be drawn relative to the dimensions of the 
            target media. If this entry is not present, the annotation shall be drawn without any special consideration 
            for the dimensions of the target media.
            If the dimensions of the target media are not known at the time of drawing, drawing shall be done relative to 
            the dimensions specified by the page’s MediaBox entry.
            </summary>
      <value>
            The fixed print.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Annotations.WatermarkAnnotation.Watermark">
      <summary>
            Gets or sets the watermark.
            </summary>
      <value>
            The watermark.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Annotations.WidgetTextPosition">
      <summary>
            Text position inside widget.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.WidgetTextPosition.CaptionOnly">
      <summary>
            No icon; caption only
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.WidgetTextPosition.IconOnly">
      <summary>
            No caption; icon only
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.WidgetTextPosition.CaptionBellow">
      <summary>
            Caption below the icon
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.WidgetTextPosition.CaptionAbove">
      <summary>
            Caption above the icon
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.WidgetTextPosition.CaptionRight">
      <summary>
            Caption to the right of the icon
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.WidgetTextPosition.CaptionLeft">
      <summary>
            Caption to the left of the icon
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Annotations.WidgetTextPosition.CaptionOverlaid">
      <summary>
            Caption overlaid directly on the icon
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.AcroForm">
      <summary>
            This class represents an acro form definition.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.AcroForm.DisableXFA">
      <summary>
            Disables the XFA.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.AcroForm.Fields">
      <summary>
            Gets an array of references to the document’s root fields(those with no ancestors in the field hierarchy).
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.AcroForm.FieldNames">
      <summary>
            Gets the field names.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.AcroForm.Item(System.String)">
      <summary>
            Gets the underlying <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Field" /> with the specified field name.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.AcroForm.SigFlags">
      <summary>
            Gets a set of flags specifying various document-level characteristics related to signature fields.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.AcroForm.CalculateOrder">
      <summary>
            Gets the calculate order.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.CheckBoxField">
      <summary>
            This class represents a Check box field.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.ToggleField">
      <summary>
            This class represents a toggle field.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.TerminalField">
      <summary>
            This class represents a terminal field.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Field">
      <summary>
            This class represent an abstract field.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Field.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="toolTip">Name of the alternate field.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.TextColor">
      <summary>
            Gets or sets the color of the text.
            </summary>
      <value>
            The color of the text.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.FontResourceID">
      <summary>
            Gets or sets the font resource ID.
            </summary>
      <value>
            The font resource ID.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.ViewColor">
      <summary>
            Gets or sets the color of the view.
            The color is an array of numbers that shall be in the range 0.0 to 1.0 specifying the colour of 
            the widget annotation’s border. The number of array elements determines the colour space in which 
            the colour shall bedefined:
            0 No colour; transparent
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK
            </summary>
      <value>
            The color of the view.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.BorderStyle">
      <summary>
            Gets or sets the border style.
            </summary>
      <value>
            The border style.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.AdditionalActions">
      <summary>
            Gets the additional actions.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.BorderColor">
      <summary>
            Gets or sets the color of the border.
            The color is an array of numbers that shall be in the range 0.0 to 1.0 specifying the colour of 
            the widget annotation’s border. The number of array elements determines the colour space in which 
            the colour shall bedefined:
            0 No colour; transparent
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK
            </summary>
      <value>
            The color of the border.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.FontSize">
      <summary>
            Gets or sets the size of the font.
            </summary>
      <value>
            The size of the font.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.FieldName">
      <summary>
            Gets or sets the partial field name
            </summary>
      <value>
            The name of the field.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.AlternateFieldName">
      <summary>
            Gets or sets an alternate field name that shall be used in place of the actual field name wherever the field shall be 
            identified in the user interface (such as in error or status messages referring to the field). This text is also useful 
            when extracting the document’s contents in support of accessibility to users with disabilities or for other purposes
            </summary>
      <value>
            The name of the alternate field.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.MappingName">
      <summary>
            Gets or sets the mapping name that shall be used when exporting interactive form field data from the document.
            </summary>
      <value>
            The name of the mapping.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.IsReadOnly">
      <summary>
            Gets or sets a value indicating whether this instance is read only.
            </summary>
      <value>
        <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.QuaddingJustification">
      <summary>
            Gets or sets the quadding justification.
            </summary>
      <value>
            The quadding justification.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.DefaultStyle">
      <summary>
            Gets or sets the default style.
            </summary>
      <value>
            The default style.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.RichTextString">
      <summary>
            Gets or sets the rich text string.
            </summary>
      <value>
            The rich text string.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.Item(System.String)">
      <summary>
            Gets the underlying <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Field" /> with the specified field name.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Field.FieldNames">
      <summary>
            Gets the underlying field's names.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.TerminalField.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="toolTip">An alternate field name that shall be used in place of the actual field name wherever the field shall be 
            identified in the user interface (such as in error or status messages referring to the field). This text is also useful 
            when extracting the document’s contents in support of accessibility to users with disabilities or for other purposes.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TerminalField.Views">
      <summary>
            Gets or sets the children.
            </summary>
      <value>
            The children.
            </value>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.ToggleField.onStateName">
      <summary>
            ON sets the state of subsequent groups to ON.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.ToggleField.offStateName">
      <summary>
            OFF sets the state of subsequent groups to OFF.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.ToggleField.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Forms.ToggleField" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="toolTip">Name of the alternate field.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.CheckBoxField.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="caption">The caption.</param>
      <param name="toolTip">The tool tip.</param>
      <example>
        <code lang="cs">
            CheckBoxField button = new CheckBoxField("CheckBox", "Caption text!!!");
            button.IsChecked = true;
            document.AcroForm.Fields.Add(button);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.CheckBoxField.IsChecked">
      <summary>
            Gets or sets a value indicating whether this instance is checked.
            </summary>
      <value>
        <c>true</c> if this instance is checked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.CheckBoxField.DefaultValue">
      <summary>
            Gets or sets a value indicating whether [default value].
            </summary>
      <value>
        <c>true</c> if [default value]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.CheckBoxField.Caption">
      <summary>
            Gets the caption.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.ChoiceFieldType">
      <summary>
            This enum represents allowed choice field types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.ChoiceFieldType.ListBox">
      <summary>
            A scrollable list box
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.ChoiceFieldType.ComboBox">
      <summary>
            A combo box consisting of a drop-down list. The combo box may be accompanied by an editable text box in which the user can type a value other than the predefined choices.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.LockAction">
      <summary>
            This enum represents a list of allowed lock actions.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.LockAction.Nothing">
      <summary>
            Nothing to do.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.LockAction.All">
      <summary>
            All fields in the document.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.LockAction.Include">
      <summary>
            All fields specified in Fields.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.LockAction.Exclude">
      <summary>
            All fields except those specified in Fields.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.PushbuttonField">
      <summary>
            This class represents a pushbutton.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.PushbuttonField.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Forms.PushbuttonField" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="caption">The caption.</param>
      <param name="toolTip">The tool tip.</param>
      <example>
        <code lang="cs">
            PushbuttonField pushbuttonField = new PushbuttonField("hide_btn", "Hide field");
            PushbuttonFieldView pushbuttonFieldView = new PushbuttonFieldView(pushbuttonField, new Boundary(10, 500, 110, 530));
            TextField textField = new TextField("hide_txt", "This will be hided");
            TextFieldView textFieldView = new TextFieldView(textField, new Boundary(120, 500, 220, 530));
            document.AcroForm.Fields.Add("hide_btn");
            document.AcroForm.Fields.Add("hide_txt");
            
            pushbuttonFieldView.Action = new HideAction(true, textFieldView);
            textFieldView.BorderColor = new double[] { 0.3, 0.1, 0.4 };
            textFieldView.BorderStyle = new AnnotationBorderStyle(2, AnnotationBorderType.Inset);
            
            page.Annotations.Add(pushbuttonFieldView);
            page.Annotations.Add(textFieldView);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.PushbuttonField.Caption">
      <summary>
            Gets the caption.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.FieldFlags">
      <summary>
            This enum contains flags specifying various characteristics of the field.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Default">
      <summary>
            Not specified.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.ReadOnly">
      <summary>
            If set, the user may not change the value of the field. Any associated widget annotations will not interact with the user; 
            that is, they will not respond to mouse clicks or change their appearance in response to mouse motions. This flag is useful 
            for fields whose values are computed or imported from a database.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Required">
      <summary>
            If set, the field shall have a value at the time it is exported by a submit-form action.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.NoExport">
      <summary>
            If set, the field shall not be exported by a submit-form action.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.NoToggleToOff">
      <summary>
            (Radio buttons only) If set, exactly one radio button shall be selected at all times; 
            selecting the currently selected button has no effect. If clear, clicking the selected button deselects it, leaving no button selected.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Radio">
      <summary>
            If set, the field is a set of radio buttons; if clear, the field is a check box. This flag may be set only if the PushButton flag is clear.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Pushbutton">
      <summary>
            If set, the field is a pushbutton that does not retain a permanent value.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.RadiosInUnison">
      <summary>
            If set, a group of radio buttons within a radio button field that use the same value for the on state will turn on and off in unison; 
            that is if one is checked, they are all checked. If clear, the buttons are mutually exclusive (the same behavior as HTML radio buttons).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Multiline">
      <summary>
            If set, the field may contain multiple lines of text; if clear, the field’s text shall be restricted to a single line.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Password">
      <summary>
            If set, the field is intended for entering a secure password that should not be echoed visibly to the screen. Characters typed 
            from the keyboard shall instead be echoed in some unreadable form, such as asterisks or bullet characters.
            NOTE To protect password confidentiality, readers should never store the value of the text field in the PDF file if this flag is set.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.FileSelect">
      <summary>
            If set, the text entered in the field represents the pathname of a file whose contents shall be submitted as the value of the field.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.DoNotSpellCheck">
      <summary>
            If set, text entered in the field shall not be spell-checked.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.DoNotScroll">
      <summary>
            If set, the field shall not scroll (horizontally for single-line fields, vertically for multiple-line fields) to accommodate more text 
            than fits within its annotation rectangle. Once the field is full, no further text shall be accepted for interactive form filling; 
            for non-interactive form filling, the filler should take care not to add more character than will visibly fit in the defined area.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Comb">
      <summary>
            May be set only if the MaxLen entry is present in the text field dictionary (see Table 229) and if the Multiline, Password, and FileSelect 
            flags are clear. If set, the field shall be automatically divided into as many equally spaced positions, or combs, as the value of MaxLen, 
            and the text is laid out into those combs.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.RichText">
      <summary>
            If set, the value of this field shall be a rich text string (see 12.7.3.4, “Rich Text Strings”). If the field has a value, the RV entry of 
            the field dictionary (Table 222) shall specify the rich text string.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Combo">
      <summary>
            If set, the field is a combo box; if clear, the field is a list box.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Edit">
      <summary>
            If set, the combo box shall include an editable text box as well as a drop-down list; if clear, it shall include only a drop-down list. This flag shall be used only if the Combo flag is set.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.Sort">
      <summary>
            If set, the field’s option items shall be sorted alphabetically. This flag is intended for use by writers, not by readers. Conforming readers shall display the options in the order in which they occur in the Opt array.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.MultiSelect">
      <summary>
            If set, more than one of the field’s option items may be selected simultaneously; if clear, at most one item shall be selected.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldFlags.CommitOnSelChange">
      <summary>
            If set, the new value shall be committed as soon as a selection is made (commonly with the pointing device). In this case, supplying a value for a field involves three actions: selecting the field for fill-in, selecting a choice for the fill-in value, and leaving that field, which finalizes or “commits” the data choice and triggers any actions associated with the entry or changing of this data. If this flag is on, then processing does not wait for leaving the field action to occur, but immediately proceeds to the third step.
            This option enables applications to perform an action once a selection is made, without requiring the user to exit the field. If clear, the new value is not committed until the user exits the field.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.FieldTypes">
      <summary>
            This enum lists allowed field types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldTypes.Undefined">
      <summary>
            Undefined type.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldTypes.NonTerminal">
      <summary>
            Non terminal field.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldTypes.Button">
      <summary>
            PushButton field.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldTypes.Text">
      <summary>
            Text field.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldTypes.Choice">
      <summary>
            Choice field.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.FieldTypes.Signature">
      <summary>
            Signature field.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.NonTerminalField">
      <summary>
            This class represents a non-rerminal field.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.NonTerminalField.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="toolTip">Name of the alternate field.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.NonTerminalField.Kids">
      <summary>
            Gets or sets the children.
            </summary>
      <value>
            The children.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.RadioButtonField">
      <summary>
            This class represents a radio button field.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.RadioButtonField.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="selectedItemName">Name of the selected item.</param>
      <param name="toolTip">The tool tip.</param>
      <example>
        <code lang="cs">
            RadioButtonField button = new RadioButtonField("RadioGroup1", "Radio Button 1", "This is checkbox");
            button.FontResourceID = "MSGothic";
            button.SelectedItemName = "Radio Button 1";
            document.AcroForm.Fields.Add(button);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.RadioButtonField.SelectedItemName">
      <summary>
            Gets or sets the name of the selected item.
            </summary>
      <value>
            The name of the selected item.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.RadioButtonField.DefaultValue">
      <summary>
            Gets or sets the default value.
            </summary>
      <value>
            The default value.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.ChoiceField">
      <summary>
            This class represents a choice field.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.#ctor(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Apitron.PDF.Kit.Interactive.Forms.ChoiceFieldType)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="toolTip">An alternate field name that shall be used in place of the actual field name wherever the field shall be 
            identified in the user interface (such as in error or status messages referring to the field). This text is also useful 
            when extracting the document’s contents in support of accessibility to users with disabilities or for other purposes.</param>
      <param name="options">The choices. This dictionary represents the option’s export value and the text that shall be displayed as the name of the option.</param>
      <param name="choiceFieldType">Type of the choice field.</param>
      <example>
        <code lang="cs">
            string[] stringViews = new string[] { "One", "Two", "Three", "Four", "Five", "Six", "Seven" };
            Dictionary&lt;string, string&gt; options = new Dictionary&lt;string, string&gt;();
            for (int i = 0; i &lt; stringViews.Length; i++)
            {
                options.Add( i.ToString(), stringViews[i] );
            }
            ChoiceField choice = new ChoiceField("Choice#1", "Combo box", options, ChoiceFieldType.ComboBox);
            choice.IsMultiSelect = true;
            choice.SelectItem("One");
            choice.SelectItem("Two");
            choice.TopIndex = 5;
            choice.Sort = true;
            choice.IsEditable = true;
            choice.TextColor = new double[] { 0, 1, 0 };
            ChoiceFieldView choiceFieldView = new ChoiceFieldView(choice, new Boundary(100, 500, 200, 510));
            
            document.AcroForm.Fields.Add(choice);
            page.Annotations.Add(choiceFieldView);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.#ctor(System.String,System.String,System.String[],Apitron.PDF.Kit.Interactive.Forms.ChoiceFieldType)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Forms.ChoiceField" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="toolTip">Name of the alternate field.</param>
      <param name="choices">The choices.</param>
      <param name="choiceFieldType">Type of the choice field.</param>
      <example>
        <code lang="cs">
            ChoiceField choice = new ChoiceField("Choice#1", "Combo box", "One", ChoiceFieldType.ListBox);
            choice.IsMultiSelect = false;
            choice.IsEditable = false;
            choice.TextColor = new double[] { 0, 1, 0 };
            ChoiceFieldView choiceFieldView = new ChoiceFieldView(choice, new Boundary(100, 500, 200, 510));
            
            document.AcroForm.Fields.Add(choice);
            page.Annotations.Add(choiceFieldView);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.SelectItem(System.String)">
      <summary>
            Selects specified item.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.ChoiceFieldType">
      <summary>
            Gets the type of the choice field.
            </summary>
      <value>
            The type of the choice field.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.IsMultiSelect">
      <summary>
            Gets or sets a value indicating whether more than one of the field’s option items may be selected simultaneously.
            </summary>
      <value>
        <c>true</c> if this instance is multi select; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.IsEditable">
      <summary>
            Gets or sets a value indicating whether the combo box shall include an editable text box as well as a drop-down list.
            </summary>
      <value>
        <c>true</c> if this instance is editable; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.SelectionColor">
      <summary>
            Gets or sets the color of the selection.
            The color is an array of numbers that shall be in the range 0.0 to 1.0 specifying the colour of 
            the widget annotation’s border. The number of array elements determines the colour space in which 
            the colour shall bedefined:
            0 No colour; transparent
            1 DeviceGray
            3 DeviceRGB
            4 DeviceCMYK
            </summary>
      <value>
            The color of the selection.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.TopIndex">
      <summary>
            Gets or sets for scrollable list boxes, the zero based top index.
            </summary>
      <value>
            The index of the top.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.Options">
      <summary>
            Gets the options. This dictionary represents the option’s export value and the text that shall be displayed as the name of the option.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.SelectedItems">
      <summary>
            Gets the selected items.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.SelectedItem">
      <summary>
            Gets the selected item.
            </summary>
      <value>
            The selected item.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.ChoiceField.Sort">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Apitron.PDF.Kit.Interactive.Forms.ChoiceField" /> should be sorted.
            </summary>
      <value>
        <c>true</c> if the instance should be sorted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.SignatureField">
      <summary>
            This class represents a signature field.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.SignatureField.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="toolTip">An alternate field name that shall be used in place of the actual field name wherever the field shall be
            identified in the user interface (such as in error or status messages referring to the field). This text is also useful
            when extracting the document’s contents in support of accessibility to users with disabilities or for other purposes.</param>
      <example>
        <code lang="cs">
            SignatureField signatureField = new SignatureField("sig", "This is simple signature field");
            fixedDocument.AcroForm.Fields.Add(signatureField);
            
            SignatureFieldView signatureFieldView = new SignatureFieldView(signatureField, new Boundary(100, 500, 200, 530));
            page.Annotations.Add(signatureFieldView);
            
            signatureField.TextColor = new double[] { 1, 0, 0 };
            signatureField.ViewColor = new double[] { 1, 0, 1 };
            signatureField.BorderColor = new double[] { 0, 1, 1 };
            signatureField.BorderStyle = new AnnotationBorderStyle(2, AnnotationBorderType.Inset);
            
            signatureField.LockAction = LockAction.Include;
            signatureField.LockFields.Add( "btn" );
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.Name">
      <summary>
            The name of the person or authority signing the document. This value should be used only when it is not possible to extract the name from the signature.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.SignDate">
      <summary>
            The time of signing. Depending on the signature handler, this may be a normal unverified computer time or a time generated in a verifiable way from a secure time server.
            This value should be used only when the time of signing is not available in the signature.        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.CertificateData">
      <summary>
            An array of strings representing the X.509 certicicate chain used for signing 
            and validating signatures that use public-key cryptology.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.LockFields">
      <summary>
            Gets the signature field lock list that specifies a set of form fields that shall be locked when this signature field is signed.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.ViewSettings">
      <summary>
            Gets the view settings.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.LockAction">
      <summary>
            Gets or sets the lock action which, in conjunction with <see cref="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.LockFields" />, indicates the set of fields that should be locked.
            </summary>
      <value>
            The lock action.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.Signature">
      <summary>
            Gets or sets the signature.
            </summary>
      <value>
            The signature.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.Location">
      <summary>
            Gets the CPU host name or physical location of the signing.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.Reason">
      <summary>
            Gets or sets the reason for the signing, such as (I agree…).
            </summary>
      <value>
            The reason.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.ContactInfo">
      <summary>
            Gets or sets the information provided by the signer to enable a recipient to contact the signer to verify the signature.
            </summary>
      <value>
            The contact info.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.IsSigned">
      <summary>
            Gets a value indicating whether this instance has signature.
            </summary>
      <value>
        <c>true</c> if this instance is signed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureField.IsValid">
      <summary>
            Gets a value indicating whether the document has changes since it has been signed by this signature.
            </summary>
      <value>
        <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Graphic">
      <summary>    
            Defines how the graphic part of the signature field view will look like when placed on page, used in <see cref="T:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings" />.        
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Graphic.Name">
      <summary>
            Signer common name will be shown.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Graphic.NoGraphic">
      <summary>
            No graphic will be shown.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Graphic.Image">
      <summary>
            Imported graphic will be shown.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Graphic.XObject">
      <summary>
            Imported XObject will be shown.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings">
      <summary>
            This class represents a signature field view settings.
            Signature field view consists of 2 parts : graphic and description. Their appearance can be controlled by using <see cref="P:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings.Graphic" /> and <see cref="P:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings.Description" /> properties.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings.Description">
      <summary>
            Gets or sets the description.
            </summary>
      <value>
            The description.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings.TextPosition">
      <summary>
            Gets or sets the text position.
            </summary>
      <value>
            The text position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings.Graphic">
      <summary>
            Gets or sets the graphic.
            </summary>
      <value>
            The graphic.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings.GraphicResourceID">
      <summary>
            Gets or sets the graphic resource ID, namely XObject that will be drawn when <see cref="P:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.SignatureFieldViewSettings.Graphic" /> is set to <see cref="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.Graphic.Image" />.
            </summary>
      <value>
            The graphic resource ID.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.TextPosition">
      <summary>
            Text position.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.TextPosition.Auto">
      <summary>
            Text position will be defined automatically.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.TextPosition.LeftToRight">
      <summary>
            Text will be placed on the left side.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Forms.SignatureSettings.TextPosition.RightToLeft">
      <summary>
            Text will be placed on the right side.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store">
      <summary>
            This class represents Pkcs12store.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store.#ctor(System.IO.Stream,System.String)">
      <summary>
            Create a new Pkcs #12 key store from a stream.
            </summary>
      <remarks>
            The <paramref name="stream" /> may be closed when the constructor completes.
            It is the responsibility of the client to close the stream.
            </remarks>
      <param name="stream">A stream containing a Pkcs #12 key store.</param>
      <param name="password">The password required to open the store.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store.#ctor(System.Security.Cryptography.X509Certificates.X509Chain)">
      <summary>
            Create a Pkcs12Store from a chain
            </summary>
      <param name="chain">The chain.</param>
      <remarks>
            Available as of .NET 2.0.
            </remarks>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Create a Pkcs12Store from a Certificate.
            </summary>
      <param name="certificate">The certificate.</param>
      <remarks>
            A complete chain must be buildable from the given certificate.
            The used RevocationMode will be X509RevocationMode.Offline, if you want an other
            revocation mode, please use the X509Chain overload.
            <para>Available as of .NET 2.0.</para></remarks>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store.Names">
      <summary>
            The names of all certificates in the store that can be used for signing.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs1Signature">
      <summary>
            The PKCS#1 standard supports several public-key cryptographic algorithms and digest methods, including RSA encryption, DSA signatures, and SHA-1 and MD5 digests (see the Bibliography in PDF spec for references). 
            For signing PDF files using PKCS#1, it's only allowed to use RSA encryption algorithm and SHA-1 digest method.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Signature">
      <summary>
            This class represents PDF signature.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Signature.SignatureHandler">
      <summary>
            This class represents an abstract signature handler object designed to provide document signing abilities.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.SignatureHandler.Name">
      <summary>
            The name of the person or authority signing the document. This value should be used only when it is not possible to extract the name from the signature.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.SignatureHandler.DistinguishedName">
      <summary>
            The subject Distinguished Name (DN) that shall be present within the certificate for it to be acceptable for signing, described in RFC 3280.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.SignatureHandler.SignDate">
      <summary>
            The time of signing. Depending on the signature handler, this may be a normal unverified computer time or a time generated in a verifiable way from a secure time server.
            This value should be used only when the time of signing is not available in the signature.        
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.SignatureHandler.TimeStampingAuthority">
      <summary>
            Gets the time stamping authority.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Signature.Create(System.Security.Cryptography.X509Certificates.X509Chain)">
      <summary>
            Create a new StandardSignatureHandler best suited for a signing certificate.
            </summary>
      <param name="chain">The chain containing the private key.</param>
      <returns>Signature based on PKCS#12 store.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Signature.Create(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Create a new StandardSignatureHandler best suited for a signing certificate.
            </summary>
      <param name="certificate">The certificate containing the private key.</param>
      <returns>Signature based on PKCS#12 store.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Signature.Create(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store,Apitron.PDF.Kit.Interactive.Forms.Signature.ISignatureServiceProvider)">
      <summary>
            Create a new StandardSignatureHandler best suited for a signing certificate.
            </summary>
      <param name="keyStore">The key store containing the private key.</param>
      <param name="signatureServiceProvider">Signature service provider.</param>
      <returns>Signature based on PKCS#12 store.</returns>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Signature.Create(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store,System.String,Apitron.PDF.Kit.Interactive.Forms.Signature.ISignatureServiceProvider)">
      <summary>
            Create a new StandardSignatureHandler best suited for a signing certificate.
            </summary>
      <remarks>
            This method creates a signature handler best suited for signing based on the signing certificate's properties.
            <para>Note that a complete chain of certificates up to the root CA certificate or a self signed certificate is required within the key store.</para></remarks>
      <param name="keyStore">The key store containing the private key.</param>
      <param name="name">The name that is associated with the private key in the store.</param>
      <param name="signatureServiceProvider">Signature service provider.</param>
      <returns>Signature based on PKCS#12 store.</returns>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.Signature.SignDate">
      <summary>
            The time of signing. Depending on the signature handler, this may be a normal unverified computer time or a time generated in a verifiable way from a secure time server.
            This value should be used only when the time of signing is not available in the signature.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.Signature.Name">
      <summary>
            The subject name in the signing certificate (the element "CN")
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.Signature.DistinguishedName">
      <summary>
            The subject Distinguished Name (DN) that shall be present within the certificate for it to be acceptable for signing, described in RFC 3280.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs1Signature.#ctor(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs1Signature" /> and uses the first key from the store to sign the document.
            </summary>
      <param name="keyStore">A key store.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs1Signature.#ctor(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store,System.String,Apitron.PDF.Kit.Interactive.Forms.Signature.ISignatureServiceProvider)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs1Signature" /> and uses the given key from the store to sign the document.
            </summary>
      <param name="keyStore">A key store.</param>
      <param name="name">Name of the key to use for signing.</param>
      <param name="signatureServiceProvider">The Signature Service Provider.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs1Signature.#ctor(System.Security.Cryptography.X509Certificates.X509Chain)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs1Signature" />  and uses the given chain to sign the document.
            </summary>
      <param name="chain">The chain containing the private key.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs1Signature.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs1Signature" /> and uses the given certificate to sign the document.
            </summary>
      <param name="certificate">The certificate containing the private key.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature">
      <summary>
            Security handlers may use public-key encryption technology to encrypt a document (or strings and streams within a document). When doing so, specifying one or more lists of recipients, where each list has its own unique access permissions may be done. Only specified recipients shall open the encrypted document or content, unlike the standard security handler, where a password determines access.
            The permissions defined for public-key security handlers are shown in Table 24 in 7.6.4.2, "Public-Key Encryption Dictionary" (PDF spec.).
            Public-key security handlers use the industry standard Public Key Cryptographic Standard Number 7 (PKCS#7) binary encoding syntax to encode recipient list, decryption key, and access permission information.
            The PKCS#7 specification is in Internet RFC 2315, PKCS #7: Cryptographic Message Syntax, Version 1.5 (see the Bibliography in PDF spec.).
            When encrypting the data, each recipient’s X.509 public key certificate (as described in ITU-T Recommendation X.509; see the Bibliography in PDF spec.) shall be available. 
            When decrypting the data, the conforming reader shall scan the recipient list for which the content is encrypted and shall attempt to find a match with a certificate that belongs to the user. 
            If a match is found, the user requires access to the corresponding private key, which may require authentication, possibly using a password. 
            Once access is obtained, the private key shall be used to decrypt the encrypted data.
            </summary>
      <remarks>
            The original signed message digest over the document’s byte range shall be incorporated as the normal PKCS#7 SignedData field. No data shall be encapsulated in the PKCS#7 SignedData field.
            </remarks>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature.#ctor(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature" /> and uses the first key from the store to sign the document.
            </summary>
      <param name="keyStore">A key store.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature.#ctor(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store,System.String,Apitron.PDF.Kit.Interactive.Forms.Signature.ISignatureServiceProvider)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature" /> and uses the given key from the store to sign the document.
            </summary>
      <param name="keyStore">A key store.</param>
      <param name="name">Name of the key to use for signing.</param>
      <param name="signatureServiceProvider">The Signature Service Provider.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature.#ctor(System.Security.Cryptography.X509Certificates.X509Chain)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature" />  and uses the given chain to sign the document.
            </summary>
      <param name="chain">The chain containing the private key.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature" /> and uses the given certificate to sign the document.
            </summary>
      <param name="certificate">The certificate containing the private key.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7DetachedSignature.TimeStampingAuthority">
      <summary>
            Gets the time stamping authority.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7Sha1Signature">
      <summary>
            Security handlers may use public-key encryption technology to encrypt a document (or strings and streams within a document). When doing so, specifying one or more lists of recipients, where each list has its own unique access permissions may be done. Only specified recipients shall open the encrypted document or content, unlike the standard security handler, where a password determines access.
            The permissions defined for public-key security handlers are shown in Table 24 in 7.6.4.2, "Public-Key Encryption Dictionary" (PDF spec.).
            Public-key security handlers use the industry standard Public Key Cryptographic Standard Number 7 (PKCS#7) binary encoding syntax to encode recipient list, decryption key, and access permission information.
            The PKCS#7 specification is in Internet RFC 2315, PKCS #7: Cryptographic Message Syntax, Version 1.5 (see the Bibliography in PDF spec.).
            When encrypting the data, each recipient’s X.509 public key certificate (as described in ITU-T Recommendation X.509; see the Bibliography in PDF spec.) shall be available. 
            When decrypting the data, the conforming reader shall scan the recipient list for which the content is encrypted and shall attempt to find a match with a certificate that belongs to the user. 
            If a match is found, the user requires access to the corresponding private key, which may require authentication, possibly using a password. 
            Once access is obtained, the private key shall be used to decrypt the encrypted data.
            </summary>
      <remarks>
            The SHA1 digest of the document’s byte range shall be encapsulated in the PKCS#7 SignedData field with ContentInfo of type Data. The digest of that SignedData shall be incorporated as the normal PKCS#7 digest.
            </remarks>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7Sha1Signature.#ctor(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7Sha1Signature" /> and uses the first key from the store to sign the document.
            </summary>
      <param name="keyStore">A key store.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7Sha1Signature.#ctor(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store,System.String)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7Sha1Signature" /> and uses the given key from the store to sign the document.
            </summary>
      <param name="keyStore">A key store.</param>
      <param name="name">Name of the key to use for signing.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7Sha1Signature.#ctor(System.Security.Cryptography.X509Certificates.X509Chain)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7Sha1Signature" />  and uses the given chain to sign the document.
            </summary>
      <param name="chain">The chain containing the private key.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7Sha1Signature.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs7Sha1Signature" /> and uses the given certificate to sign the document.
            </summary>
      <param name="certificate">The certificate containing the private key.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.Signature.VeriSignSignature">
      <summary>
            A signature based on the certificate issued by VeriSign inc.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.VeriSignSignature.#ctor(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.VeriSignSignature" /> and uses the first key from the store to sign the document.
            </summary>
      <param name="keyStore">A key store.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.VeriSignSignature.#ctor(Apitron.PDF.Kit.Interactive.Forms.Signature.Pkcs12Store,System.String)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.VeriSignSignature" /> and uses the given key from the store to sign the document.
            </summary>
      <param name="keyStore">A key store.</param>
      <param name="name">Name of the key to use for signing.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.VeriSignSignature.#ctor(System.Security.Cryptography.X509Certificates.X509Chain)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.VeriSignSignature" /> and uses the given chain to sign the document.
            </summary>
      <param name="chain">The chain containing the private key.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.Signature.VeriSignSignature.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Creates a new <see cref="T:Apitron.PDF.Kit.Interactive.Forms.Signature.VeriSignSignature" /> and uses the given certificate to sign the document.
            </summary>
      <param name="certificate">The certificate containing the private key.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Forms.TextField">
      <summary>
            This class represents a text field.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Forms.TextField.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fieldName">Name of the field.</param>
      <param name="text">The text.</param>
      <param name="toolTip">The tool tip.</param>
      <example>
        <code lang="cs">
            TextField textField = new TextField("tx_field", string.Empty, "This is text field");
            textField.DefaultValue = "This is default value";
            textField.Text = "Hello world!!!";
            
            fixedDocument.AcroForm.Fields.Add(textField);
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TextField.IsMultiline">
      <summary>
            Gets or sets a value indicating whether this instance is multiline.
            If set, the field may contain multiple lines of text; if clear, the field’s text shall be restricted to a single line.
            </summary>
      <value>
        <c>true</c> if this instance is multiline; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TextField.IsPassword">
      <summary>
            Gets or sets a value indicating whether this instance is password.
            If set, the field is intended for entering a secure password that should not be echoed visibly to the screen. Characters typed 
            from the keyboard shall instead be echoed in some unreadable form, such as asterisks or bullet characters.
            </summary>
      <value>
        <c>true</c> if this instance is password; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TextField.IsFileSelect">
      <summary>
            Gets or sets a value indicating whether this instance is file select.
            If set, the text entered in the field represents the pathname of a file whose contents shall be submitted as the value of the field.
            </summary>
      <value>
        <c>true</c> if this instance is file select; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TextField.DoNotSpellCheck">
      <summary>
            Gets or sets a value indicating whether do not spell check.
            If set, text entered in the field shall not be spell-checked.
            </summary>
      <value>
        <c>true</c> if do not spell check; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TextField.DoNotScroll">
      <summary>
            Gets or sets a value indicating whether [do not scroll].
            If set, the field shall not scroll (horizontally for single-line fields, vertically for multiple-line fields) to accommodate more text 
            than fits within its annotation rectangle. Once the field is full, no further text shall be accepted for interactive form filling; 
            for non-interactive form filling, the filler should take care not to add more character than will visibly fit in the defined area.
            </summary>
      <value>
        <c>true</c> if [do not scroll]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TextField.IsComb">
      <summary>
            Gets or sets a value indicating whether this instance is comb.
            May be set only if the MaxLen entry is present in the text field and if the Multiline, Password, and FileSelect 
            flags are clear. If set, the field shall be automatically divided into as many equally spaced positions, or combs, as the value of MaxLen, 
            and the text is laid out into those combs.
            </summary>
      <value>
        <c>true</c> if this instance is comb; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TextField.MaxLen">
      <summary>
            Gets or sets the maximum length of the field’s text, in characters.
            </summary>
      <value>
            The max len.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TextField.Text">
      <summary>
            Gets or sets the text of the field.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Forms.TextField.DefaultValue">
      <summary>
            Gets or sets the default text.
            </summary>
      <value>
            The default text.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DisplayType">
      <summary>
            This enum represents a page's dispaly options.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.DisplayType.Unknown">
      <summary>
            Loacation is not specified.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.DisplayType.XYZ">
      <summary>
            Display the page designated by page, with the coordinates (left, top) positioned at the upper-left corner of the window and the contents of the page magnified by the factor zoom. 
            A null value for any of the parameters left, top, or zoom specifies that the current value of that parameter shall be retained unchanged. A zoom value of 0 has the same meaning as a null value.
            Used params: Left, Top, Zoom
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.DisplayType.Fit">
      <summary>
            Display the page designated by page, with its contents magnified just enough to fit the entire page within the window both horizontally and vertically. If the required horizontal and vertical 
            magnification factors are different, use the smaller of the two, centering the page within the window in the other dimension.
            Used params: none
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.DisplayType.FitH">
      <summary>
            Display the page designated by page, with the vertical coordinate toppositioned at the top edge of the window and the contents of the page magnified just enough to fit the entire width of the 
            page within the window. A null value for top specifies that the current value of that parameter shall be retained unchanged.
            Used params: Top
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.DisplayType.FitV">
      <summary>        
            Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height 
            of the page within the window. A null value for left specifies that the current value of that parameter shall be retained unchanged.
            Used params: Left
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.DisplayType.FitR">
      <summary>
            Display the page designated by page, with its contents magnified just enough to fit the rectangle specified by the coordinates left, bottom, right, and top entirely within the window both horizontally and vertically. 
            If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the rectangle within the window in the other dimension.
            Used params: Left, Bottom, Right, Top,
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.DisplayType.FitB">
      <summary>
            Display the page designated by page, with its contents magnified just enough to fit its bounding box entirely within the window both horizontally and vertically. 
            If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the bounding box within the window in the other dimension.
            Used params: none
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.DisplayType.FitBH">
      <summary>
            Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window and the contents of the page magnified just enough to 
            fit the entire width of its bounding box within the window. A null value for top specifies that the current value of that parameter shall be retained unchanged.
            Used params: Top
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.DisplayType.FitBV">
      <summary>
            Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough 
            to fit the entire height of its bounding box within the window. A null value for left specifies that the current value of that parameter shall be retained unchanged.
            Used params: Left
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark">
      <summary>
            The tree-structured hierarchy of outline items (sometimes called bookmarks), 
            which serve as a visual table of contents to display the document’s structure to the user.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.#ctor(Apitron.PDF.Kit.Interactive.Actions.IAction,System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark" /> class.
            </summary>
      <param name="action">The action.</param>
      <param name="title">The title.</param>
      <param name="isOpen">if set to <c>true</c> [is open].</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            Page page = new Page();
            
            // create named destination and action
            Destination namedDestination = new Destination("Page #1");
            GoToAction action = new GoToAction(namedDestination);
            
            // add bookmark
            Bookmark bookmark = new Bookmark(action, "Page #1 outline" );
            
            document.Bookmarks.AddLast(bookmark);
            document.Pages.Add(page);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.#ctor(Apitron.PDF.Kit.FixedLayout.Page,System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark" /> class.
            </summary>
      <param name="page">The page.</param>
      <param name="title">The title.</param>
      <param name="isOpen">if set to <c>true</c> [is open].</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            Page page = new Page();
            
            Bookmark bookmark = new Bookmark(page, "Page outline #1");
            
            document.Bookmarks.AddLast(bookmark);
            document.Pages.Add(page);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.#ctor(Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination,System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark" /> class.
            </summary>
      <param name="destination">The destination.</param>
      <param name="title">The title.</param>
      <param name="isOpen">if set to <c>true</c> [is open].</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            Page page = new Page();
            
            Destination destination = new Destination(page, new DestinationTypeXYZ(0, 0));
            Bookmark bookmark = new Bookmark(destination, "Page outline #1");
            
            document.Bookmarks.AddLast(bookmark);
            document.Pages.Add(page);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark" /> class.
            </summary>
      <param name="title">The title.</param>
      <param name="isOpen">if set to <c>true</c> [is open].</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            Page page = new Page();
            
            Bookmark bookmark = new Bookmark("Page outline #1");
            
            document.Bookmarks.AddLast(bookmark);
            document.Pages.Add(page);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.GetChildren">
      <summary>
            Gets the children bookmarks.
            </summary>
      <returns>
            The list of child bookmarks.
            </returns>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            Bookmark bookmark = document.Bookmarks;
            
            // Get list of childs
            IList &lt;Bookmark&gt; bookmarks = bookmark.GetChildren();
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.AddLast(Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark)">
      <summary>
            Adds the bookmark to the last position.
            </summary>
      <param name="bookmark">The bookmark.</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            
            document.Bookmarks.AddLast(new Bookmark(document.Pages[i], "Page #" + i));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.AddFirst(Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark)">
      <summary>
            Adds the bookmark to the first position.
            </summary>
      <param name="bookmark">The bookmark.</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            
            document.Bookmarks.AddFirst(new Bookmark(document.Pages[i], "Page #" + i));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.Remove(Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark,System.Boolean)">
      <summary>
            Removes the specified bookmark.
            </summary>
      <param name="bookmark">The bookmark.</param>
      <param name="removeRecursive">if set to <c>true</c> [remove recursive].</param>
      <returns>
        <c>true</c> if item is successfully removed; otherwise, <c>false</c>. This method also returns <c>false</c> if item was not found in the bookmark collection.
            </returns>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            Bookmark bookmark = document.Bookmarks;
            
            // Get list of childs
            IList &lt;Bookmark&gt; bookmarks = bookmark.GetChildren();
            Bookmark bookmark1 = bookmarks[2];
            
            // remove 3rd child bookmark from document bookmark collection
            bookmark.Remove( bookmark1 );
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.TextColor">
      <summary>
            Gets or sets the color of the text.
            </summary>
      <value>
            The color of the text.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.IsTextBold">
      <summary>
            Gets or sets a value indicating whether this instance is text bold.
            </summary>
      <value>
        <c>true</c> if this instance is text bold; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.IsTextItalic">
      <summary>
            Gets or sets a value indicating whether this instance is text italic.
            </summary>
      <value>
        <c>true</c> if this instance is text italic; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.Title">
      <summary>
            Gets or sets the title.
            </summary>
      <value>
            The title.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Bookmark.IsOpen">
      <summary>
            Gets or sets a value indicating whether this instance is open.
            </summary>
      <value>
        <c>true</c> if this instance is open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination">
      <summary>
            This class represents a destination.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination.#ctor(Apitron.PDF.Kit.FixedLayout.Page)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination" /> class.
            </summary>
      <param name="page">The page.</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            Page page = new Page();
            
            // create named destination and action
            Destination namedDestination = new Destination("Page #1");
            GoToAction action = new GoToAction(namedDestination);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination.#ctor(Apitron.PDF.Kit.FixedLayout.Page,Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination" /> class.
            </summary>
      <param name="page">The page.</param>
      <param name="destinationType">Type of the destination.</param>
      <example>
        <code lang="cs">
            FixedDocument document = new FixedDocument();
            Page page = new Page();
            
            // create named destination and action
            Destination destination = new Destination(document.Pages[0], new DestinationTypeFitR());
            GoToAction action = new GoToAction(namedDestination);
            
            // add bookmark
            Bookmark bookmark = new Bookmark(action, "Page #1 outline" );
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination" /> class. For named destinations.
            </summary>
      <param name="destinationName">Name of the destination.</param>
      <example>
        <code lang="cs">
            // create destination 
            Destination destination = new Destination("myDestination");
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination" /> class. For destinations on external document.
            </summary>
      <param name="pageNumber">The remote zero based page number.</param>
      <example>
        <code lang="cs">
            // create destination 
            Destination destination = new Destination(0);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination.#ctor(System.Int32,Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination" /> class.
            </summary>
      <param name="pageNumber">The remote zero based page number.</param>
      <param name="destinationType">Type of the destination.</param>
      <example>
        <code lang="cs">
            // create destination 
            Destination destination = new Destination(0,  new DestinationTypeFitR());
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination.PageNumber">
      <summary>
            Gets the page number. This property
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination.Page">
      <summary>
            Gets the page.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination.DestinationType">
      <summary>
            Gets the type of the destination.
            </summary>
      <value>
            The type of the destination.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.Destination.DestinationName">
      <summary>
            Gets the name of the destination.
            </summary>
      <value>
            The name of the destination.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType">
      <summary>
            This class represents an explicit destination.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType.Type">
      <summary>
            Gets destinathion type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType.Left">
      <summary>
            Gets the left.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType.Right">
      <summary>
            Gets the right.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType.Top">
      <summary>
            Gets the top.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType.Bottom">
      <summary>
            Gets the bottom.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType.Zoom">
      <summary>
            Gets the zoom.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFit">
      <summary>
            This type of destination display the page designated by page, with its contents magnified just enough to fit the entire page within the window both horizontally and vertically. 
            If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the page within the window in the other dimension.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFit.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFit" /> class.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitB">
      <summary>
            This type of destination display the page designated by page, with its contents magnified just enough to fit its bounding box entirely within the window both horizontally and vertically. 
            If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the bounding box within the window in the other dimension.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitB.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitB" /> class.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBH">
      <summary>
            This type of destination display the page designated by page, with the vertical coordinate top positioned at the top edge of the window and the contents of the page magnified 
            just enough to fit the entire width of its bounding box within the window. A null value for top specifies that the current value of that parameter shall be retained unchanged.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBH.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBH" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBH.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBH" /> class.
            </summary>
      <param name="top">The top.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBV">
      <summary>
            This type of destination display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height of its bounding box within the window. A null value for left specifies that the current value of that parameter shall be retained unchanged.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBV.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBV" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBV.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitBV" /> class.
            </summary>
      <param name="left">The left.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitH">
      <summary>
            This type of destination display the page designated by page, with the vertical coordinate toppositioned at the top edge of the window and the contents of the page magnified 
            just enough to fit the entire width of the page within the window. A null value for top specifies that the current value of that parameter shall be retained unchanged.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitH.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitH" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitH.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitH" /> class.
            </summary>
      <param name="top">The top.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitR">
      <summary>
            This type of destination display the page designated by page, with its contents magnified just enough to fit the rectangle specified by the coordinates left, bottom, right, and top entirely 
            within the window both horizontally and vertically. If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the rectangle within 
            the window in the other dimension.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitR.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitR" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitR.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitR" /> class.
            </summary>
      <param name="left">The left.</param>
      <param name="bottom">The bottom.</param>
      <param name="right">The right.</param>
      <param name="top">The top.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitV">
      <summary>
            This type of destination display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height of the page within the window. A null value for left specifies that the current value of that parameter shall be retained unchanged.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitV.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitV" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitV.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeFitV" /> class.
            </summary>
      <param name="left">The left.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeXYZ">
      <summary>
            This type of destination display the page designated by page, with the coordinates (left, top) positioned at the upper-left corner of the window and the contents of the page magnified 
            by the factor zoom. A null value for any of the parameters left, top, or zoom specifies that the current value of that parameter shall be retained unchanged. 
            A zoom value of 0 has the same meaning as a null value.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeXYZ.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationType" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeXYZ.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeXYZ" /> class.
            </summary>
      <param name="left">The left.</param>
      <param name="top">The top.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeXYZ.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeXYZ" /> class.
            </summary>
      <param name="left">The left.</param>
      <param name="top">The top.</param>
      <param name="zoom">The zoom.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeXYZ.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.DocumentLevel.DestinationTypeXYZ" /> class.
            </summary>
      <param name="zoom">The zoom.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.IDestination">
      <summary>
            This inteface represents an abstact destination.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.IDestination.DisplayType">
      <summary>
            Gets the display type.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead">
      <summary>
            This class represents an article bead.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead.#ctor(Apitron.PDF.Kit.FixedLayout.Page,Apitron.PDF.Kit.FixedLayout.Boundary)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead" /> class.
            </summary>
      <param name="appearingPage">The appearing page.</param>
      <param name="boundary">The boundary.</param>
      <example>
        <code>
            ArticleBead articleBead = new ArticleBead(document.Pages[0], new Boundary(200, 200));
            </code>
      </example>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead.AppearingPage">
      <summary>
            Gets the page object representing the page on which this bead appears.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead.Boundary">
      <summary>
            Gets the rectangle specifying the location of this bead on the page.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleCollection">
      <summary>
            This class represents an article collection.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleCollection.#ctor(Apitron.PDF.Kit.FixedDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="document">The document.</param>
      <example>
        <code>
            ArticleCollection collection = new ArticleCollection();
            collection.Add(articleThread);
              </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread">
      <summary>
            This class represents an article thread.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread.#ctor(System.String,System.String,System.String,System.String,System.DateTime)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread" /> class.
            </summary>
      <param name="title">The title.</param>
      <param name="author">The author.</param>
      <param name="subject">The subject.</param>
      <param name="keywords">The keywords.</param>
      <param name="creationDate">The date of creation.</param>
      <example>
        <code>
            ArticleThread thread = new ArticleThread("My First Article", "Apitron", "Subject", "Keywords", DateTime.Now);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread.AddBeadFirst(Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead)">
      <summary>
            Adds the bead at the first position.
            </summary>
      <param name="bead">The bead.</param>
      <example>
        <code>
            ArticleThread thread = new ArticleThread("My First Article", "Apitron", "Subject", "Keywords", DateTime.Now);
            thread.AddBeadFirst(new ArticleBead(document.Pages[0], new Boundary(200, 200)));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread.AddBeadLast(Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead)">
      <summary>
            Adds the bead at the last position.
            </summary>
      <param name="bead">The bead.</param>
      <example>
        <code>
            ArticleThread thread = new ArticleThread("My First Article", "Apitron", "Subject", "Keywords", DateTime.Now);
            thread.AddBeadLast(new ArticleBead(document.Pages[0], new Boundary(200, 200)));
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread.RemoveBead(Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleBead)">
      <summary>
            Removes the bead from the thread.
            </summary>
      <param name="bead">The bead.</param>
      <example>
        <code>
            ArticleThread thread = new ArticleThread("My Article", "Apitron", "Subject", "Keywords", DateTime.Now);
            ...
            thread.RemoveBead(articleBead);
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread.RemoveFirstBead">
      <summary>
            Removes the first bead from the thread.
            </summary>
      <example>
        <code>
            ArticleThread thread = new ArticleThread("My New Article", "Apitron", "Subject", "Keywords", DateTime.Now);
            ...
            thread.RemoveFirstBead();
            </code>
      </example>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.ArticleThread.RemoveLastBead">
      <summary>
            Removes the last bead from the thread.
            </summary>
      <example>
        <code>
            ArticleThread thread = new ArticleThread("My Boring Article", "Apitron", "Subject", "Keywords", DateTime.Now);
            ...
            thread.RemoveLastBead();
            </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageLabel">
      <summary>
            This class represents a page labels structure.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageLabel.#ctor(System.Int32,Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageNumberingStyle,System.UInt32,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="fromPageNumber">The number of the page (zero based) from which the page labeling should be started.</param>
      <param name="numberingStyle">The numbering style.</param>
      <param name="startNumber">The value of the numeric portion for the first page label in the range. Subsequent pages shall be numbered sequentially from this value, which shall be greater than or equal to 1. Default value: 1.</param>
      <param name="preffix">The preffix.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageLabel.NumberingStyle">
      <summary>
            Gets the numbering style.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageLabel.SturtNumber">
      <summary>
            Gets the start number.
            The value of the numeric portion for the first page label in the range. Subsequent pages shall be numbered sequentially from this value, which shall be greater than or equal to 1. Default value: 1.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageLabel.Preffix">
      <summary>
            Gets or sets the preffix.
            </summary>
      <value>
            The preffix.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageLabel.FromPageNumber">
      <summary>
            Gets from page number.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageNumberingStyle">
      <summary>
            This enum represents the list of allowed numbering styles.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageNumberingStyle.None">
      <summary>
            Has no style.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageNumberingStyle.DecimalArabic">
      <summary>
            Decimal arabic numerals.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageNumberingStyle.UppercaseRoman">
      <summary>
            Uppercase roman numerals
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageNumberingStyle.LowercaseRoman">
      <summary>
            Lowercase roman numerals
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageNumberingStyle.UppercaseLetters">
      <summary>
            Uppercase letters (A to Z for the first 26 pages, AA to ZZ for the next 26, and so on)
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Interactive.Navigation.PageLevel.PageNumberingStyle.LowercaseLetters">
      <summary>
            Lowercase letters (a to z for the first 26 pages, aa to zz for the next 26, and so on)
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PageCollection">
      <summary>
            This class represents a page collection.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PageLabelsCollection">
      <summary>
            This class represents a page lables collection.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.FixedLayout.PageLabelsCollection.#ctor(Apitron.PDF.Kit.FixedDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
      <param name="document">The document.</param>
      <example>
        <code lang="cs">
            // this objects represents a PDF fixed document
            FixedDocument document = new FixedDocument(inPdf);
            // create page labels collection
            PageLabelsCollection collection = new PageLabelsCollection();
            collection.Add(new PageLabel(2, PageNumberingStyle.UppercaseRoman));
            Console.WriteLine("Page labels count : " + collection.Count);
              </code>
      </example>
    </member>
    <member name="T:Apitron.PDF.Kit.FixedLayout.PathOperatingSystem">
      <summary>
            This enum represents the list of allowed OSs for <see cref="T:Apitron.PDF.Kit.FixedLayout.FileSpecification" />.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PathOperatingSystem.DOS">
      <summary>
            DOS based operating system.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PathOperatingSystem.MacOS">
      <summary>
            Mac based operating system.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.FixedLayout.PathOperatingSystem.UNIX">
      <summary>
            UNIX based operating system.
            </summary>
    </member>
    <member name="T:Apitron.Licensing.ApitronPDFKitLicenseAttribute">
      <summary>
            A PDF Kit specialized version of the <see cref="T:Apitron.Licensing.ApitronLicenseAttribute" />.See base class description for usage details.
            </summary>
    </member>
    <member name="M:Apitron.Licensing.ApitronPDFKitLicenseAttribute.#ctor(System.String)">
      <param name="license">The license string you've been provided upon purchase of the license.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.NewPageEventHandler">
      <summary>
            It's being raised when the new page is created.
            </summary>
      <param name="args">The event handler receives an argument of type <see cref="T:Apitron.PDF.Kit.FlowLayout.NewPageEventArgs" /> containing data related to this event.</param>
    </member>
    <member name="T:Apitron.PDF.Kit.FlowLayout.NewPageEventArgs">
      <summary>
            Event args container for the <see cref="E:Apitron.PDF.Kit.FlowDocument.NewPage" /> event.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.NewPageEventArgs.Context">
      <summary>
            Gets the current generation context.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.NewPageEventArgs.OverridingStyleManager">
      <summary>
            Gets the overriding style manager. It can be used to re-assign/change styles for objects that are to be generated for newly created page.
            This style manager gets the priority over base <see cref="P:Apitron.PDF.Kit.FlowDocument.StyleManager" /> if any matching style is found.
            E.g. you want to change the color of a textblock created on page 2 of the document, simply add new matching style with the new color set when page 2 is going to be generated.
            You may use <see cref="P:Apitron.PDF.Kit.FlowLayout.PageGenerationContext.CurrentPage" /> value to get the current page number.
            </summary>
      <value>
            The overriding style manager.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.FlowLayout.NewPageEventArgs.PageBoundary">
      <summary>
            Gets the page boundary set for document generation. It can be altered for particular page if needed by setting this property in event handler.
            </summary>
      <value>
            The default page boundary used for document generation.
            </value>
      <exception cref="T:System.ArgumentNullException">If value is null.</exception>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage">
      <summary>
            The background image parameter allows you to set image as a background for <see cref="T:Apitron.PDF.Kit.FlowLayout.ContentElement" />.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage" /> class.
            </summary>
      <param name="resourceId">The image resource identifier.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage.#ctor(System.String,Apitron.PDF.Kit.Styles.Length,Apitron.PDF.Kit.Styles.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage" /> class.
            </summary>
      <param name="resourceId">The image resource identifier.</param>
      <param name="width">The desired width, if percentage value is used then this dimension will be calculated using corresponding content rect dimension.</param>
      <param name="height">The desired height, if percentage value is used then this dimension will be calculated using corresponding content rect dimension.</param>
      <exception cref="T:System.ArgumentException">if <paramref name="resourceId" /> is null or empty.</exception>
      <remarks>
            If image width or height is set to <see cref="P:Apitron.PDF.Kit.Styles.Length.Auto" /> or null it will be assumed to be equal to original value in pixels.
            </remarks>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage.ResourceId">
      <summary>
            Gets the image resource identifier.
            </summary>
      <value>
            The image resource identifier.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage.Width">
      <summary>
            Gets the desired width of the image.
            </summary>
      <value>
            The width.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage.Height">
      <summary>
            Gets the desired height of the image.
            </summary>
      <value>
            The height.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition">
      <summary>
            Represents the background image position parameter.
            It controls at which position <see cref="T:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage" /> will be drawn first.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition.LeftTop">
      <summary>
            Defines the left top position of the background image.
            </summary>
      <value>
            The left top position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition.LeftCenter">
      <summary>
            Defines the left center position of the background image.
            </summary>
      <value>
            The left center position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition.LeftBottom">
      <summary>
            Defines the left bottom position of the background image.
            </summary>
      <value>
            The left bottom position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition.RightTop">
      <summary>
            Defines the right top position of the background image.
            </summary>
      <value>
            The right top position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition.RightCenter">
      <summary>
            Defines the right center position of the background image.
            </summary>
      <value>
            The right center position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition.RightBottom">
      <summary>
            Defines the right bottom position of the background image.
            </summary>
      <value>
            The right bottom position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition.CenterTop">
      <summary>
            Defines the center top position of the background image.
            </summary>
      <value>
            The center top position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition.CenterCenter">
      <summary>
            Defines the center center position of the background image.
            </summary>
      <value>
            The center center position.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundPosition.CenterBottom">
      <summary>
            Defines the center bottom position of the background image.
            </summary>
      <value>
            The center bottom position.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.BackgroundRepeat">
      <summary>
            Background repeat parameter, controls repeating behaviour of the <see cref="T:Apitron.PDF.Kit.Styles.Appearance.BackgroundImage" />.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundRepeat.RepeatX">
      <summary>
            The background image will be repeated only horizontally.
            </summary>
      <value>
            The repeat x value.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundRepeat.RepeatY">
      <summary>
            The background image will be repeated only vertically.
            </summary>
      <value>
            The repeat y value.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundRepeat.Repeat">
      <summary>
            The background image will be repeated both vertically and horizontally.
            </summary>
      <value>
            The repeat value.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.BackgroundRepeat.NoRepeat">
      <summary>
            The background image will not be repeated.
            </summary>
      <value>
            The no-repeat value
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.Border">
      <summary>
            Represents possible border variations for objects implementing <see cref="T:Apitron.PDF.Kit.FlowLayout.ContentElement" />.
            Whilst <see cref="T:Apitron.PDF.Kit.Styles.Length" /> values can be used for border creation, values created as <see cref="P:Apitron.PDF.Kit.Styles.Length.Auto" /> or <c>null</c> will be counted as zero.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.Border.#ctor(Apitron.PDF.Kit.Styles.Length)">
      <summary>
            Creates a new solid border with given thickness.
            </summary>
      <param name="thickness">The thickness of the border line in PDF units, equivalent to <see cref="M:Apitron.PDF.Kit.Styles.Length.FromPoints(System.Double)" /> call result.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.Border.#ctor(System.Double)">
      <summary>
            Creates a new solid border with given thickness.
            </summary>
      <param name="thickness">The thickness of the border line in PDF units, equivalent to <see cref="M:Apitron.PDF.Kit.Styles.Length.FromPoints(System.Double)" /> call result.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.Border.#ctor(System.Double,System.Single[],System.Single)">
      <summary>
            Creates a new solid border with given thickness and dash pattern.
            </summary>
      <param name="thickness">The thickness of the border line in PDF units, equivalent to <see cref="M:Apitron.PDF.Kit.Styles.Length.FromPoints(System.Double)" /> call result.</param>
      <param name="dashPattern">The line dash pattern, an array that contains marks the widths of the on and off parts.</param>
      <param name="phase">The phase.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="dashPattern" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.Border.#ctor(Apitron.PDF.Kit.Styles.Length,System.Single[],System.Single)">
      <summary>
            Creates a new solid border with given thickness and dash pattern.
            </summary>
      <param name="thickness">The thickness of the border line in PDF units, equivalent to <see cref="M:Apitron.PDF.Kit.Styles.Length.FromPoints(System.Double)" /> call result.</param>
      <param name="dashPattern">The line dash pattern, an array that contains marks the widths of the on and off parts.</param>
      <param name="phase">The phase.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="thickness" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="dashPattern" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.Border.op_Equality(Apitron.PDF.Kit.Styles.Appearance.Border,Apitron.PDF.Kit.Styles.Appearance.Border)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.Border.op_Inequality(Apitron.PDF.Kit.Styles.Appearance.Border,Apitron.PDF.Kit.Styles.Appearance.Border)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Border.Thickness">
      <summary>
            Gets the thickness of the border.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Border.Solid">
      <summary>
            Gets the solid border with thickness equal to 1 pt.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Border.None">
      <summary>
            Gets the object that indicates no border  with thickness equal to 0 pt.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Border.DashPattern">
      <summary>
            Gets the dash pattern of this border.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Border.Phase">
      <summary>
            Gets the phase of the <see cref="P:Apitron.PDF.Kit.Styles.Appearance.Border.DashPattern" />.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.Clear">
      <summary>
            Defines element relation to floating elements.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.Clear.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Appearance.Clear" /> class.
            </summary>
      <param name="stringRepresentation">The string representation.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Clear.Right">
      <summary>
            Clears the floating element effect and signals that element should ignore the float and be placed underneath. 
            The value indicates whether Right side should be cleared.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Clear.Left">
      <summary>
            Clears the floating element effect and signals that element should ignore the float and be placed underneath. 
            The value indicates whether Left side should be cleared.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Clear.Both">
      <summary>
            Clears the floating element effect and signals that element should ignore the float and be placed underneath. 
            The value indicates whether Both (Left and Right) sides should be cleared.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Clear.None">
      <summary>
            Element should not ignore the float.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.ListCounter">
      <summary>
            Defines base index for <see cref="P:Apitron.PDF.Kit.Styles.Appearance.ListStyle.Ordered" /> lists.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.ListCounter.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Appearance.ListCounter" /> class.
            </summary>
      <param name="initialValue">The initial value for the counter.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListCounter.InitialValue">
      <summary>
            Gets or sets the counter start value, this value will be added to zero-based list item index to form a final value.
            </summary>
      <value>
            The counter start.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListCounter.ZeroBased">
      <summary>
            Gets the zero based counter, items will be numbered starting from zero. This counter is used as default setting for latin markers.
            </summary>
      <remarks>
            Zero, <see cref="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.LowerRoman" /> and <see cref="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.UpperRoman" />.
            <para>
            "The number zero does not have its own Roman numeral, but the word nulla (the Latin word meaning "none") was used by medieval computists in lieu of 0. <c> Dionysius Exiguus</c> was known to use nulla alongside Roman numerals in 525.
            About 725, Bede or one of his colleagues used the letter N, the initial of nulla, in a table of epacts, all written in Roman numerals."[wikipedia]
            </para><para>
            So we use "N" to indicate zero in case of <see cref="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.UpperRoman" /> and "nulla" in case of <see cref="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.LowerRoman" />.
            </para></remarks>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListCounter.Standard">
      <summary>
            Gets the standard counter, items will be numbered starting from 1.
            This counter is used as default setting for decimal and roman markers.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.ListMarker">
      <summary>
            Defines available list markers which can be used in conjunction with <see cref="T:Apitron.PDF.Kit.Styles.Appearance.ListStyle" />.
            This setting affects only items with <see cref="T:Apitron.PDF.Kit.Styles.Appearance.ListStyle" /> setting not equal to <see cref="P:Apitron.PDF.Kit.Styles.Appearance.ListStyle.None" />.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.ListMarker.FromResourceId(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Appearance.ListMarker" /> class.
            </summary>
      <param name="resourceId">The identifier of the resource XObject used to paint this marker. It can be any of the following objects:
            <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.Image" />, <see cref="T:Apitron.PDF.Kit.FixedLayout.Resources.XObjects.FixedContent" />, <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.FlowContent" />.</param>
      <returns>List marker.</returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="resourceId" /> is null.</exception>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.Decimal">
      <summary>
            The decimal marker for the ordered list.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.LowerLatin">
      <summary>
            The lower latin marker for the ordered list.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.UpperLatin">
      <summary>
            The upper latin marker for the ordered list.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.LowerRoman">
      <summary>
            The lower latin marker for the ordered list.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.UpperRoman">
      <summary>
            The upper roman marker for the ordered list.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.None">
      <summary>
            No marker.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.Circle">
      <summary>
            The circle marker for the unordered list.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.Square">
      <summary>
            The square marker for the unordered list.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.Triangle">
      <summary>
            The triangle marker for the unordered list.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListMarker.Diamond">
      <summary>
            The diamond marker for the unordered list.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.Display">
      <summary>
            Represents possible display states for <see cref="T:Apitron.PDF.Kit.FlowLayout.ContentElement" />. 
            This setting affects their position on a page, relation to other elements, inheritance of the styling properties and sizing behavior.   
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Display.Block">
      <summary>
            Gets the value of block setting.
            It's important to note that some style properties are only inherited from Block elements e.g. <see cref="P:Apitron.PDF.Kit.FlowLayout.ContentElement.Align" />.
            So by setting the display value to the value that differs from  block you will affect the inheritance behavior for such properties.
            The block element creates new line before/after itself and can be explicitly sized using <see cref="P:Apitron.PDF.Kit.Styles.Style.Width" /> and <see cref="P:Apitron.PDF.Kit.Styles.Style.Height" /> properties.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Display.None">
      <summary>
            Gets the value of none setting. Nothing will be produced for such elements.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Display.Inline">
      <summary>
            Gets the value of inline setting. Inline element becomes a part of the content line, thus "inline".
            It can be wrapped or moved to the next line if it doesn't fit. Can't be sized explicitly.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Display.InlineBlock">
      <summary>
            Gets the value of inline block setting. InlineBlock element differs from inline element by its support for explicit sizing.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.Float">
      <summary>
            Defines floating elements behaviour.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.Float.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Appearance.Float" /> class.
            </summary>
      <param name="stringRepresentation">The string representation.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Float.Right">
      <summary>
            The element floats the right.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Float.Left">
      <summary>
            The element floats to the left.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.Float.None">
      <summary>
            The element is not floated, and will be displayed just where it occurs on the page. This is default.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.LengthUnit">
      <summary>
            Defines possible <see cref="T:Apitron.PDF.Kit.Styles.Length" /> units.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.LengthUnit.Percentage">
      <summary>
            Specifies that value depends on some external value using percentage factor.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.LengthUnit.Point">
      <summary>
            Specifies that unit of measure is PDF point, 1/72 inch.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.LengthUnit.Pixel">
      <summary>
            Specifies that unit of measure is a pixel, 1/96 inch normally.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.LengthUnit.Inch">
      <summary>
            Specifies that unit of measure is an inch.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.LengthUnit.Cm">
      <summary>
            Specifies that unit of measure is centimeter.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.LengthUnit.Auto">
      <summary>
            Specifies that value should be set automatically.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.ListStyle">
      <summary>
            Defines available list styles for elements. Can be used to create marked lists.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Appearance.ListStyle.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Appearance.ListStyle" /> class.
            </summary>
      <param name="stringRepresentation">The string representation.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListStyle.Ordered">
      <summary>
            Specifies that the list is an ordered list. Supported by <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Section" /> only.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListStyle.Unordered">
      <summary>
            Specifies that the list is an unordered list. Supported by <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Section" /> only.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListStyle.ListItem">
      <summary>
            Indicates that the item should be considered as a list item inside a list. Such items will be visually represented as block-level elements.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ListStyle.None">
      <summary>
            Indicates that list style should be overriden and no list style should be applied at all.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.ScriptLevel">
      <summary>
            Font scripting level definition.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ScriptLevel.Superscript">
      <summary>
            Used to set whether text should be drawn using above the preceding text block.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.ScriptLevel.Subscript">
      <summary>
             Used to set whether text should be drawn using below the preceding text block.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Text.TextRenderingMode">
      <summary>
            Defines possible text rendering modes.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.TextRenderingMode.Fill">
      <summary>
            Fill text.
            </summary>
      <value>
            The fill property value.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.TextRenderingMode.Stroke">
      <summary>
            Stroke text.
            </summary>
      <value>
            The stroke property value.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.SelectorParseException">
      <summary>
            Represents parsing exception, it's being thrown by <see cref="M:Apitron.PDF.Kit.Styles.StyleManager.RegisterStyle(System.String,Apitron.PDF.Kit.Styles.Style)" /> when invalid input for the style selector is being given during style registration.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Style">
      <summary>
        <para>
            Represents style information container, if one of the style properties is not set then it doesn't affect the element matched. 
            The value for the setting will be inferred from other matching style or from directly set value (can be set via the element's property).
            </para>
        <para>
            If there are no matching values for the setting and it's not set directly on the element instance then it will have the default value that depends on the element type.
            </para>
        <para>
            Some of the style properties can be inherited while others affect only the directly matched element, each property has the description of this behavior.
            </para>
      </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Style.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Style" /> class.
            <para>
            Style - is a set of properties that define ContentElement’s appearance, very similar to CSS they help to tune the look of the element by employing internal styling system based on selectors.
            </para><para>
            Selector – is a rule that defines which elements should be styled with the given set of properties, it consists of a rule itself that looks very similar to CSS notation and a property set.
            See <see cref="T:Apitron.PDF.Kit.Styles.StyleManager" /> help for more information on supported selectors.
            </para><para>
            All content elements have the same set of properties forming  style,  that can be set either directly or by using style selectors.
            A direct setting affects implicit style for the element and while selectors can affect multiple elements at once making it feasible to lessen the work needed to design a document.
            </para></summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Style.GetValue``1(Apitron.PDF.Kit.FlowLayout.PropertyDescriptor{``0})">
      <summary>
            Gets the value of the property described by </summary>
      <typeparam name="TPropertyType">The type of the property type.</typeparam>
      <param name="propertyDescriptor">The property descriptor.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.TextRenderingMode">
      <summary>
            Gets or sets the text rendering mode used to draw textual elements. 
            By default all text is being drawn using <see cref="P:Apitron.PDF.Kit.Styles.Text.TextRenderingMode.Fill" /> setting. Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.BackgroundImage">
      <summary>
            Gets or sets the background image for the element.
            The background of an element is the total size of the element, including padding (but not the margin and border).
            By default, a background-image is placed at the top-left corner of an element, and repeated both vertically and horizontally. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.BackgroundRepeat">
      <summary>
            Gets or sets the background repeat value for the element.
            The background repeat property sets if/how a background image will be repeated. By default, a background image is repeated both vertically and horizontally. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.BackgroundPosition">
      <summary>
            Gets or sets the background position value for the element.
            The background position property sets the starting position of a background image. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.ScriptLevel">
      <summary>
            Gets or sets the value used to create subscripting or superscripting effect. It defines the level of effect,  zero  can be used for normal scripting, positive values are for superscripting, negative for subscripting.
            Affects textual elements. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Clear">
      <summary>
            Gets or sets the clear flag for the element indicating whether it should ignore floating elements (if any) and start a new line. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Float">
      <summary>
            Gets or sets the value indicating that element can float. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Font">
      <summary>
            Gets or sets the font for the element. Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Display">
      <summary>
            Gets or sets the display setting for the element. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Width">
      <summary>
            Gets or sets the width of the element. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Height">
      <summary>
            Gets or sets the height of the element. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Margin">
      <summary>
            Gets or sets the margin around the element. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Padding">
      <summary>
            Gets or sets the padding. Not inheritable.
            </summary>
      <default>
             Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.CellPadding">
      <summary>
            Gets or sets the cell padding, affects only <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> elements. Not inheritable.
            </summary>
      <default>
             Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.InnerBorder">
      <summary>
            Gets or sets the inner border, affects only <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> elements. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Border">
      <summary>
            Gets or sets the border around the element. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.BorderLeft">
      <summary>
            Gets or sets the left border. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.BorderRight">
      <summary>
            Gets or sets the right border. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.BorderTop">
      <summary>
            Gets or sets the top border. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.BorderBottom">
      <summary>
            Gets or sets the bottom border. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.BorderRadius">
      <summary>
            Gets or sets the border radius. Can be set using percentage value, in this case it's calculated using content width including padding as a base. 
            If <see cref="P:Apitron.PDF.Kit.Styles.Style.BorderRadius" /> is being set to a non-null value, all other border values set except <see cref="P:Apitron.PDF.Kit.Styles.Style.Border" /> are ignored.
            Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Color">
      <summary>
            Gets or sets the foreground color for the element. Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.InnerBorderColor">
      <summary>
            Gets or sets the color of the inner border affects only <see cref="T:Apitron.PDF.Kit.FlowLayout.Content.Grid" /> elements. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.BorderColor">
      <summary>
            Gets or sets the color of the border. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Background">
      <summary>
            Gets or sets the background color. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.CharacterSpacing">
      <summary>
            Gets or sets the character spacing. Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.LineHeight">
      <summary>
            Gets or sets the height of the line. On a block container element whose content is composed of inline-level elements, 'line-height' specifies the minimal height of line boxes within the element. 
            On a non-inline element, 'line-height' specifies the height that is used in the calculation of the line box height.
            Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.Align">
      <summary>
            Gets or sets the horizontal alignment of the element’s content, it can be Left, Right, Center aligned or Justified. Only acceptable for block elements,
            this property will be ignored if the element used is not a block. Left, Right, Center values are supported by all elements. In case of Justify is used – only text elements will be affected.
            All elements inherit value from their block containers, only block elements can override parent’s Align setting.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.VerticalAlign">
      <summary>
            Gets or sets the vertical align. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.TextDecoration">
      <summary>
            Gets or sets the text decoration. Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.TextIndent">
      <summary>
            Gets or sets the text indent. Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.WordSpacing">
      <summary>
            Gets or sets the word spacing. Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.ListStyle">
      <summary>
            Gets or sets the list style. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.ListMarker">
      <summary>
            Gets or sets the list marker appearance. Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.ListMarkerPadding">
      <summary>
            Gets or sets the list marker padding. Inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Style.ListCounter">
      <summary>
            Gets or sets the list counter. Not inheritable.
            </summary>
      <default>
            Not set.
            </default>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.StyleManager">
      <summary>
            Style manager, it's responsible for styles processing and resolving.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.StyleManager.RegisterStyle(System.String,Apitron.PDF.Kit.Styles.Style)">
      <summary>
            Registers style and provides access to it using its selector. Selector – is a rule that defines which elements should be styled with the given set of properties, it consists of a rule itself that looks very similar to CSS notation and a property set.
            <para>
            Supported selectors:
            <list type="bullet"><item>Universal  selector (“*”),  selects all elements in document, represented as *. </item><item>Type selector (“_typename_”),  selects all elements of the given type. E.g. “textbox”. It's possible to list several types using comma, e.g. "textbox, section, image".</item><item>Class selector (“.classname”), selects all elements that belong to specific class. E.g. “*.myclass” selects all elements with class “myclass”. 
            Because element can have multiple classes set, it is possible to specify several classes in selector, for example “*.myclass1.myclass2”.</item><item>Id selector(“#elementID”). An element can have an id set, and this selector matches the element with specific id. Sample: “texbox#help”, selects the textbox element with ID “help”</item><item>
            Child selector (“[ancestor]&gt;child”), selects all elements that are immediate children of ancestor element, square brackets indicate optionality of the ancestor, in case of absence it will behave like as “*” would be set.
            <para>
            Samples: 
            </para><para>
            “&gt; textbox” – same as “textbox”, selects all textboxes that are children of any element.
            </para><para>
            “section &gt; textbox ” – select all textboxes which are placed in sections
            </para><para>
            “flowdocument &gt; section&gt; textbox.subheader” – selects all textboxes with class ”subheader” set, nested under any section that is a child of root element.
            </para></item><item>
            Descendant selector(“element_1    element_2”), selects all elements which are descendants of the given element.
            <para>
            Sample:
            </para><para>
            “section#header    image” – selects all images in section with ID=”header” regardless of the nesting.
            </para></item><item>
            Adjacent element selector (“predessor + element”), selects the element that precedes some element. 
            <para>
            Sample:
            </para><para>
            “image + textbox” – selects all images that precede a textbox.
            </para></item></list></para><para>
            How the styles are being resolved:
            <list type="number"><item> Directly assigned value is requested first. It's the value you set using arbitraty property of the content element.</item><item> If no value is set using p.1, we are trying to find its value using selectors and styles registered. 
                   a) look for all selectors that match given element 
                   b) select value according to matching rules (these rules are: specificity of the selector and order of addition, if specificity is the same, we use order)</item><item> Request parent's value if property is inheritable and use the same scheme </item></list></para>
            In general this styling system is close to CSS used with HTML, so one familiar with the latter can easily find similarities.
            </summary>
      <param name="selector">The selector.</param>
      <param name="style">The style.</param>
      <exception cref="T:System.ArgumentNullException"> if one of the arguments is null.</exception>
      <exception cref="T:Apitron.PDF.Kit.Styles.SelectorParseException"> if <paramref name="selector" /> has invalid format.</exception>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.StyleManager.Clear">
      <summary>
            Clears this instance by removing all registered styles.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.StyleManager.RegisteredStyles">
      <summary>
            Gets the read-only dictionary which contains registered styles.
            </summary>
      <value>
            The registered styles.
            </value>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Text.CharacterSpacing">
      <summary>
            Increases or decreases the space between characters in text.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Text.CharacterSpacing.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Text.CharacterSpacing" /> class.
            </summary>
      <param name="lenght">This value indicates inter-character space in addition to the default space between characters.Expressed in font units.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.CharacterSpacing.Lenght">
      <summary>
            This value indicates inter-character space in addition to the default space between characters. Zero is the default value, expressed in font units.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.CharacterSpacing.Default">
      <summary>
            Gets the default spacing.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Text.Font">
      <summary>
            Holds information about used font.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Text.Font.#ctor(System.String,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Text.Font" /> class.
            </summary>
      <param name="resourceID">The resource ID.</param>
      <param name="fontSizeInPoints">The font size in points.</param>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Text.Font.#ctor(Apitron.PDF.Kit.FixedLayout.Resources.Fonts.StandardFonts,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Text.Font" /> class.
            </summary>
      <param name="standardType1Font">The standard type1 font.</param>
      <param name="fontSizeInPoints">The font size in points.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.Font.Size">
      <summary>
            Gets the size of the font. For the detailed description please refer to the PDF spec. p.9.3 "Text State Parameters and Operators".
            </summary>
      <value>
            The size of the font.
            </value>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.Font.ResourceId">
      <summary>
            Gets the resource id of the font object.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Text.TextDecoration">
      <summary>
            The text-decoration property is used to set or remove decorations from text.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Text.TextDecoration.#ctor(Apitron.PDF.Kit.Styles.Text.TextDecorationOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Text.TextDecoration" /> class.
            </summary>
      <param name="options">The options.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.TextDecoration.Options">
      <summary>
            Gets the options.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Text.TextDecorationOptions">
      <summary>
            Defines text decoration options.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.Text.TextDecorationOptions.None">
      <summary>
            No decorations.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.Text.TextDecorationOptions.Underline">
      <summary>
            Text should be underlined.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.Text.TextDecorationOptions.Overline">
      <summary>
            Text should have the line drawn above its top.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Kit.Styles.Text.TextDecorationOptions.LineThrough">
      <summary>
            Text should have the line through.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Text.TextIndent">
      <summary>
            The text indent property is used to specify the indentation for the first line of textblock.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Text.TextIndent.#ctor(Apitron.PDF.Kit.Styles.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Text.TextIndent" /> class.
            </summary>
      <param name="indent">The indent, if specified as percentage then it's being calculated using percentage from the space given for a first line of text.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.TextIndent.Indent">
      <summary>
            Gets the indent.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.TextIndent.Default">
      <summary>
            Gets the default indent.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Appearance.VerticalAlign">
      <summary>
            Defines vertical alignment variations for an element, the element will be positioned with respect to this setting within containing block's content line.
            The height of the content line for the block or text element can be set using <see cref="P:Apitron.PDF.Kit.Styles.Style.LineHeight" /> setting.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.VerticalAlign.Top">
      <summary>
            Indicates that element should be aligned to the top.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.VerticalAlign.Bottom">
      <summary>
            Indicates that element should be aligned to the bottom.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Appearance.VerticalAlign.Middle">
      <summary>
            Indicates that element should be aligned by the middle of the containing block.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Kit.Styles.Text.WordSpacing">
      <summary>
            Increases or decreases the space between words in a text.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Kit.Styles.Text.WordSpacing.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Kit.Styles.Text.WordSpacing" /> class.
            </summary>
      <param name="lenght">This value indicates inter-word space in addition to the default space between words.Expressed in font units.</param>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.WordSpacing.Lenght">
      <summary>
            This value indicates inter-word space in addition to the default space between words. Zero is the default value, expressed in font units.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Kit.Styles.Text.WordSpacing.Default">
      <summary>
            Gets the default spacing.
            </summary>
    </member>
  </members>
</doc>